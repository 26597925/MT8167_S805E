From: WizMime<support@wiz.cn>
Subject: =?gb2312?B?MLHg0uvB97PMMS0tZW52c2V0dXAuc2jB97PM19+2wQ==?=
Date: Date: Mon, 23 Oct 2017 08:42:01 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="multipart/alternative";
	boundary="----=_Next_Part_0415202295.467"

This is a multi-part message in MIME format.

------=_Next_Part_0415202295.467
Content-Type: multipart/alternative;
	boundary="----=_Next_Part_0138400765.334"


------=_Next_Part_0138400765.334
Content-Type: text/plain;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

This is a multi-part message in MIME format.

------=_Next_Part_0138400765.334
Content-Type: text/html;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML><html><head>=0D=0A<meta http-equiv=3D"Content-Type=
" content=3D"text/html; charset=3Dgb2312">=0A=0A<title>0=B1=E0=D2=
=EB=C1=F7=B3=CC1--envsetup.sh=C1=F7=B3=CC=D7=DF=B6=C1</title>=0A=20=
   <!--mark |wiz_custom_css| for wizeditor replace it-->=0A<style=
 id=3D"wiz_custom_css">html, body {            font-size: 15px; =20=
      }        body {            font-family: Helvetica, 'Hiragin=
o Sans GB', '=CE=A2=C8=ED=D1=C5=BA=DA', 'Microsoft YaHei UI', Sim=
Sun, SimHei, arial, sans-serif;            line-height: 1.6;    =20=
       margin: 0;            padding: 20px 15px;            paddi=
ng: 1.33rem 1rem;        }        h1, h2, h3, h4, h5, h6 {      =20=
     margin: 20px 0 10px;            margin: 1.33rem 0 0.667rem;=20=
           padding: 0;            font-weight: bold;        }   =20=
    h1 {            font-size: 21px;            font-size: 1.4rem=
;        }        h2 {            font-size: 20px;            fon=
t-size: 1.33rem;        }        h3 {            font-size: 18px;=
            font-size: 1.2rem;        }        h4 {            fo=
nt-size: 17px;            font-size: 1.13rem;        }        h5=20=
{            font-size: 15px;            font-size: 1rem;       =20=
}        h6 {            font-size: 15px;            font-size: 1=
rem;            color: #777777;            margin: 1rem 0;      =20=
 }        div, p, ul, ol, dl, li {            margin: 0;        }=
        blockquote, table, pre, code {            margin: 8px 0;=20=
       }        ul, ol {            padding-left: 32px;         =20=
  padding-left: 2.13rem;        }        blockquote {           =20=
padding: 0 12px;            padding: 0 0.8rem;        }        bl=
ockquote > :first-child {            margin-top: 0;        }    =20=
   blockquote > :last-child {            margin-bottom: 0;      =20=
 }        img {            border: 0;            max-width: 100%;=
            height: auto !important;            margin: 2px 0;  =20=
     }        table {            border-collapse: collapse;     =20=
      border: 1px solid #bbbbbb;        }        td, th {       =20=
    padding: 4px 8px;            border-collapse: collapse;     =20=
      border: 1px solid #bbbbbb;			        }        @media only s=
creen and (-webkit-max-device-width: 1024px), only screen and (-o=
-max-device-width: 1024px), only screen and (max-device-width: 10=
24px), only screen and (-webkit-min-device-pixel-ratio: 3), only=20=
screen and (-o-min-device-pixel-ratio: 3), only screen and (min-d=
evice-pixel-ratio: 3) {            html, body {                fo=
nt-size: 17px;            }            body {                line=
-height: 1.7;                padding: 0.75rem 0.9375rem;        =20=
       color: #353c47;            }            h1 {             =20=
  font-size: 2.125rem;            }            h2 {             =20=
  font-size: 1.875rem;            }            h3 {             =20=
  font-size: 1.625rem;            }            h4 {             =20=
  font-size: 1.375rem;            }            h5 {             =20=
  font-size: 1.125rem;            }            h6 {             =20=
  color: inherit;            }            ul, ol {              =20=
 padding-left: 2.5rem;            }            blockquote {     =20=
          padding: 0 0.9375rem;            }        }</style></he=
ad>=0A=0A<body spellcheck=3D"false" ><div><div></div><div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">function hmm()</span></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">function build_build_var_ca=
che()</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">function destroy_build_var_cache()</sp=
an></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">function get_abs_build_var()</span></div><div><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">function get_build_var()</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">function check_pro=
duct()</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;"><b>VARIANT_CHOICES=3D(user userdebug=20=
eng)</b></span><b style=3D"font-size: 13.005px; line-height: 20.8=
08px;">&nbsp;&nbsp;<span data-wiz-span=3D"data-wiz-span" style=3D=
"color: rgb(0, 0, 255);">--&gt;</span></b><b style=3D"font-size:=20=
0.867rem; line-height: 1.6;"><span data-wiz-span=3D"data-wiz-span=
" style=3D"color: rgb(0, 0, 255);">=CA=FD=D7=E9=B3=F5=CA=BC=BB=AF=
=A3=AC=D3=C3=D3=DA=B1=E0=D2=EB=B0=E6=B1=BE=B5=C4=D1=A1=D4=F1</spa=
n></b></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">function check_variant()</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">function setpaths()</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">function printconfig()=
</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">function set_stuff_for_environment()</span>=
</div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">function set_sequence_number()</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">function settitle()</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;"><b><span data-wiz-span=
=3D"data-wiz-span" style=3D"color: rgb(255, 0, 0);"><span data-wi=
z-span=3D"data-wiz-span" style=3D"color: rgb(0, 0, 0);">function=20=
addcompletions() </span>&nbsp;--&gt;BASH_VERSINFO=CE=AA=CF=B5=CD=B3=
=C4=DA=B2=BF=B1=E4=C1=BF=A3=AC=D5=E2=CA=C76=B8=F6=D4=AA=CB=D8=B5=C4=
=CA=FD=D7=E9=A3=AC=BF=C9=D2=D4=D4=DA=C3=FC=C1=EE=D0=D0=CD=A8=B9=FD=
echo $BASH_VERSINFO=BB=F2=D5=DF${BASH_VERSINFO[0]}=D6=F0=B8=F6=D1=
=E9=D6=A4=A3=AC=D4=DA=CE=C4=BC=FE=CE=B2=B5=F7=D3=C3</span></b></s=
pan></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">function choosetype()</span></div><div><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">fun=
ction chooseproduct()</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">function choosevariant=
()</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">function choosecombo()</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
"><b>unset LUNCH_MENU_CHOICES &nbsp;<span data-wiz-span=3D"data-w=
iz-span" style=3D"color: rgb(0, 0, 255);">--&gt;=D5=E2=C0=EF=CE=AA=
=D6=C3=BF=D5=CA=FD=D7=E9=B1=E4=C1=BF=A3=AC=B1=DC=C3=E2=D6=D8=D0=C2=
lunch=B5=C4=CA=B1=BA=F2=B4=E6=D4=DA=B8=C3=B1=E4=C1=BF=B2=A2=C7=D2=
=B4=E6=D4=DA=B7=C7=D4=A4=C6=DA=D6=B5</span></b></span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">function add_lunch_combo()</span></div><div><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;"><b># add the=20=
default one here &nbsp;<span data-wiz-span=3D"data-wiz-span" styl=
e=3D"color: rgb(0, 0, 255);">--&gt;=CA=D7=CF=C8=CC=ED=BC=D3=D2=D4=
=CF=C26=B8=F6=C4=AC=C8=CF=B1=E0=D2=EB=B9=A4=B3=CC=D1=A1=CF=EE=B5=BD=
LUNCH_MENU_CHOICES=CA=FD=D7=E9=D6=D0</span></b></span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">add_lunch_combo aosp_arm-eng</span></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">add_lunch_c=
ombo aosp_arm64-eng</span></div><div><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">add_lunch_combo aosp_mip=
s-eng</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">add_lunch_combo aosp_mips64-eng</span>=
</div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">add_lunch_combo aosp_x86-eng</span></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
add_lunch_combo aosp_x86_64-eng</span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">function pri=
nt_lunch_menu()</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;"><b><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"color: rgb(255, 0, 0);"><span data-wiz-span=
=3D"data-wiz-span" style=3D"color: rgb(0, 0, 0);">function lunch(=
) &nbsp;</span>--&gt;=D6=D8=B5=E3=BA=AF=CA=FD=A3=AC=D4=DA=CF=C2=D2=
=BB=D0=A1=BD=DA=D7=A8=C3=C5=B7=D6=CE=F6</span></b></span></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;"><b>function _lunch() &nbsp;<span data-wiz-span=3D"data-wiz=
-span" style=3D"color: rgb(0, 0, 255);">--&gt;COMP_WORDS=A1=A2COM=
P_CWORD=A1=A2COMPREPLY=CE=AAshell=C4=DA=D6=C3=B1=E4=C1=BF=A3=BA=B4=
=E6=B7=C5=C3=FC=C1=EE=D0=D0=D6=D0=CA=E4=C8=EB=B5=C4=B5=A5=B4=CA=A3=
=A8=CA=FD=D7=E9=A3=A9=A1=A2=B4=E6=B7=C5COMP_WORDS=B5=C4=CB=F7=D2=FD=
=A3=A8=D5=FB=D0=CD=A3=A9=A1=A2=BA=F2=D1=A1=B5=C4=B2=B9=C8=AB=BD=E1=
=B9=FB=A3=A8=CA=FD=D7=E9=A3=A9</span></b></span></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"><b=
>complete -F _lunch lunch &nbsp;<span data-wiz-span=3D"data-wiz-s=
pan" style=3D"color: rgb(0, 0, 255);">--&gt;=D7=D4=B6=AF=B2=B9=C8=
=AB=C3=FC=C1=EE=A3=AC=D6=B4=D0=D0lunch=B5=C4=CA=B1=BA=F2=A3=AC=D7=
=D4=B6=AF=B2=B9=C8=AB=B5=C4=B5=A5=B4=CA=D3=C9=BA=AF=CA=FD_lunch=BC=
=C6=CB=E3=CB=F9=B5=C3</span></b></span></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">function ta=
pas()</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">function gettop</span></div><div><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">f=
unction getdriver()</span></div><div><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">function m()</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">function findmakefile()</span></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">function m=
m()</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">function mmm()</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">functi=
on mma()</span></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">function mmma()</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">function croot()</span></div><div><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">function cproj()</span></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">function qpid()</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">function pid()<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">function coredump_setup()</span></div><div><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">function coredump_enable()</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">function core(=
)</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">function systemstack()</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">function stacks()</span></div><div><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">function is64bit()</span=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;"><b><span data-wiz-span=3D"data-wiz-span" style=3D=
"color: rgb(0, 0, 255);">case `uname -s` in</span></b></span></di=
v><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;"><b><span data-wiz-span=3D"data-wiz-span" style=3D"colo=
r: rgb(0, 0, 255);">&nbsp; &nbsp; Darwin)</span></b></span></div>=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;"><b><span data-wiz-span=3D"data-wiz-span" style=3D"color:=
 rgb(0, 0, 255);">&nbsp; &nbsp; &nbsp; &nbsp; function sgrep()</s=
pan></b></span></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;"><b><span data-wiz-span=3D"data-wiz-=
span" style=3D"color: rgb(0, 0, 255);">&nbsp; &nbsp; &nbsp; &nbsp=
; {</span></b></span></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;"><b><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"color: rgb(0, 0, 255);">&nbsp; &nbsp; &nbsp;=
 &nbsp; &nbsp; &nbsp; find -E . -name .repo -prune -o -name .git=20=
-prune -o &nbsp;-type f -iregex '.*\.(c|h|cc|cpp|S|java|xml|sh|mk=
|aidl|vts)' \</span></b></span></div><div><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;"><b><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"color: rgb(0, 0, 255);">&nbsp; &nb=
sp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -exec grep --color=20=
-n "$@" {} +</span></b></span></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;"><b><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"color: rgb(0, 0, 255);">&nbsp; &nbs=
p; &nbsp; &nbsp; }</span></b></span></div><div><b><br></b></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;"><b><span data-wiz-span=3D"data-wiz-span" style=3D"color:=20=
rgb(0, 0, 255);">&nbsp; &nbsp; &nbsp; &nbsp; ;;</span></b></span>=
</div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;"><b><span data-wiz-span=3D"data-wiz-span" style=3D"=
color: rgb(0, 0, 255);">&nbsp; &nbsp; *)</span></b></span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;"><b><span data-wiz-span=3D"data-wiz-span" style=3D"color:=20=
rgb(0, 0, 255);">&nbsp; &nbsp; &nbsp; &nbsp; function sgrep()</sp=
an></b></span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;"><b><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"color: rgb(0, 0, 255);">&nbsp; &nbsp; &nbsp; &nbsp;=
 {</span></b></span></div><div><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;"><b><span data-wiz-span=3D"data=
-wiz-span" style=3D"color: rgb(0, 0, 255);">&nbsp; &nbsp; &nbsp;=20=
&nbsp; &nbsp; &nbsp; find . -name .repo -prune -o -name .git -pru=
ne -o &nbsp;-type f -iregex '.*\.\(c\|h\|cc\|cpp\|S\|java\|xml\|s=
h\|mk\|aidl\|vts\)' \</span></b></span></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"><b><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"color: rgb(0, 0, 255);">&n=
bsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -exec grep=20=
--color -n "$@" {} +</span></b></span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;"><b><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"color: rgb(0, 0, 255);">&nb=
sp; &nbsp; &nbsp; &nbsp; }</span></b></span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"><b><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"color: rgb(0, 0, 255)=
;">&nbsp; &nbsp; &nbsp; &nbsp; ;;</span></b></span></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
><b><span data-wiz-span=3D"data-wiz-span" style=3D"color: rgb(0,=20=
0, 255);">esac</span></b></span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">function gettarget=
arch</span></div><div><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">function ggrep()</span></div><div><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">f=
unction jgrep()</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">function cgrep()</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">function resgrep()</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">function mangre=
p()</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">function sepgrep()</span></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">fu=
nction rcgrep()</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;"><b><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"color: rgb(0, 0, 0);">case `uname -s` in</s=
pan></b></span></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;"><b><span data-wiz-span=3D"data-wiz-=
span" style=3D"color: rgb(0, 0, 0);">&nbsp; &nbsp; Darwin)</span>=
</b></span></div><div><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;"><b><span data-wiz-span=3D"data-wiz-span=
" style=3D"color: rgb(0, 0, 0);">&nbsp; &nbsp; &nbsp; &nbsp; func=
tion mgrep()</span></b></span></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;"><b><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"color: rgb(0, 0, 0);">&nbsp; &nbsp;=
 &nbsp; &nbsp; {</span></b></span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;"><b><span data-wiz-=
span=3D"data-wiz-span" style=3D"color: rgb(0, 0, 0);">&nbsp; &nbs=
p; &nbsp; &nbsp; &nbsp; &nbsp; find -E . -name .repo -prune -o -n=
ame .git -prune -o -path ./out -prune -o -type f -iregex '.*/(Mak=
efile|Makefile\..*|.*\.make|.*\.mak|.*\.mk)' \</span></b></span><=
/div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;"><b><span data-wiz-span=3D"data-wiz-span" style=3D"c=
olor: rgb(0, 0, 0);">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &n=
bsp; &nbsp; -exec grep --color -n "$@" {} +</span></b></span></di=
v><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;"><b><span data-wiz-span=3D"data-wiz-span" style=3D"colo=
r: rgb(0, 0, 0);">&nbsp; &nbsp; &nbsp; &nbsp; }</span></b></span>=
</div><div><b><br></b></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;"><b><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"color: rgb(0, 0, 0);">&nbsp; &nbsp; &nbsp;=20=
&nbsp; function treegrep()</span></b></span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"><b><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"color: rgb(0, 0, 0);"=
>&nbsp; &nbsp; &nbsp; &nbsp; {</span></b></span></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"><b=
><span data-wiz-span=3D"data-wiz-span" style=3D"color: rgb(0, 0,=20=
0);">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; find -E . -name .r=
epo -prune -o -name .git -prune -o -type f -iregex '.*\.(c|h|cpp|=
S|java|xml)' \</span></b></span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;"><b><span data-wiz-=
span=3D"data-wiz-span" style=3D"color: rgb(0, 0, 0);">&nbsp; &nbs=
p; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -exec grep --color -=
n -i "$@" {} +</span></b></span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;"><b><span data-wiz-=
span=3D"data-wiz-span" style=3D"color: rgb(0, 0, 0);">&nbsp; &nbs=
p; &nbsp; &nbsp; }</span></b></span></div><div><b><br></b></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;"><b><span data-wiz-span=3D"data-wiz-span" style=3D"color:=20=
rgb(0, 0, 0);">&nbsp; &nbsp; &nbsp; &nbsp; ;;</span></b></span></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;"><b><span data-wiz-span=3D"data-wiz-span" style=3D"co=
lor: rgb(0, 0, 0);">&nbsp; &nbsp; *)</span></b></span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;"><b><span data-wiz-span=3D"data-wiz-span" style=3D"color: rgb(=
0, 0, 0);">&nbsp; &nbsp; &nbsp; &nbsp; function mgrep()</span></b=
></span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;"><b><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"color: rgb(0, 0, 0);">&nbsp; &nbsp; &nbsp; &nbsp; {</span=
></b></span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;"><b><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"color: rgb(0, 0, 0);">&nbsp; &nbsp; &nbsp; &nbsp; &nb=
sp; &nbsp; find . -name .repo -prune -o -name .git -prune -o -pat=
h ./out -prune -o -regextype posix-egrep -iregex '(.*\/Makefile|.=
*\/Makefile\..*|.*\.make|.*\.mak|.*\.mk)' -type f \</span></b></s=
pan></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;"><b><span data-wiz-span=3D"data-wiz-span" style=
=3D"color: rgb(0, 0, 0);">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbs=
p; &nbsp; &nbsp; -exec grep --color -n "$@" {} +</span></b></span=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;"><b><span data-wiz-span=3D"data-wiz-span" style=3D=
"color: rgb(0, 0, 0);">&nbsp; &nbsp; &nbsp; &nbsp; }</span></b></=
span></div><div><b><br></b></div><div><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;"><b><span data-wiz-span=3D=
"data-wiz-span" style=3D"color: rgb(0, 0, 0);">&nbsp; &nbsp; &nbs=
p; &nbsp; function treegrep()</span></b></span></div><div><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"><b>=
<span data-wiz-span=3D"data-wiz-span" style=3D"color: rgb(0, 0, 0=
);">&nbsp; &nbsp; &nbsp; &nbsp; {</span></b></span></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
><b><span data-wiz-span=3D"data-wiz-span" style=3D"color: rgb(0,=20=
0, 0);">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; find . -name .r=
epo -prune -o -name .git -prune -o -regextype posix-egrep -iregex=
 '.*\.(c|h|cpp|S|java|xml)' -type f \</span></b></span></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;"><b><span data-wiz-span=3D"data-wiz-span" style=3D"color: rgb=
(0, 0, 0);">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbs=
p; -exec grep --color -n -i "$@" {} +</span></b></span></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;"><b><span data-wiz-span=3D"data-wiz-span" style=3D"color: rgb=
(0, 0, 0);">&nbsp; &nbsp; &nbsp; &nbsp; }</span></b></span></div>=
<div><b><br></b></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;"><b><span data-wiz-span=3D"data-wiz=
-span" style=3D"color: rgb(0, 0, 0);">&nbsp; &nbsp; &nbsp; &nbsp;=
 ;;</span></b></span></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;"><b><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"color: rgb(0, 0, 0);">esac</span></b></span>=
</div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">function getprebuilt</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">function=
 tracedmdump()</span></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">function runhat()</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">function getbugreports()</span></div><div><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">function=20=
getsdcardpath()</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">function getscreenshotpath()=
</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">function getlastscreenshot()</span></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">function startviewserver()</span></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">function s=
topviewserver()</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">function isviewserverstarted=
()</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">function key_home()</span></div><div><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">f=
unction key_back()</span></div><div><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">function key_menu()</span=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">function smoketest()</span></div><div><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">functio=
n runtest()</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">function godir ()</span></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;"><b>function set_java_home() &nbsp;<span data-wiz-span=3D"d=
ata-wiz-span" style=3D"color: rgb(0, 0, 255);">--&gt;=C9=E8=D6=C3=
=C4=AC=C8=CF=B1=E0=D2=EB=BB=B7=BE=B3=B1=E4=C1=BF=A3=AC=B1=E0=D2=EB=
=B2=BB=CD=AC=B5=C4android=B0=E6=B1=BE=B4=FA=C2=EB=D2=BB=B0=E3=B6=BC=
=CA=C7=D4=DA=D5=E2=C0=EF=C9=E8=D6=C3=BB=B7=BE=B3=B1=E4=C1=BF=D7=F7=
=C7=F8=B7=D6</span></b></span></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">function pez</span><=
/div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">function get_make_command()</span></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">fu=
nction make()</span></div><div><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">function provision()</span></d=
iv><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;"><b>if [ "x$SHELL" !=3D "x/bin/bash" ]; then &nbsp;<sp=
an data-wiz-span=3D"data-wiz-span" style=3D"color: rgb(0, 0, 255)=
;">--&gt;=C4=AC=C8=CF=C7=E9=BF=F6=CF=C2=CE=AAbash=A3=AC=D2=B2=BE=CD=
=CA=C7=B2=BB=BB=E1=D7=DF=B8=C4=C5=D0=B6=CF=C2=B7=CF=DF</span></b>=
</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;"><b>&nbsp; &nbsp; case `ps -o command -p $$`=
 in</b></span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;"><b>&nbsp; &nbsp; &nbsp; &nbsp; *bash=
*)</b></span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=
 &nbsp; ;;</b></span></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;"><b>&nbsp; &nbsp; &nbsp; &nbsp=
; *)</b></span></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbs=
p; &nbsp; echo "WARNING: Only bash is supported, use of other she=
ll would lead to erroneous results"</b></span></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"><b>&=
nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;;</b></span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;"><b>&nbsp; &nbsp; esac</b></span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;"><b>fi</b></spa=
n></div><div><br></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;"><b># Execute the contents of any=20=
vendorsetup.sh files we can find.</b></span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"><b>for=
 f in `test -d device &amp;&amp; find -L device -maxdepth 4 -name=
 'vendorsetup.sh' 2&gt; /dev/null | sort` \</b></span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;`test -d vendor &amp;&am=
p; find -L vendor -maxdepth 4 -name 'vendorsetup.sh' 2&gt; /dev/n=
ull | sort` \</b></span></div><div><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;"><b>&nbsp; &nbsp; &nbsp; &n=
bsp; &nbsp;`test -d product &amp;&amp; find -L product -maxdepth=20=
4 -name 'vendorsetup.sh' 2&gt; /dev/null | sort`</b></span></div>=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;"><b>do</b></span></div><div><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;"><b>&nbsp; &nbsp; echo "in=
cluding $f"</b></span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;"><b>&nbsp; &nbsp; . $f</b></s=
pan></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;"><b>done</b></span></div><div><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;"><b>unset f</b=
></span></div><div><b><br></b></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;"><b><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"color: rgb(255, 0, 0);">addcompleti=
ons</span></b></span></div><div><br></div></div></div></body></ht=
ml>

------=_Next_Part_0138400765.334--

------=_Next_Part_0415202295.467--

