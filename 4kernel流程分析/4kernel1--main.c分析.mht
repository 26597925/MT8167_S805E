From: WizMime<support@wiz.cn>
Subject: =?gb2312?B?NGtlcm5lbDEtLW1haW4uY7fWzvY=?=
Date: Date: Mon, 23 Oct 2017 08:43:35 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="multipart/alternative";
	boundary="----=_Next_Part_0415485984.006"

This is a multi-part message in MIME format.

------=_Next_Part_0415485984.006
Content-Type: multipart/alternative;
	boundary="----=_Next_Part_0138495328.101"


------=_Next_Part_0138495328.101
Content-Type: text/plain;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

This is a multi-part message in MIME format.

------=_Next_Part_0138495328.101
Content-Type: text/html;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML><html><head>=0D=0A<meta http-equiv=3D"Content-Type=
" content=3D"text/html; charset=3Dgb2312">=0A=0A<title>4kernel1--=
main.c=B7=D6=CE=F6</title>=0A    <!--mark |wiz_custom_css| for wi=
zeditor replace it-->=0A<style id=3D"wiz_custom_css">html, body {=
            font-size: 15px;        }        body {            fo=
nt-family: Helvetica, 'Hiragino Sans GB', '=CE=A2=C8=ED=D1=C5=BA=DA=
', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;     =20=
      line-height: 1.6;            margin: 0;            padding:=
 20px 15px;            padding: 1.33rem 1rem;        }        h1,=
 h2, h3, h4, h5, h6 {            margin: 20px 0 10px;           =20=
margin: 1.33rem 0 0.667rem;            padding: 0;            fon=
t-weight: bold;        }        h1 {            font-size: 21px;=20=
           font-size: 1.4rem;        }        h2 {            fon=
t-size: 20px;            font-size: 1.33rem;        }        h3 {=
            font-size: 18px;            font-size: 1.2rem;      =20=
 }        h4 {            font-size: 17px;            font-size:=20=
1.13rem;        }        h5 {            font-size: 15px;       =20=
    font-size: 1rem;        }        h6 {            font-size: 1=
5px;            font-size: 1rem;            color: #777777;     =20=
      margin: 1rem 0;        }        div, p, ul, ol, dl, li {  =20=
         margin: 0;        }        blockquote, table, pre, code=20=
{            margin: 8px 0;        }        ul, ol {            p=
adding-left: 32px;            padding-left: 2.13rem;        }   =20=
    blockquote {            padding: 0 12px;            padding:=20=
0 0.8rem;        }        blockquote > :first-child {           =20=
margin-top: 0;        }        blockquote > :last-child {       =20=
    margin-bottom: 0;        }        img {            border: 0;=
            max-width: 100%;            height: auto !important;=20=
           margin: 2px 0;        }        table {            bord=
er-collapse: collapse;            border: 1px solid #bbbbbb;    =20=
   }        td, th {            padding: 4px 8px;            bord=
er-collapse: collapse;            border: 1px solid #bbbbbb;			 =20=
      }        @media only screen and (-webkit-max-device-width:=20=
1024px), only screen and (-o-max-device-width: 1024px), only scre=
en and (max-device-width: 1024px), only screen and (-webkit-min-d=
evice-pixel-ratio: 3), only screen and (-o-min-device-pixel-ratio=
: 3), only screen and (min-device-pixel-ratio: 3) {            ht=
ml, body {                font-size: 17px;            }         =20=
  body {                line-height: 1.7;                padding:=
 0.75rem 0.9375rem;                color: #353c47;            } =20=
          h1 {                font-size: 2.125rem;            } =20=
          h2 {                font-size: 1.875rem;            } =20=
          h3 {                font-size: 1.625rem;            } =20=
          h4 {                font-size: 1.375rem;            } =20=
          h5 {                font-size: 1.125rem;            } =20=
          h6 {                color: inherit;            }      =20=
     ul, ol {                padding-left: 2.5rem;            } =20=
          blockquote {                padding: 0 0.9375rem;     =20=
      }        }</style></head>=0A=0A<body spellcheck=3D"false" >=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;"><b><span data-wiz-span=3D"data-wiz-span" style=3D"color:=
 rgb(255, 0, 0);">kernel-4.4/init/main.c</span></b></span><br></d=
iv><div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">/*</span></div><div><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">&nbsp;* &nbsp;linux/init=
/main.c</span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">&nbsp;*</span></div><div><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;*=
 &nbsp;Copyright (C) 1991, 1992 &nbsp;Linus Torvalds</span></div>=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">&nbsp;*</span></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">&nbsp;* &nbsp;GK 2/5/95 &nb=
sp;- &nbsp;Changed to support mounting root fs via NFS</span></di=
v><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">&nbsp;* &nbsp;Added initrd &amp; change_root: Werner A=
lmesberger &amp; Hans Lermen, Feb '96</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=
* &nbsp;Moan early if gcc is old, avoiding bogus kernels - Paul G=
ortmaker, May '96</span></div><div><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">&nbsp;* &nbsp;Simplified s=
tarting of init: &nbsp;Michael A. Griffith &lt;grif@acm.org&gt;</=
span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">&nbsp;*/</span></div><div><br></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
#define DEBUG</span><span class=3D"Apple-tab-span" style=3D"white=
-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">/* Enable initcall_debug */</=
span></div><div><br></div><div><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">#include &lt;linux/types.h&gt;=
</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">#include &lt;linux/module.h&gt;</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">#include &lt;linux/proc_fs.h&gt;</span></div><div><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#=
include &lt;linux/kernel.h&gt;</span></div><div><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#include &lt;=
linux/syscalls.h&gt;</span></div><div><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">#include &lt;linux/stac=
kprotector.h&gt;</span></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">#include &lt;linux/string.h=
&gt;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">#include &lt;linux/ctype.h&gt;</span></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">#include &lt;linux/delay.h&gt;</span></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
#include &lt;linux/ioport.h&gt;</span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#include &lt=
;linux/init.h&gt;</span></div><div><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">#include &lt;linux/initrd.=
h&gt;</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">#include &lt;linux/bootmem.h&gt;</span=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">#include &lt;linux/acpi.h&gt;</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">#include &lt;linux/tty.h&gt;</span></div><div><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#include &lt;=
linux/percpu.h&gt;</span></div><div><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">#include &lt;linux/kmod.h=
&gt;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">#include &lt;linux/vmalloc.h&gt;</span>=
</div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">#include &lt;linux/kernel_stat.h&gt;</span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">#include &lt;linux/start_kernel.h&gt;</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">#include &lt;linux/security.h&gt;</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#include=
 &lt;linux/smp.h&gt;</span></div><div><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">#include &lt;linux/prof=
ile.h&gt;</span></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">#include &lt;linux/rcupdate.h&gt;<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">#include &lt;linux/moduleparam.h&gt;</span><=
/div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">#include &lt;linux/kallsyms.h&gt;</span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">#include &lt;linux/writeback.h&gt;</span></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#incl=
ude &lt;linux/cpu.h&gt;</span></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">#include &lt;linux/c=
puset.h&gt;</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">#include &lt;linux/cgroup.h&gt;<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">#include &lt;linux/efi.h&gt;</span></div><di=
v><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">#include &lt;linux/tick.h&gt;</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#include=
 &lt;linux/interrupt.h&gt;</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">#include &lt;linux=
/taskstats_kern.h&gt;</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">#include &lt;linux/del=
ayacct.h&gt;</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">#include &lt;linux/unistd.h&gt;=
</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">#include &lt;linux/rmap.h&gt;</span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">#include &lt;linux/mempolicy.h&gt;</span></div><div><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#=
include &lt;linux/key.h&gt;</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">#include &lt;linux=
/buffer_head.h&gt;</span></div><div><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">#include &lt;linux/page_e=
xt.h&gt;</span></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">#include &lt;linux/debug_locks.h&gt=
;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">#include &lt;linux/debugobjects.h&gt;</spa=
n></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">#include &lt;linux/lockdep.h&gt;</span></div><di=
v><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">#include &lt;linux/kmemleak.h&gt;</span></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#inc=
lude &lt;linux/pid_namespace.h&gt;</span></div><div><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#include=20=
&lt;linux/device.h&gt;</span></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">#include &lt;linux/kt=
hread.h&gt;</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">#include &lt;linux/sched.h&gt;</=
span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">#include &lt;linux/signal.h&gt;</span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">#include &lt;linux/idr.h&gt;</span></div><div><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#includ=
e &lt;linux/kgdb.h&gt;</span></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">#include &lt;linux/ft=
race.h&gt;</span></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">#include &lt;linux/async.h&gt;</s=
pan></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">#include &lt;linux/kmemcheck.h&gt;</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">#include &lt;linux/sfi.h&gt;</span></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#incl=
ude &lt;linux/shmem_fs.h&gt;</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#include &lt;li=
nux/slab.h&gt;</span></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">#include &lt;linux/perf_event=
.h&gt;</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">#include &lt;linux/file.h&gt;</span><=
/div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">#include &lt;linux/ptrace.h&gt;</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">#include &lt;linux/blkdev.h&gt;</span></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#include &=
lt;linux/elevator.h&gt;</span></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">#include &lt;linux/s=
ched_clock.h&gt;</span></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">#include &lt;linux/context_=
tracking.h&gt;</span></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">#include &lt;linux/random.h&g=
t;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">#include &lt;linux/list.h&gt;</span></div>=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">#include &lt;linux/integrity.h&gt;</span></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
#include &lt;linux/proc_ns.h&gt;</span></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#include &l=
t;linux/io.h&gt;</span></div><div><br></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#include &lt=
;asm/io.h&gt;</span></div><div><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">#include &lt;asm/bugs.h&gt;</s=
pan></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">#include &lt;asm/setup.h&gt;</span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">#include &lt;asm/sections.h&gt;</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#include=
 &lt;asm/cacheflush.h&gt;</span></div><div><br></div><div><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#if=
def CONFIG_MTK_RAM_CONSOLE</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">#include &lt;mt-pl=
at/mtk_ram_console.h&gt;</span></div><div><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">#endif</span></div>=
<div><br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">static int kernel_init(void *);</span></di=
v><div><br></div><div><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">extern void init_IRQ(void);</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">extern void fork_init(void);</span></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">exter=
n void radix_tree_init(void);</span></div><div><br></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>/*</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp;* Debug helper: via this flag we kno=
w that we are in 'early bootup code'</span></div><div><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;*=
 where only the boot processor is running with IRQ disabled. &nbs=
p;This means</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">&nbsp;* two things - IRQ must n=
ot be enabled before the flag is cleared and some</span></div><di=
v><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">&nbsp;* operations which are not allowed with IRQ disabled=20=
are allowed while the</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;* flag is set.</=
span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">&nbsp;*/</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">bool early_boot=
_irqs_disabled __read_mostly;</span></div><div><br></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>enum system_states system_state __read_mostly;</span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">EXPORT_SYMBOL(system_state);</span></div><div><br></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">/*</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">&nbsp;* Boot command-line arguments</=
span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">&nbsp;*/</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#define MAX_INI=
T_ARGS CONFIG_INIT_ENV_ARG_LIMIT</span></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#define MAX=
_INIT_ENVS CONFIG_INIT_ENV_ARG_LIMIT</span></div><div><br></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">extern void time_init(void);</span></div><div><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/* Defa=
ult late time init is NULL. archs can override this later. */</sp=
an></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">void (*__initdata late_time_init)(void);</span>=
</div><div><br></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">/* Untouched command line saved by=20=
arch-specific code. */</span></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">char __initdata boot_=
command_line[COMMAND_LINE_SIZE];</span></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/* Untouche=
d saved command line (eg. for /proc) */</span></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">char=
 *saved_command_line;</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">/* Command line for pa=
rameter parsing */</span></div><div><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">static char *static_comma=
nd_line;</span></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">/* Command line for per-initcall pa=
rameter parsing */</span></div><div><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">static char *initcall_com=
mand_line;</span></div><div><br></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">static char *execu=
te_command;</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">static char *ramdisk_execute_com=
mand;</span></div><div><br></div><div><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">/*</span></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>&nbsp;* Used to generate warnings if static_key manipulation fun=
ctions are used</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">&nbsp;* before jump_label_in=
it is called.</span></div><div><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">&nbsp;*/</span></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
bool static_key_initialized __read_mostly;</span></div><div><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">E=
XPORT_SYMBOL_GPL(static_key_initialized);</span></div><div><br></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">/*</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">&nbsp;* If set, this is an i=
ndication to the drivers that reset the underlying</span></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">&nbsp;* device before going ahead with the initialization=20=
otherwise driver might</span></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;* rely on the B=
IOS and skip the reset operation.</span></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;*</s=
pan></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">&nbsp;* This is useful if kernel is booting in=
 an unreliable environment.</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;* For ex. kd=
ump situation where previous kernel has crashed, BIOS has been</s=
pan></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">&nbsp;* skipped and devices will be in unknown=
 state.</span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">&nbsp;*/</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">unsign=
ed int reset_devices;</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">EXPORT_SYMBOL(reset_de=
vices);</span></div><div><br></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">static int __init set=
_reset_devices(char *str)</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">{</span></div><div=
><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</=
span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">reset_devices =3D 1;</span></div><div><span class=
=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">return 1;</span></div><div><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">}</span></div><div><br></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">__setup("reset_devices", set_reset_devices);</span></div>=
<div><br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">static const char *argv_init[MAX_INIT_ARGS=
+2] =3D { "init", NULL, };</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">const char *envp_i=
nit[MAX_INIT_ENVS+2] =3D { "HOME=3D/", "TERM=3Dlinux", NULL, };</=
span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">static const char *panic_later, *panic_param;=
</span></div><div><br></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">extern const struct obs_kern=
el_param __setup_start[], __setup_end[];</span></div><div><br></d=
iv><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">static int __init obsolete_checksetup(char *line)</sp=
an></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">{</span></div><div><span class=3D"Apple-tab-spa=
n" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">const struct=20=
obs_kernel_param *p;</span></div><div><span class=3D"Apple-tab-sp=
an" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">int had_earl=
y_param =3D 0;</span></div><div><br></div><div><span class=3D"App=
le-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">p =3D=
 __setup_start;</span></div><div><span class=3D"Apple-tab-span" s=
tyle=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">do {</span></div><=
div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">int n =3D strlen(p-&gt;str);</span></div><div=
><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		<=
/span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">if (parameqn(line, p-&gt;str, n)) {</span></div>=
<div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>			</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">if (p-&gt;early) {</span></div><div><span c=
lass=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">				</span>=
</span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">/* Already done in parse_early_param?</span></div><div=
><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		=09=
	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;"> * (Needs exact match on param part).</span></=
div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">				</span></span><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;"> * Keep iterating, as we can have earl=
y</span></div><div><span class=3D"Apple-tab-span" style=3D"white-=
space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">				</span></span><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;"> * params and __setups of sa=
me names 8( */</span></div><div><span class=3D"Apple-tab-span" st=
yle=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">				</span></span><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">if (line[n] =3D=
=3D '\0' || line[n] =3D=3D '=3D')</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">					</span></span=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">had_early_param =3D 1;</span></div><div><span class=3D"Apple=
-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">			</span></span><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">} e=
lse if (!p-&gt;setup_func) {</span></div><div><span class=3D"Appl=
e-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">				</span></span><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">p=
r_warn("Parameter %s is obsolete, ignored\n",</span></div><div><s=
pan class=3D"Apple-tab-span" style=3D"white-space:pre"><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">					<=
/span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">p-&gt;str);</span></div><div><span class=3D"Appl=
e-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">				</span></span><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">r=
eturn 1;</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">			</span></span><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">} else if (p-&gt;setup=
_func(line + n))</span></div><div><span class=3D"Apple-tab-span"=20=
style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">				</span></span><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">return 1;</sp=
an></div><div><span class=3D"Apple-tab-span" style=3D"white-space=
:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">}</span></div><div><span class=3D"A=
pple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
p++;</span></div><div><span class=3D"Apple-tab-span" style=3D"whi=
te-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">} while (p &lt; __setup_end)=
;</span></div><div><br></div><div><span class=3D"Apple-tab-span"=20=
style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">return had_early_p=
aram;</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">}</span></div><div><br></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
/*</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp;* This should be approx 2 Bo*oMips t=
o start (note initial shift), and will</span></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp=
;* still work even if initially too large, it will just take slig=
htly longer</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">&nbsp;*/</span></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">un=
signed long loops_per_jiffy =3D (1&lt;&lt;12);</span></div><div><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">EXPORT_SYMBOL(loops_per_jiffy);</span></div><div><br></div><di=
v><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">static int __init debug_kernel(char *str)</span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">{</span></div><div><span class=3D"Apple-tab-span" style=3D"wh=
ite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">console_loglevel =3D CONSOL=
E_LOGLEVEL_DEBUG;</span></div><div><span class=3D"Apple-tab-span"=
 style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">return 0;</span=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">}</span></div><div><br></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">static int=20=
__init quiet_kernel(char *str)</span></div><div><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">{</span></div=
><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">console_loglevel =3D CONSOLE_LOGLEVEL_QUIET;=
</span></div><div><span class=3D"Apple-tab-span" style=3D"white-s=
pace:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">return 0;</span></div><div><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">}=
</span></div><div><br></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">early_param("debug", debug_k=
ernel);</span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">early_param("quiet", quiet_kernel);<=
/span></div><div><br></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">static int __init loglevel(ch=
ar *str)</span></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">{</span></div><div><span class=3D"A=
pple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">i=
nt newlevel;</span></div><div><br></div><div><span class=3D"Apple=
-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/*</s=
pan></div><div><span class=3D"Apple-tab-span" style=3D"white-spac=
e:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;"> * Only update loglevel value when=20=
a correct setting was passed,</span></div><div><span class=3D"App=
le-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"> *=20=
to prevent blind crashes (when loglevel being set to 0) that</spa=
n></div><div><span class=3D"Apple-tab-span" style=3D"white-space:=
pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;"> * are quite hard to debug</span></di=
v><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;"> */</span></div><div><span class=3D"Apple-t=
ab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">	</span></span><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">if (get=
_option(&amp;str, &amp;newlevel)) {</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">console_loglevel =3D newlevel;</span></div><div><span class=3D"=
Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>return 0;</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">}</span></div><div><br><=
/div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre=
"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">return -EINVAL;</span></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">}</sp=
an></div><div><br></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">early_param("loglevel", loglevel=
);</span></div><div><br></div><div><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">/* Change NUL term back to=
 "=3D", to make "param" the whole string. */</span></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>static int __init repair_env_string(char *param, char *val,</spa=
n></div><div><span class=3D"Apple-tab-span" style=3D"white-space:=
pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">				</span></span><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;"> &nbsp; &nbsp;const char *unused,=20=
void *arg)</span></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">{</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>if (val) {</span></div><div><span class=3D"Apple-tab-span" style=
=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">		</span></span><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">/* param=3Dval or para=
m=3D"val"? */</span></div><div><span class=3D"Apple-tab-span" sty=
le=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">		</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">if (val =3D=3D par=
am+strlen(param)+1)</span></div><div><span class=3D"Apple-tab-spa=
n" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">			</span></span><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">val[-1] =3D=
 '=3D';</span></div><div><span class=3D"Apple-tab-span" style=3D"=
white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">		</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">else if (val =3D=3D para=
m+strlen(param)+2) {</span></div><div><span class=3D"Apple-tab-sp=
an" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">			</span></span><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">val[-2] =3D=
 '=3D';</span></div><div><span class=3D"Apple-tab-span" style=3D"=
white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">			</span></span><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">memmove(val-1, val, str=
len(val)+1);</span></div><div><span class=3D"Apple-tab-span" styl=
e=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">			</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">val--;</span></div=
><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">} else</span></div><div><span class=3D"Appl=
e-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">			</span></span><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">BU=
G();</span></div><div><span class=3D"Apple-tab-span" style=3D"whi=
te-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">}</span></div><div><span cla=
ss=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></spa=
n><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">return 0;</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">}</span></div><div><br></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">/* Anything after -- gets handed straight to init. */</=
span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">static int __init set_init_arg(char *param, c=
har *val,</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">			</span></span><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;"> &nbsp; &nbsp; &nbsp;=20=
const char *unused, void *arg)</span></div><div><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">{</span></div=
><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">unsigned int i;</span></div><div><br></div><=
div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">if (panic_later)</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">return 0;</span></div><div><br></div><div><span class=3D"Apple-=
tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">	</span></span><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">repair=
_env_string(param, val, unused, NULL);</span></div><div><br></div=
><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">for (i =3D 0; argv_init[i]; i++) {</span></d=
iv><div><span class=3D"Apple-tab-span" style=3D"white-space:pre">=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">if (i =3D=3D MAX_INIT_ARGS) {</span></div>=
<div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>			</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">panic_later =3D "init";</span></div><div><s=
pan class=3D"Apple-tab-span" style=3D"white-space:pre"><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">			</s=
pan></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">panic_param =3D param;</span></div><div><span clas=
s=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">			</span></sp=
an><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">return 0;</span></div><div><span class=3D"Apple-tab-span"=20=
style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">		</span></span><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">}</span></div><=
div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">}</span></div><div><span class=3D"Apple-tab-sp=
an" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">argv_init[i]=
 =3D param;</span></div><div><span class=3D"Apple-tab-span" style=
=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">return 0;</span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">}</span></div><div><br></div><div><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">/*</span></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">&nbsp;* Unknown boot options get handed to init, unless they=
 look like</span></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">&nbsp;* unused parameters (modpro=
be will find them in /proc/cmdline).</span></div><div><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;*=
/</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">static int __init unknown_bootoption(char=20=
*param, char *val,</span></div><div><span class=3D"Apple-tab-span=
" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">				</span></span><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"> &nbsp; &nb=
sp; const char *unused, void *arg)</span></div><div><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">{</span><=
/div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre=
"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">repair_env_string(param, val, unused, NULL=
);</span></div><div><br></div><div><span class=3D"Apple-tab-span"=
 style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/* Handle obsol=
ete-style parameters */</span></div><div><span class=3D"Apple-tab=
-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">	</span></span><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">if (obsol=
ete_checksetup(param))</span></div><div><span class=3D"Apple-tab-=
span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">		</span></span><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">return 0;=
</span></div><div><br></div><div><span class=3D"Apple-tab-span" s=
tyle=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">/* Unused module p=
arameter. */</span></div><div><span class=3D"Apple-tab-span" styl=
e=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">if (strchr(param, '.=
') &amp;&amp; (!val || strchr(param, '.') &lt; val))</span></div>=
<div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">return 0;</span></div><div><br></div><div><s=
pan class=3D"Apple-tab-span" style=3D"white-space:pre"><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</spa=
n></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">if (panic_later)</span></div><div><span class=3D"App=
le-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">re=
turn 0;</span></div><div><br></div><div><span class=3D"Apple-tab-=
span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">if (val) {=
</span></div><div><span class=3D"Apple-tab-span" style=3D"white-s=
pace:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">/* Environment option */</span>=
</div><div><span class=3D"Apple-tab-span" style=3D"white-space:pr=
e"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">		</span></span><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">unsigned int i;</span></div><div><span=
 class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span>=
</span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">for (i =3D 0; envp_init[i]; i++) {</span></div><div><s=
pan class=3D"Apple-tab-span" style=3D"white-space:pre"><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">			</s=
pan></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">if (i =3D=3D MAX_INIT_ENVS) {</span></div><div><sp=
an class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">				</s=
pan></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">panic_later =3D "env";</span></div><div><span clas=
s=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">				</span></s=
pan><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">panic_param =3D param;</span></div><div><span class=3D"Ap=
ple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">			</span></span><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
}</span></div><div><span class=3D"Apple-tab-span" style=3D"white-=
space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">			</span></span><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">if (!strncmp(param, envp_init=
[i], val - param))</span></div><div><span class=3D"Apple-tab-span=
" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">				</span></span><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">break;</spa=
n></div><div><span class=3D"Apple-tab-span" style=3D"white-space:=
pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">		</span></span><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">}</span></div><div><span class=3D"Ap=
ple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">e=
nvp_init[i] =3D param;</span></div><div><span class=3D"Apple-tab-=
span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">} else {</=
span></div><div><span class=3D"Apple-tab-span" style=3D"white-spa=
ce:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">/* Command line option */</span><=
/div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre=
"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">		</span></span><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">unsigned int i;</span></div><div><span=20=
class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span><=
/span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">for (i =3D 0; argv_init[i]; i++) {</span></div><div><sp=
an class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">			</sp=
an></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">if (i =3D=3D MAX_INIT_ARGS) {</span></div><div><spa=
n class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">				</sp=
an></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">panic_later =3D "init";</span></div><div><span clas=
s=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">				</span></s=
pan><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">panic_param =3D param;</span></div><div><span class=3D"Ap=
ple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">			</span></span><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
}</span></div><div><span class=3D"Apple-tab-span" style=3D"white-=
space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">}</span></div><div><span class=
=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span></span=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">argv_init[i] =3D param;</span></div><div><span class=3D"Appl=
e-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">}</s=
pan></div><div><span class=3D"Apple-tab-span" style=3D"white-spac=
e:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">return 0;</span></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">}</s=
pan></div><div><br></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">static int __init init_setup(ch=
ar *str)</span></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">{</span></div><div><span class=3D"A=
pple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">u=
nsigned int i;</span></div><div><br></div><div><span class=3D"App=
le-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">exe=
cute_command =3D str;</span></div><div><span class=3D"Apple-tab-s=
pan" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/*</span></=
div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;"> * In case LILO is going to boot us with d=
efault command line,</span></div><div><span class=3D"Apple-tab-sp=
an" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;"> * it prepen=
ds "auto" before the whole cmdline which makes</span></div><div><=
span class=3D"Apple-tab-span" style=3D"white-space:pre"><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</sp=
an></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;"> * the shell think it should execute a script with=20=
such name.</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;"> * So we ignore all argu=
ments entered _before_ init=3D... [MJ]</span></div><div><span cla=
ss=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></spa=
n><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;"> */</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">for (i =3D 1; i &lt; MAX=
_INIT_ARGS; i++)</span></div><div><span class=3D"Apple-tab-span"=20=
style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">		</span></span><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">argv_init[i] =3D=
 NULL;</span></div><div><span class=3D"Apple-tab-span" style=3D"w=
hite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">return 1;</span></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">}</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">__setup("init=3D", init_setup);</span=
></div><div><br></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">static int __init rdinit_setup(cha=
r *str)</span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">{</span></div><div><span class=3D"Ap=
ple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">un=
signed int i;</span></div><div><br></div><div><span class=3D"Appl=
e-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">ramd=
isk_execute_command =3D str;</span></div><div><span class=3D"Appl=
e-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/* S=
ee "auto" comment in init_setup */</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>for (i =3D 1; i &lt; MAX_INIT_ARGS; i++)</span></div><div><span=20=
class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span><=
/span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">argv_init[i] =3D NULL;</span></div><div><span class=3D"=
Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
return 1;</span></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">}</span></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">__setup("rd=
init=3D", rdinit_setup);</span></div><div><br></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#ifn=
def CONFIG_SMP</span></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">static const unsigned int set=
up_max_cpus =3D NR_CPUS;</span></div><div><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">static inline void=20=
setup_nr_cpu_ids(void) { }</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">static inline void=
 smp_prepare_cpus(unsigned int maxcpus) { }</span></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
#endif</span></div><div><br></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">/*</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">&nbsp;* We need to store the untouched command line for future=20=
reference.</span></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">&nbsp;* We also need to store the=
 touched command line since the parameter</span></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&n=
bsp;* parsing is performed in place, and we should allow a compon=
ent to</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">&nbsp;* store reference of name/value=
 for future reference.</span></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;*/</span></div>=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">static void __init setup_command_line(char *command_line=
)</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">{</span></div><div><span class=3D"Apple-ta=
b-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">	</span></span><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">saved_co=
mmand_line =3D</span></div><div><span class=3D"Apple-tab-span" st=
yle=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">		</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">memblock_virt_allo=
c(strlen(boot_command_line) + 1, 0);</span></div><div><span class=
=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">initcall_command_line =3D</span></div><div><span class=3D"App=
le-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">me=
mblock_virt_alloc(strlen(boot_command_line) + 1, 0);</span></div>=
<div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">static_command_line =3D memblock_virt_alloc(s=
trlen(command_line) + 1, 0);</span></div><div><span class=3D"Appl=
e-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">strc=
py(saved_command_line, boot_command_line);</span></div><div><span=
 class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span><=
/span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">strcpy(static_command_line, command_line);</span></div>=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">}</span></div><div><br></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">/*</span></div><di=
v><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">&nbsp;* We need to finalize in a non-__init function or els=
e race conditions</span></div><div><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">&nbsp;* between the root t=
hread and the init thread may cause start_kernel to</span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">&nbsp;* be reaped by free_initmem before the root thread=20=
has proceeded to</span></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">&nbsp;* cpu_idle.</span></d=
iv><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">&nbsp;*</span></div><div><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">&nbsp;* gcc-3.4 accident=
ally inlines this function, so use noinline.</span></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>&nbsp;*/</span></div><div><br></div><div><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">static __initdata D=
ECLARE_COMPLETION(kthreadd_done);</span></div><div><br></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em; background-color: rgb(50, 205, 50);"><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem; background-color: rgb=
(0, 255, 0);">static noinline void __init_refok rest_init(void) &=
nbsp;</span><b><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem; background-color: rgb(0, 255, 0);">--&gt;</span=
></b></span><b style=3D"line-height: 1.6;"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem; background-color: r=
gb(0, 255, 0);">=B5=DA=D2=BB=B8=F6=CF=B5=CD=B3=CF=DF=B3=CC=B4=D3=D5=
=E2=C0=EF=B2=FA=C9=FA</span></b></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">{</span></div><div=
><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</=
span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">int pid;</span></div><div><br></div><div><span cl=
ass=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></sp=
an><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">rcu_scheduler_starting();</span></div><div><span class=3D"=
Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
smpboot_thread_init();</span></div><div><span class=3D"Apple-tab-=
span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/*</span><=
/div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre=
"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;"> * We need to spawn init first so that it=20=
obtains pid 1, however</span></div><div><span class=3D"Apple-tab-=
span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"> * the ini=
t task will end up wanting to create kthreads, which, if</span></=
div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;"> * we schedule it before we create kthread=
d, will OOPS.</span></div><div><span class=3D"Apple-tab-span" sty=
le=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;"> */</span></div><di=
v><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	<=
/span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">kernel_thread(kernel_init, NULL, CLONE_FS); &nbs=
p;</span><b style=3D"line-height: 1.6;"><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem; color: rgb(255, 0, 0);=
">--&gt;=C6=F4=B6=AF=B5=DA=D2=BB=B8=F6=CF=B5=CD=B3=CF=DF=B3=CC</s=
pan></b><b style=3D"line-height: 1.6;"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem; color: rgb(255, 0, 0);"=
>kernel_init</span></b></div><div><span class=3D"Apple-tab-span"=20=
style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">numa_default_polic=
y();</span></div><div><span class=3D"Apple-tab-span" style=3D"whi=
te-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">pid =3D kernel_thread(kthrea=
dd, NULL, CLONE_FS | CLONE_FILES);</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>rcu_read_lock();</span></div><div><span class=3D"Apple-tab-span"=
 style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">kthreadd_task =3D=
 find_task_by_pid_ns(pid, &amp;init_pid_ns);</span></div><div><sp=
an class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span=
></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">rcu_read_unlock();</span></div><div><span class=3D"Ap=
ple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">co=
mplete(&amp;kthreadd_done);</span></div><div><br></div><div><span=
 class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span><=
/span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">/*</span></div><div><span class=3D"Apple-tab-span" styl=
e=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;"> * The boot idle thr=
ead must execute schedule()</span></div><div><span class=3D"Apple=
-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"> * at=
 least once to get things moving:</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
> */</span></div><div><span class=3D"Apple-tab-span" style=3D"whi=
te-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">init_idle_bootup_task(curren=
t);</span></div><div><span class=3D"Apple-tab-span" style=3D"whit=
e-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">schedule_preempt_disabled();<=
/span></div><div><span class=3D"Apple-tab-span" style=3D"white-sp=
ace:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">/* Call into cpu_idle with preemp=
t disabled */</span></div><div><span class=3D"Apple-tab-span" sty=
le=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">cpu_startup_entry(C=
PUHP_ONLINE);</span></div><div><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">}</span></div><div><br></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">/* Check for early params. */</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">static=
 int __init do_early_param(char *param, char *val,</span></div><d=
iv><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=09=
			</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;"> const char *unused, void *arg)</span></div>=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">{</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">const struct obs_kernel_=
param *p;</span></div><div><br></div><div><span class=3D"Apple-ta=
b-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">	</span></span><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">for (p =3D=
 __setup_start; p &lt; __setup_end; p++) {</span></div><div><span=
 class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span>=
</span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">if ((p-&gt;early &amp;&amp; parameq(param, p-&gt;str))=
 ||</span></div><div><span class=3D"Apple-tab-span" style=3D"whit=
e-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;"> &nbsp; &nbsp;(strcmp(param,=
 "console") =3D=3D 0 &amp;&amp;</span></div><div><span class=3D"A=
pple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
 &nbsp; &nbsp; strcmp(p-&gt;str, "earlycon") =3D=3D 0)</span></di=
v><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">) {</span></div><div><span class=3D"Apple-=
tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">			</span></span><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">if (=
p-&gt;setup_func(val) !=3D 0)</span></div><div><span class=3D"App=
le-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">				</span></span><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
pr_warn("Malformed early option '%s'\n", param);</span></div><div=
><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		<=
/span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">}</span></div><div><span class=3D"Apple-tab-span=
" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">}</span></div>=
<div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">/* We accept everything at this stage. */</sp=
an></div><div><span class=3D"Apple-tab-span" style=3D"white-space=
:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">return 0;</span></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">}</sp=
an></div><div><br></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">void __init parse_early_options(=
char *cmdline)</span></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">{</span></div><div><span clas=
s=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">parse_args("early options", cmdline, NULL, 0, 0, 0, NULL,</s=
pan></div><div><span class=3D"Apple-tab-span" style=3D"white-spac=
e:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;"> &nbsp; do_early_param);</span></d=
iv><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">}</span></div><div><br></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/* Arch code ca=
lls this early on, or if not, just before other parsing. */</span=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">void __init parse_early_param(void)</span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">{</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">static int done __initda=
ta;</span></div><div><span class=3D"Apple-tab-span" style=3D"whit=
e-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">static char tmp_cmdline[COMMA=
ND_LINE_SIZE] __initdata;</span></div><div><br></div><div><span c=
lass=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></s=
pan><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">if (done)</span></div><div><span class=3D"Apple-tab-span"=
 style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">		</span></span><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">return;</span>=
</div><div><br></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">/* All fall through to d=
o_early_param. */</span></div><div><span class=3D"Apple-tab-span"=
 style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">strlcpy(tmp_cmd=
line, boot_command_line, COMMAND_LINE_SIZE);</span></div><div><sp=
an class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span=
></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">parse_early_options(tmp_cmdline);</span></div><div><s=
pan class=3D"Apple-tab-span" style=3D"white-space:pre"><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</spa=
n></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">done =3D 1;</span></div><div><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">}</span></div><div>=
<br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">/*</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;*</span><span cl=
ass=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></sp=
an><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">Activate the first processor.</span></div><div><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;*=
/</span></div><div><br></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">static void __init boot_cpu=
_init(void)</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">{</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>int cpu =3D smp_processor_id();</span></div><div><span class=3D"=
Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
/* Mark the boot cpu "present", "online" etc for SMP and UP case=20=
*/</span></div><div><span class=3D"Apple-tab-span" style=3D"white=
-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">set_cpu_online(cpu, true);</sp=
an></div><div><span class=3D"Apple-tab-span" style=3D"white-space=
:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">set_cpu_active(cpu, true);</span></d=
iv><div><span class=3D"Apple-tab-span" style=3D"white-space:pre">=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">set_cpu_present(cpu, true);</span></div><d=
iv><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=09=
</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">set_cpu_possible(cpu, true);</span></div><div><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">}</span></div><div><br></div><div><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">void __init __weak smp_s=
etup_processor_id(void)</span></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">{</span></div><div><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">}</span></div><div><br></div><div><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;"># if THREAD_SIZE &gt;=3D=
 PAGE_SIZE</span></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">void __init __weak thread_info_ca=
che_init(void)</span></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">{</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">}</spa=
n></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">#endif</span></div><div><br></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/*</s=
pan></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">&nbsp;* Set up kernel memory allocators</span>=
</div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">&nbsp;*/</span></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">static void __init m=
m_init(void)</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">{</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>/*</span></div><div><span class=3D"Apple-tab-span" style=3D"whit=
e-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;"> * page_ext requires contiguo=
us pages,</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;"> * bigger than MAX_ORDER=
 unless SPARSEMEM.</span></div><div><span class=3D"Apple-tab-span=
" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;"> */</span></di=
v><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">page_ext_init_flatmem();</span></div><div><=
span class=3D"Apple-tab-span" style=3D"white-space:pre"><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</sp=
an></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">mem_init();</span></div><div><span class=3D"Apple-t=
ab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">	</span></span><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">kmem_ca=
che_init();</span></div><div><span class=3D"Apple-tab-span" style=
=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">percpu_init_late();</sp=
an></div><div><span class=3D"Apple-tab-span" style=3D"white-space=
:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">pgtable_init();</span></div><div><sp=
an class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span=
></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">vmalloc_init();</span></div><div><span class=3D"Apple=
-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">iorem=
ap_huge_init();</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">}</span></div><div><br></div=
><div><b><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
:0.867rem;background-color:rgb(255, 0, 0)">asmlinkage __visible v=
oid __init start_kernel(void) &nbsp;<span data-wiz-span=3D"data-w=
iz-span" style=3D"color: rgb(0, 0, 255);">--</span></span><span s=
tyle=3D"line-height: 1.6;"><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"color: rgb(0, 0, 255); font-size: 0.867rem; background-c=
olor: rgb(255, 0, 0);">&gt;=BB=E3=B1=E0=B2=BF=B7=D6=B7=D6=CE=F6=CD=
=EA=B1=CF=A3=AC=BF=AA=CA=BC=D5=E6=D5=FD=BD=F8=C8=EBkernel=B5=C4=B5=
=EE=CC=C3=A3=AC=D5=E2=CA=C7</span></span><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem; color: rgb(0, 0, 255)=
; background-color: rgb(255, 0, 0);">=B5=DA=C8=FD=BD=D7=B6=CE=B5=C4=
=C8=EB=BF=DA=BA=AF=CA=FD=A3=AC=B4=D3heads.S=BB=F2=D5=DFhead-commo=
n.S=CE=C4=BC=FE=D6=D0=CC=F8=D7=AA=B9=FD=C0=B4=A3=A8=BE=DF=CC=E5=CC=
=F8=D7=AA=C1=F7=B3=CC=CF=B8=BD=DA=D3=D0=CA=B1=BC=E4=D4=D9=C9=EE=C8=
=EB=B7=D6=CE=F6</span><span style=3D"font-size: 0.867rem; line-he=
ight: 1.6; background-color: rgb(255, 0, 0);"><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem; color: rgb(0, 0,=
 255); background-color: rgb(255, 0, 0);">=A3=A9</span></span></b=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">{</span></div><div><span class=3D"Apple-tab-span"=
 style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">char *command_l=
ine;</span></div><div><span class=3D"Apple-tab-span" style=3D"whi=
te-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">char *after_dashes;</span></=
div><div><br></div><div><span class=3D"Apple-tab-span" style=3D"w=
hite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">/*</span></div><div><span=20=
class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></=
span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;"> * Need to run as early as possible, to initialize the</=
span></div><div><span class=3D"Apple-tab-span" style=3D"white-spa=
ce:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;"> * lockdep hash:</span></div><div>=
<span class=3D"Apple-tab-span" style=3D"white-space:pre"><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</s=
pan></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;"> */</span></div><div><span class=3D"Apple-tab-span=
" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">lockdep_init()=
;</span></div><div><span class=3D"Apple-tab-span" style=3D"white-=
space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">set_task_stack_end_magic(&amp;i=
nit_task);</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">smp_setup_processor_id()=
;</span></div><div><span class=3D"Apple-tab-span" style=3D"white-=
space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">debug_objects_early_init();</sp=
an></div><div><br></div><div><span class=3D"Apple-tab-span" style=
=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">/*</span></div><div><sp=
an class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span=
></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;"> * Set up the the initial canary ASAP:</span></div><d=
iv><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=09=
</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;"> */</span></div><div><span class=3D"Apple-tab-s=
pan" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">boot_init_s=
tack_canary();</span></div><div><br></div><div><span class=3D"App=
le-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">cgr=
oup_init_early();</span></div><div><br></div><div><span class=3D"=
Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
local_irq_disable();</span></div><div><span class=3D"Apple-tab-sp=
an" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">early_boot_i=
rqs_disabled =3D true;</span></div><div><br></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/*</sp=
an></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">&nbsp;* Interrupts are still disabled. Do neces=
sary setups, then</span></div><div><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">&nbsp;* enable them</span>=
</div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">&nbsp;*/</span></div><div><span class=3D"Apple-tab=
-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">	</span></span><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">boot_cpu_=
init();</span></div><div><span class=3D"Apple-tab-span" style=3D"=
white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">page_address_init();</spa=
n></div><div><span class=3D"Apple-tab-span" style=3D"white-space:=
pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">pr_notice("%s", linux_banner);</span>=
</div><div><span class=3D"Apple-tab-span" style=3D"white-space:pr=
e"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem; background-color: rgb(255, 255, 0);">	</span></span><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem; back=
ground-color: rgb(255, 255, 0);">setup_arch(&amp;command_line); &=
nbsp;<b>--&gt;=D6=D8=B5=E3=B7=D6=CE=F6=BA=AF=CA=FD1</b></span></d=
iv><div><span class=3D"Apple-tab-span" style=3D"white-space:pre">=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">mm_init_cpumask(&amp;init_mm);</span></div=
><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
 background-color: rgb(255, 255, 0);">	</span></span><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem; backgroun=
d-color: rgb(255, 255, 0);"><span data-wiz-span=3D"data-wiz-span"=
 style=3D"background-color: rgb(255, 255, 0);">setup_command</spa=
n><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem; color: rgb(0, 0, 0); background-color: rgb(255, 255, 0);">_l=
ine(command_line); &nbsp;<b>--&gt;</b></span></span><b style=3D"l=
ine-height: 1.6;"><span style=3D"font-size: 1rem;"><span data-wiz=
-span=3D"data-wiz-span" style=3D"color: rgb(0, 0, 0); font-size:=20=
0.867rem; background-color: rgb(255, 255, 0);">=D6=D8=B5=E3=B7=D6=
=CE=F6=B8=C3=BA=AF=CA=FD2=A3=AC=CD=EA=B3=C9=C4=DA=B4=E6=D3=B3=CF=F1=
=B5=C4=B3=F5=CA=BC=BB=AF=A3=AC=B2=A2=BB=F1=C8=A1lk=BD=D7=B6=CE=B4=
=AB=B5=DD=BD=F8=C0=B4=B5=C4</span></span></b><b style=3D"line-hei=
ght: 1.6;"><span style=3D"font-size: 1rem;"><span data-wiz-span=3D=
"data-wiz-span" style=3D"color: rgb(0, 0, 0); font-size: 0.867rem=
; background-color: rgb(255, 255, 0);">command_line</span></span>=
</b><b style=3D"line-height: 1.6;"><span style=3D"font-size: 1rem=
;"><span data-wiz-span=3D"data-wiz-span" style=3D"color: rgb(0, 0=
, 0); font-size: 0.867rem; background-color: rgb(255, 255, 0);">=B2=
=CE=CA=FD</span></span></b></div><div><span class=3D"Apple-tab-sp=
an" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">setup_nr_cpu=
_ids();</span></div><div><span class=3D"Apple-tab-span" style=3D"=
white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">setup_per_cpu_areas();</s=
pan></div><div><span class=3D"Apple-tab-span" style=3D"white-spac=
e:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">smp_prepare_boot_cpu();</span><span=
 class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span><=
/span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">/* arch-specific boot-cpu hooks */</span></div><div><br=
></div><div><span class=3D"Apple-tab-span" style=3D"white-space:p=
re"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">build_all_zonelists(NULL, NULL);</span=
></div><div><span class=3D"Apple-tab-span" style=3D"white-space:p=
re"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">page_alloc_init();</span></div><div><b=
r></div><div><span class=3D"Apple-tab-span" style=3D"white-space:=
pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">pr_notice("Kernel command line: %s\n"=
, boot_command_line);</span></div><div><span class=3D"Apple-tab-s=
pan" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">parse_early=
_param();</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">after_dashes =3D parse_a=
rgs("Booting kernel",</span></div><div><span class=3D"Apple-tab-s=
pan" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">				</span></span><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"> &nbsp;s=
tatic_command_line, __start___param,</span></div><div><span class=
=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">				</span></sp=
an><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;"> &nbsp;__stop___param - __start___param,</span></div><div>=
<span class=3D"Apple-tab-span" style=3D"white-space:pre"><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">			=09=
</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;"> &nbsp;-1, -1, NULL, &amp;unknown_bootoption);<=
/span></div><div><span class=3D"Apple-tab-span" style=3D"white-sp=
ace:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">if (!IS_ERR_OR_NULL(after_dashes)=
)</span></div><div><span class=3D"Apple-tab-span" style=3D"white-=
space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">parse_args("Setting init args"=
, after_dashes, NULL, 0, -1, -1,</span></div><div><span class=3D"=
Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">			</span></span><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
"> &nbsp; NULL, set_init_arg);</span></div><div><br></div><div><s=
pan class=3D"Apple-tab-span" style=3D"white-space:pre"><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</spa=
n></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">jump_label_init();</span></div><div><br></div><div><=
span class=3D"Apple-tab-span" style=3D"white-space:pre"><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</sp=
an></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">/*</span></div><div><span class=3D"Apple-tab-span"=20=
style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;"> * These use large=
 bootmem allocations and must precede</span></div><div><span clas=
s=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;"> * kmem_cache_init()</span></div><div><span class=3D"Apple-t=
ab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">	</span></span><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"> */</sp=
an></div><div><span class=3D"Apple-tab-span" style=3D"white-space=
:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">setup_log_buf(0);</span></div><div><=
span class=3D"Apple-tab-span" style=3D"white-space:pre"><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</sp=
an></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">pidhash_init();</span></div><div><span class=3D"App=
le-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">vfs=
_caches_init_early();</span></div><div><span class=3D"Apple-tab-s=
pan" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">sort_main_e=
xtable();</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">trap_init();</span></div=
><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">mm_init();</span></div><div><br></div><div><=
span class=3D"Apple-tab-span" style=3D"white-space:pre"><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</sp=
an></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">/*</span></div><div><span class=3D"Apple-tab-span"=20=
style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;"> * Set up the sche=
duler prior starting any interrupts (such as the</span></div><div=
><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</=
span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;"> * timer interrupt). Full topology setup happens=20=
at smp_init()</span></div><div><span class=3D"Apple-tab-span" sty=
le=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;"> * time - but meanw=
hile we still have a functioning scheduler.</span></div><div><spa=
n class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span>=
</span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;"> */</span></div><div><span class=3D"Apple-tab-span" st=
yle=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">sched_init();</spa=
n></div><div><span class=3D"Apple-tab-span" style=3D"white-space:=
pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">/*</span></div><div><span class=3D"Ap=
ple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"> *=
 Disable preemption - early bootup scheduling is extremely</span>=
</div><div><span class=3D"Apple-tab-span" style=3D"white-space:pr=
e"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;"> * fragile until we cpu_idle() for the=20=
first time.</span></div><div><span class=3D"Apple-tab-span" style=
=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;"> */</span></div><div><s=
pan class=3D"Apple-tab-span" style=3D"white-space:pre"><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</spa=
n></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">preempt_disable();</span></div><div><span class=3D"A=
pple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">i=
f (WARN(!irqs_disabled(),</span></div><div><span class=3D"Apple-t=
ab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">		</span></span><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"> "Inte=
rrupts were enabled *very* early, fixing it\n"))</span></div><div=
><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		<=
/span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">local_irq_disable();</span></div><div><span clas=
s=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">idr_init_cache();</span></div><div><span class=3D"Apple-tab-=
span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">rcu_init()=
;</span></div><div><br></div><div><span class=3D"Apple-tab-span"=20=
style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">/* trace_printk()=20=
and trace points may be used after this */</span></div><div><span=
 class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span><=
/span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">trace_init();</span></div><div><br></div><div><span cla=
ss=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></spa=
n><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">context_tracking_init();</span></div><div><span class=3D"Ap=
ple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">ra=
dix_tree_init();</span></div><div><span class=3D"Apple-tab-span"=20=
style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">/* init some links=
 before init_ISA_irqs() */</span></div><div><span class=3D"Apple-=
tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">	</span></span><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">early_=
irq_init();</span></div><div><span class=3D"Apple-tab-span" style=
=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">init_IRQ();</span></div=
><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">tick_init();</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>rcu_init_nohz();</span></div><div><span class=3D"Apple-tab-span"=
 style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">init_timers();<=
/span></div><div><span class=3D"Apple-tab-span" style=3D"white-sp=
ace:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">hrtimers_init();</span></div><div=
><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</=
span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">softirq_init();</span></div><div><span class=3D"A=
pple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">t=
imekeeping_init();</span></div><div><span class=3D"Apple-tab-span=
" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">time_init();</=
span></div><div><span class=3D"Apple-tab-span" style=3D"white-spa=
ce:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">sched_clock_postinit();</span></di=
v><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">perf_event_init();</span></div><div><span c=
lass=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></s=
pan><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">profile_init();</span></div><div><span class=3D"Apple-tab=
-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">	</span></span><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">call_func=
tion_init();</span></div><div><span class=3D"Apple-tab-span" styl=
e=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">WARN(!irqs_disabled(=
), "Interrupts were enabled early\n");</span></div><div><span cla=
ss=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></spa=
n><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">early_boot_irqs_disabled =3D false;</span></div><div><span=20=
class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></=
span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">local_irq_enable();</span></div><div><br></div><div><spa=
n class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span>=
</span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">kmem_cache_init_late();</span></div><div><br></div><di=
v><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	<=
/span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">/*</span></div><div><span class=3D"Apple-tab-spa=
n" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;"> * HACK ALERT=
! This is early. We're enabling the console before</span></div><d=
iv><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=09=
</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;"> * we've done PCI setups etc, and console_init(=
) must be aware of</span></div><div><span class=3D"Apple-tab-span=
" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;"> * this. But w=
e do want output early, in case something goes wrong.</span></div=
><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;"> */</span></div><div><span class=3D"Apple-ta=
b-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">	</span></span><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">console_=
init();</span></div><div><span class=3D"Apple-tab-span" style=3D"=
white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">if (panic_later)</span></=
div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">panic("Too many boot %s vars at `%s'", pan=
ic_later,</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">		</span></span><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;"> &nbsp; &nbsp; &nbsp;pa=
nic_param);</span></div><div><br></div><div><span class=3D"Apple-=
tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">	</span></span><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">lockde=
p_info();</span></div><div><br></div><div><span class=3D"Apple-ta=
b-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">	</span></span><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/*</span=
></div><div><span class=3D"Apple-tab-span" style=3D"white-space:p=
re"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;"> * Need to run this when irqs are enab=
led, because it wants</span></div><div><span class=3D"Apple-tab-s=
pan" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"> * to self-=
test [hard/soft]-irqs on/off lock inversion bugs</span></div><div=
><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</=
span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;"> * too:</span></div><div><span class=3D"Apple-tab=
-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">	</span></span><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"> */</span=
></div><div><span class=3D"Apple-tab-span" style=3D"white-space:p=
re"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">locking_selftest();</span></div><div><=
br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">#ifdef CONFIG_BLK_DEV_INITRD</span></div><div><=
span class=3D"Apple-tab-span" style=3D"white-space:pre"><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</sp=
an></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">if (initrd_start &amp;&amp; !initrd_below_start_ok=20=
&amp;&amp;</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;"> &nbsp; &nbsp;page_to_pf=
n(virt_to_page((void *)initrd_start)) &lt; min_low_pfn) {</span><=
/div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre=
"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">		</span></span><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">pr_crit("initrd overwritten (0x%08lx &l=
t; 0x%08lx) - disabling it.\n",</span></div><div><span class=3D"A=
pple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
 &nbsp; &nbsp;page_to_pfn(virt_to_page((void *)initrd_start)),</s=
pan></div><div><span class=3D"Apple-tab-span" style=3D"white-spac=
e:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;"> &nbsp; &nbsp;min_low_pfn);</span>=
</div><div><span class=3D"Apple-tab-span" style=3D"white-space:pr=
e"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">		</span></span><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">initrd_start =3D 0;</span></div><div><=
span class=3D"Apple-tab-span" style=3D"white-space:pre"><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</sp=
an></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">}</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">#endif</span></div><div><spa=
n class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span>=
</span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">page_ext_init();</span></div><div><span class=3D"Apple=
-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">debug=
_objects_mem_init();</span></div><div><span class=3D"Apple-tab-sp=
an" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">kmemleak_ini=
t();</span></div><div><span class=3D"Apple-tab-span" style=3D"whi=
te-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">setup_per_cpu_pageset();</sp=
an></div><div><span class=3D"Apple-tab-span" style=3D"white-space=
:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">numa_policy_init();</span></div><div=
><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</=
span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">if (late_time_init)</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">late_time_init();</span></div><div><span class=3D"Apple-tab-spa=
n" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">sched_clock_i=
nit();</span></div><div><span class=3D"Apple-tab-span" style=3D"w=
hite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">calibrate_delay();</span><=
/div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre=
"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">pidmap_init();</span></div><div><span clas=
s=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">anon_vma_init();</span></div><div><span class=3D"Apple-tab-s=
pan" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">acpi_early_=
init();</span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">#ifdef CONFIG_X86</span></div><div><=
span class=3D"Apple-tab-span" style=3D"white-space:pre"><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</sp=
an></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">if (efi_enabled(EFI_RUNTIME_SERVICES))</span></div>=
<div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">efi_enter_virtual_mode();</span></div><div><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">#endif</span></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">#ifdef CONFIG_X86_ESPFIX64</span><=
/div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre=
"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">/* Should be run before the first non-init=
 thread is created */</span></div><div><span class=3D"Apple-tab-s=
pan" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">init_espfix=
_bsp();</span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">#endif</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>thread_info_cache_init();</span></div><div><span class=3D"Apple-=
tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">	</span></span><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">cred_i=
nit();</span></div><div><span class=3D"Apple-tab-span" style=3D"w=
hite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">fork_init();</span></div><=
div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">proc_caches_init();</span></div><div><span cla=
ss=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></spa=
n><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">buffer_init();</span></div><div><span class=3D"Apple-tab-sp=
an" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">key_init();<=
/span></div><div><span class=3D"Apple-tab-span" style=3D"white-sp=
ace:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">security_init();</span></div><div=
><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</=
span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">dbg_late_init();</span></div><div><span class=3D"=
Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
vfs_caches_init();</span></div><div><span class=3D"Apple-tab-span=
" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">signals_init()=
;</span></div><div><span class=3D"Apple-tab-span" style=3D"white-=
space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">/* rootfs populating might need=
 page-writeback */</span></div><div><span class=3D"Apple-tab-span=
" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">page_writeback=
_init();</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">proc_root_init();</span>=
</div><div><span class=3D"Apple-tab-span" style=3D"white-space:pr=
e"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">nsfs_init();</span></div><div><span cla=
ss=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></spa=
n><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">cpuset_init();</span></div><div><span class=3D"Apple-tab-sp=
an" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">cgroup_init(=
);</span></div><div><span class=3D"Apple-tab-span" style=3D"white=
-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">taskstats_init_early();</span>=
</div><div><span class=3D"Apple-tab-span" style=3D"white-space:pr=
e"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">delayacct_init();</span></div><div><br>=
</div><div><span class=3D"Apple-tab-span" style=3D"white-space:pr=
e"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">check_bugs();</span></div><div><br></di=
v><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">acpi_subsystem_init();</span></div><div><sp=
an class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span=
></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">sfi_init_late();</span></div><div><br></div><div><spa=
n class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span>=
</span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">if (efi_enabled(EFI_RUNTIME_SERVICES)) {</span></div><=
div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">efi_late_init();</span></div><div><span class=
=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span></span=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">efi_free_boot_services();</span></div><div><span class=3D"Ap=
ple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">}<=
/span></div><div><br></div><div><span class=3D"Apple-tab-span" st=
yle=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">ftrace_init();</sp=
an></div><div><br></div><div><span class=3D"Apple-tab-span" style=
=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">/* Do the rest non-__in=
it'ed, we're now alive */</span></div><div><span class=3D"Apple-t=
ab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wi=
z-span" style=3D"color: rgb(0, 0, 0); font-size: 0.867rem; backgr=
ound-color: rgb(255, 255, 0);">	</span></span><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem; background-color=
: rgb(255, 255, 0);"><span data-wiz-span=3D"data-wiz-span" style=3D=
"color: rgb(0, 0, 0); font-size: 0.867rem; background-color: rgb(=
255, 255, 0);">rest_init(); &nbsp;</span><b><span data-wiz-span=3D=
"data-wiz-span" style=3D"color: rgb(0, 0, 0); font-size: 0.867rem=
; background-color: rgb(255, 255, 0);">--&gt;=D6=D8=B5=E3=B7=D6=CE=
=F6=BA=AF=CA=FD3=A3=AC=D6=D8=B5=E3=C4=D1=B5=E3=B7=D6=CE=F6=A3=AC<=
/span></b></span><b style=3D"line-height: 1.6;"><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"color: rgb(255, 0, 0); font-size: 0=
.867rem; background-color: rgb(255, 255, 0);">=B5=DA=D2=BB=B8=F6=CF=
=DF=B3=CC=B5=C4=C6=F4=B6=AF=D4=DA=D5=E2=C0=EF=CA=B5=CF=D6</span><=
/b></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">}</span></div><div><br></div><div><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/* Call a=
ll constructor functions linked into the kernel. */</span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">static void __init do_ctors(void)</span></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">{<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">#ifdef CONFIG_CONSTRUCTORS</span></div><div>=
<span class=3D"Apple-tab-span" style=3D"white-space:pre"><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</s=
pan></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">ctor_fn_t *fn =3D (ctor_fn_t *) __ctors_start;</sp=
an></div><div><br></div><div><span class=3D"Apple-tab-span" style=
=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">for (; fn &lt; (ctor_fn=
_t *) __ctors_end; fn++)</span></div><div><span class=3D"Apple-ta=
b-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">		</span></span><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">(*fn)()=
;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">#endif</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">}</span></div>=
<div><br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">bool initcall_debug;</span></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
core_param(initcall_debug, initcall_debug, bool, 0644);</span></d=
iv><div><br></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">#ifdef CONFIG_KALLSYMS</span></div><di=
v><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">struct blacklist_entry {</span></div><div><span class=3D"Ap=
ple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">st=
ruct list_head next;</span></div><div><span class=3D"Apple-tab-sp=
an" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">char *buf;</=
span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">};</span></div><div><br></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">static=
 __initdata_or_module LIST_HEAD(blacklisted_initcalls);</span></d=
iv><div><br></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">static int __init initcall_blacklist(c=
har *str)</span></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">{</span></div><div><span class=3D"=
Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
char *str_entry;</span></div><div><span class=3D"Apple-tab-span"=20=
style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">struct blacklist_e=
ntry *entry;</span></div><div><br></div><div><span class=3D"Apple=
-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/* st=
r argument is a comma-separated list of functions */</span></div>=
<div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">do {</span></div><div><span class=3D"Apple-ta=
b-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">		</span></span><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">str_ent=
ry =3D strsep(&amp;str, ",");</span></div><div><span class=3D"App=
le-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">if=
 (str_entry) {</span></div><div><span class=3D"Apple-tab-span" st=
yle=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">			</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">pr_debug("blacklis=
ting initcall %s\n", str_entry);</span></div><div><span class=3D"=
Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">			</span></span><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">entry =3D alloc_bootmem(sizeof(*entry));</span></div><div><span=
 class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">			</span=
></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">entry-&gt;buf =3D alloc_bootmem(strlen(str_entry) + 1=
);</span></div><div><span class=3D"Apple-tab-span" style=3D"white=
-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">			</span></span><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">strcpy(entry-&gt;buf, str_en=
try);</span></div><div><span class=3D"Apple-tab-span" style=3D"wh=
ite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">			</span></span><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">list_add(&amp;entry-&gt;n=
ext, &amp;blacklisted_initcalls);</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">}</span></div><div><span class=3D"Apple-tab-span" style=3D"whit=
e-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">} while (str_entry);</span></=
div><div><br></div><div><span class=3D"Apple-tab-span" style=3D"w=
hite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">return 0;</span></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">}</span></div><div><br></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">static bool __init_or_=
module initcall_blacklisted(initcall_t fn)</span></div><div><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">{=
</span></div><div><span class=3D"Apple-tab-span" style=3D"white-s=
pace:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">struct list_head *tmp;</span></d=
iv><div><span class=3D"Apple-tab-span" style=3D"white-space:pre">=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">struct blacklist_entry *entry;</span></div=
><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">char *fn_name;</span></div><div><br></div><d=
iv><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=09=
</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">fn_name =3D kasprintf(GFP_KERNEL, "%pf", fn);</=
span></div><div><span class=3D"Apple-tab-span" style=3D"white-spa=
ce:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">if (!fn_name)</span></div><div><sp=
an class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</spa=
n></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">return false;</span></div><div><br></div><div><span=20=
class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></=
span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">list_for_each(tmp, &amp;blacklisted_initcalls) {</span><=
/div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre=
"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">		</span></span><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">entry =3D list_entry(tmp, struct blackl=
ist_entry, next);</span></div><div><span class=3D"Apple-tab-span"=
 style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">		</span></span><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">if (!strcmp(fn=
_name, entry-&gt;buf)) {</span></div><div><span class=3D"Apple-ta=
b-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">			</span></span><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">pr_deb=
ug("initcall %s blacklisted\n", fn_name);</span></div><div><span=20=
class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">			</span>=
</span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">kfree(fn_name);</span></div><div><span class=3D"Apple-=
tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">			</span></span><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">retu=
rn true;</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">		</span></span><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">}</span></div><div><spa=
n class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span>=
</span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">}</span></div><div><br></div><div><span class=3D"Apple=
-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">kfree=
(fn_name);</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">return false;</span></di=
v><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">}</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">#else</span></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">stat=
ic int __init initcall_blacklist(char *str)</span></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
{</span></div><div><span class=3D"Apple-tab-span" style=3D"white-=
space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">pr_warn("initcall_blacklist req=
uires CONFIG_KALLSYMS\n");</span></div><div><span class=3D"Apple-=
tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">	</span></span><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">return=
 0;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">}</span></div><div><br></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">stat=
ic bool __init_or_module initcall_blacklisted(initcall_t fn)</spa=
n></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">{</span></div><div><span class=3D"Apple-tab-span=
" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">return false;<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">}</span></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">#endif</span></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">__setup("initcall_blacklist=3D", initcall_blacklist);</spa=
n></div><div><br></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">static int __init_or_module do_on=
e_initcall_debug(initcall_t fn)</span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">{</span></di=
v><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">ktime_t calltime, delta, rettime;</span></d=
iv><div><span class=3D"Apple-tab-span" style=3D"white-space:pre">=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">unsigned long long duration;</span></div><=
div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">int ret;</span></div><div><br></div><div><span=
 class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span><=
/span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">printk(KERN_DEBUG "calling &nbsp;%pF @ %i\n", fn, task_=
pid_nr(current));</span></div><div><span class=3D"Apple-tab-span"=
 style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">calltime =3D kt=
ime_get();</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">ret =3D fn();</span></di=
v><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">rettime =3D ktime_get();</span></div><div><=
span class=3D"Apple-tab-span" style=3D"white-space:pre"><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</sp=
an></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">delta =3D ktime_sub(rettime, calltime);</span></div=
><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">duration =3D (unsigned long long) ktime_to_n=
s(delta) &gt;&gt; 10;</span></div><div><span class=3D"Apple-tab-s=
pan" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">printk(KERN=
_DEBUG "initcall %pF returned %d after %lld usecs\n",</span></div=
><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;"> fn, ret, duration);</span></div><div><br><=
/div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre=
"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">return ret;</span></div><div><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">}</span><=
/div><div><br></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">#ifdef CONFIG_MTPROF</span></div><di=
v><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">#include "bootprof.h"</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">#else</span></div>=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">#define TIME_LOG_START()</span></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#define TI=
ME_LOG_END()</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">#define bootprof_initcall(fn, t=
s)</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">#endif</span></div><div><br></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>int __init_or_module do_one_initcall(initcall_t fn)</span></div>=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">{</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">int count =3D preempt_co=
unt();</span></div><div><span class=3D"Apple-tab-span" style=3D"w=
hite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">int ret;</span></div><div>=
<span class=3D"Apple-tab-span" style=3D"white-space:pre"><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</s=
pan></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">char msgbuf[64];</span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#ifdef CONFI=
G_MTPROF</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">unsigned long long ts =3D=
 0;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">#endif</span></div><div><br></div><div><sp=
an class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span=
></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">if (initcall_blacklisted(fn))</span></div><div><span=20=
class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span><=
/span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">return -EPERM;</span></div><div><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">#ifdef CONFIG_MTK_R=
AM_CONSOLE</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">aee_rr_rec_last_init_fun=
c((unsigned long)fn);</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">#endif</span></div><di=
v><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	<=
/span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">TIME_LOG_START();</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>if (initcall_debug)</span></div><div><span class=3D"Apple-tab-sp=
an" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">		</span></span><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">ret =3D do_=
one_initcall_debug(fn);</span></div><div><span class=3D"Apple-tab=
-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">	</span></span><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">else</spa=
n></div><div><span class=3D"Apple-tab-span" style=3D"white-space:=
pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">		</span></span><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">ret =3D fn();</span></div><div><span=
 class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span><=
/span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">TIME_LOG_END();</span></div><div><span class=3D"Apple-t=
ab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">	</span></span><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">msgbuf[=
0] =3D 0;</span></div><div><br></div><div><span class=3D"Apple-ta=
b-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">	</span></span><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">if (pree=
mpt_count() !=3D count) {</span></div><div><span class=3D"Apple-t=
ab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">		</span></span><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">sprint=
f(msgbuf, "preemption imbalance ");</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">preempt_count_set(count);</span></div><div><span class=3D"Apple=
-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">}</sp=
an></div><div><span class=3D"Apple-tab-span" style=3D"white-space=
:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">if (irqs_disabled()) {</span></div><=
div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">strlcat(msgbuf, "disabled interrupts ", sizeo=
f(msgbuf));</span></div><div><span class=3D"Apple-tab-span" style=
=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">		</span></span><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">local_irq_enable();</s=
pan></div><div><span class=3D"Apple-tab-span" style=3D"white-spac=
e:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">}</span></div><div><span class=3D"A=
pple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">W=
ARN(msgbuf[0], "initcall %pF returned with %s\n", fn, msgbuf);</s=
pan></div><div><span class=3D"Apple-tab-span" style=3D"white-spac=
e:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">bootprof_initcall(fn, ts);</span></=
div><div><br></div><div><span class=3D"Apple-tab-span" style=3D"w=
hite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">return ret;</span></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">}</span></div><div><br></div><div><br></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">exter=
n initcall_t __initcall_start[];</span></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">extern init=
call_t __initcall0_start[];</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">extern initcall_t=20=
__initcall1_start[];</span></div><div><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">extern initcall_t __ini=
tcall2_start[];</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">extern initcall_t __initcall=
3_start[];</span></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">extern initcall_t __initcall4_sta=
rt[];</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">extern initcall_t __initcall5_start[];=
</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">extern initcall_t __initcall6_start[];</spa=
n></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">extern initcall_t __initcall7_start[];</span></d=
iv><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">extern initcall_t __initcall_end[];</span></div><div>=
<br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">static initcall_t *initcall_levels[] __initdat=
a =3D {</span></div><div><span class=3D"Apple-tab-span" style=3D"=
white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">__initcall0_start,</span>=
</div><div><span class=3D"Apple-tab-span" style=3D"white-space:pr=
e"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">__initcall1_start,</span></div><div><sp=
an class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span=
></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">__initcall2_start,</span></div><div><span class=3D"Ap=
ple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">__=
initcall3_start,</span></div><div><span class=3D"Apple-tab-span"=20=
style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">__initcall4_start,=
</span></div><div><span class=3D"Apple-tab-span" style=3D"white-s=
pace:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">__initcall5_start,</span></div><=
div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">__initcall6_start,</span></div><div><span clas=
s=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">__initcall7_start,</span></div><div><span class=3D"Apple-tab=
-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">	</span></span><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">__initcal=
l_end,</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">};</span></div><div><br></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">/* Keep these in sync with initcalls in include/linux/init.h */=
</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">static char *initcall_level_names[] __initd=
ata =3D {</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">"early",</span></div><di=
v><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	<=
/span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">"core",</span></div><div><span class=3D"Apple-ta=
b-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">	</span></span><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">"postcor=
e",</span></div><div><span class=3D"Apple-tab-span" style=3D"whit=
e-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">"arch",</span></div><div><spa=
n class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span>=
</span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">"subsys",</span></div><div><span class=3D"Apple-tab-sp=
an" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">"fs",</span>=
</div><div><span class=3D"Apple-tab-span" style=3D"white-space:pr=
e"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">"device",</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>"late",</span></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">};</span></div><div><br></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">static void __init do_initcall_level(int level)</span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">{</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">initcall_t *fn;</span></=
div><div><br></div><div><span class=3D"Apple-tab-span" style=3D"w=
hite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">strcpy(initcall_command_li=
ne, saved_command_line);</span></div><div><span class=3D"Apple-ta=
b-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">	</span></span><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">parse_ar=
gs(initcall_level_names[level],</span></div><div><span class=3D"A=
pple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
 &nbsp; initcall_command_line, __start___param,</span></div><div>=
<span class=3D"Apple-tab-span" style=3D"white-space:pre"><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</=
span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;"> &nbsp; __stop___param - __start___param,</span><=
/div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre=
"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">		</span></span><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;"> &nbsp; level, level,</span></div><div>=
<span class=3D"Apple-tab-span" style=3D"white-space:pre"><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</=
span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;"> &nbsp; NULL, &amp;repair_env_string);</span></di=
v><div><br></div><div><span class=3D"Apple-tab-span" style=3D"whi=
te-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">for (fn =3D initcall_levels[=
level]; fn &lt; initcall_levels[level+1]; fn++)</span></div><div>=
<span class=3D"Apple-tab-span" style=3D"white-space:pre"><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</=
span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">do_one_initcall(*fn);</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">}</spa=
n></div><div><br></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">static void __init do_initcalls(v=
oid)</span></div><div><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">{</span></div><div><span class=3D"Apple=
-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">int l=
evel;</span></div><div><br></div><div><span class=3D"Apple-tab-sp=
an" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">for (level =3D=
 0; level &lt; ARRAY_SIZE(initcall_levels) - 1; level++)</span></=
div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">do_initcall_level(level);</span></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">#ifdef CONFIG_MTK_RAM_CONSOLE</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>aee_rr_rec_last_init_func(~(unsigned long)(0));</span></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">#endif</span></div><div><br></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">}</span></div><div=
><br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">/*</span></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;* Ok, the machi=
ne is now initialized. None of the devices</span></div><div><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&=
nbsp;* have been touched yet, but the CPU subsystem is up and</sp=
an></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">&nbsp;* running, and memory and process managem=
ent works.</span></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">&nbsp;*</span></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbs=
p;* Now we can finally start doing some real work..</span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">&nbsp;*/</span></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">static void __init do_basic=
_setup(void)</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">{</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>cpuset_init_smp();</span></div><div><span class=3D"Apple-tab-spa=
n" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">shmem_init();=
</span></div><div><span class=3D"Apple-tab-span" style=3D"white-s=
pace:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">driver_init();</span></div><div>=
<span class=3D"Apple-tab-span" style=3D"white-space:pre"><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</s=
pan></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">init_irq_proc();</span></div><div><span class=3D"A=
pple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">d=
o_ctors();</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">usermodehelper_enable();=
</span></div><div><span class=3D"Apple-tab-span" style=3D"white-s=
pace:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">do_initcalls();</span></div><div=
><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</=
span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">random_int_secret_init();</span></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">}<=
/span></div><div><br></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">static void __init do_pre_smp=
_initcalls(void)</span></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">{</span></div><div><span cl=
ass=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></sp=
an><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">initcall_t *fn;</span></div><div><br></div><div><span clas=
s=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">for (fn =3D __initcall_start; fn &lt; __initcall0_start; fn+=
+)</span></div><div><span class=3D"Apple-tab-span" style=3D"white=
-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">do_one_initcall(*fn);</span><=
/div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">}</span></div><div><br></div><div><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/*</span></di=
v><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">&nbsp;* This function requests modules which should be=
 loaded by default and is</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;* called twi=
ce right after initrd is mounted and right before init is</span><=
/div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">&nbsp;* exec'd. &nbsp;If such modules are on either=
 initrd or rootfs, they will be</span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;* load=
ed before control is passed to userland.</span></div><div><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nb=
sp;*/</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">void __init load_default_modules(void)=
</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">{</span></div><div><span class=3D"Apple-tab=
-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">	</span></span><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">load_defa=
ult_elevator_module();</span></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">}</span></div><div><b=
r></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">static int run_init_process(const char *init_fil=
ename)</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">{</span></div><div><span class=3D"App=
le-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">arg=
v_init[0] =3D init_filename;</span></div><div><span class=3D"Appl=
e-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">retu=
rn do_execve(getname_kernel(init_filename),</span></div><div><spa=
n class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span=
></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">(const char __user *const __user *)argv_init,</span><=
/div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre=
"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">		</span></span><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">(const char __user *const __user *)envp=
_init);</span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">}</span></div><div><br></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">static int try_to_run_init_process(const char *init_filename)</=
span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">{</span></div><div><span class=3D"Apple-tab-s=
pan" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">int ret;</s=
pan></div><div><br></div><div><span class=3D"Apple-tab-span" styl=
e=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">ret =3D run_init_pro=
cess(init_filename);</span></div><div><br></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>if (ret &amp;&amp; ret !=3D -ENOENT) {</span></div><div><span cl=
ass=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span></s=
pan><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">pr_err("Starting init: %s exists but couldn't execute it=20=
(error %d)\n",</span></div><div><span class=3D"Apple-tab-span" st=
yle=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">		</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;"> &nbsp; &nbsp; &nb=
sp; init_filename, ret);</span></div><div><span class=3D"Apple-ta=
b-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">	</span></span><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">}</span>=
</div><div><br></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">return ret;</span></div>=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">}</span></div><div><br></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">static noinline vo=
id __init kernel_init_freeable(void);</span></div><div><br></div>=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">#ifdef CONFIG_DEBUG_RODATA</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">static b=
ool rodata_enabled =3D true;</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">static int __in=
it set_debug_rodata(char *str)</span></div><div><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">{</span></div=
><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">return strtobool(str, &amp;rodata_enabled);<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">}</span></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">__setup("rodata=3D",=20=
set_debug_rodata);</span></div><div><br></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">static voi=
d mark_readonly(void)</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">{</span></div><div><sp=
an class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span=
></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">if (rodata_enabled)</span></div><div><span class=3D"A=
pple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
mark_rodata_ro();</span></div><div><span class=3D"Apple-tab-span"=
 style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">else</span></di=
v><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">pr_info("Kernel memory protection disabled=
.\n");</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">}</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#else</span></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">static inline void mark_readonly(void)</span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">{</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">pr_warn("This architectu=
re does not have kernel memory protection.\n");</span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">}</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">#endif</span></div><div><br></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em; background-color: rgb(255, 173, 91);">static int __ref kernel=
_init(void *unused) &nbsp;<b><span data-wiz-span=3D"data-wiz-span=
" style=3D"color: rgb(255, 0, 0);">--&gt;=B5=DA=D2=BB=B8=F6=CF=DF=
=B3=CC=B5=C4=C6=F4=B6=AF=A3=AC=D6=D8=B5=E3=C4=D1=B5=E3=B7=D6=CE=F6=
</span></b></span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem; background-color: rgb(255, 173, 9=
1);">{</span></div><div><span class=3D"Apple-tab-span" style=3D"w=
hite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem; background-color: rgb(255, 173, 91);">	</span>=
</span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem; background-color: rgb(255, 173, 91);">int ret;</span></=
div><div><br></div><div><span class=3D"Apple-tab-span" style=3D"w=
hite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem; background-color: rgb(255, 173, 91);">	</span>=
</span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem; background-color: rgb(255, 173, 91);"><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"background-color: rgb(255, 173, 91)=
;">kernel_init_freeable(); &nbsp;</span><b><span data-wiz-span=3D=
"data-wiz-span" style=3D"color: rgb(255, 0, 0); background-color:=
 rgb(255, 173, 91);">--&gt;=B4=F2=BF=AA=BF=D8=D6=C6=CC=A8=C9=E8=B1=
=B8</span></b></span><b style=3D"font-size: 13.005px; line-height=
: 20.808px;"><span data-wiz-span=3D"data-wiz-span" style=3D"color=
: rgb(255, 0, 0); background-color: rgb(255, 173, 91);">=A3=AC=D5=
=E2=B2=BF=B7=D6=BF=C9=CF=C8=CC=F8=B9=FD=A3=AC=BA=F3=C3=E6=D3=D0=CA=
=B1=BC=E4=D4=D9=BB=D8=C0=B4=D1=D0=BE=BF</span></b></div><div><spa=
n class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem; backgroun=
d-color: rgb(255, 173, 91);">	</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem; background-color: r=
gb(255, 173, 91);">/* need to finish all async __init code before=
 freeing the memory */</span></div><div><span class=3D"Apple-tab-=
span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem; background-color: rgb(255, 173=
, 91);">	</span></span><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem; background-color: rgb(255, 173, 91);">a=
sync_synchronize_full();</span></div><div><span class=3D"Apple-ta=
b-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem; background-color: rgb(255, 1=
73, 91);">	</span></span><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem; background-color: rgb(255, 173, 91);"=
>free_initmem();</span></div><div><span class=3D"Apple-tab-span"=20=
style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem; background-color: rgb(255, 173, 91);=
">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem; background-color: rgb(255, 173, 91);">mark_re=
adonly();</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem; background-color: rgb(255, 173, 91);">	</spa=
n></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem; background-color: rgb(255, 173, 91);">system_state =3D=
 SYSTEM_RUNNING;</span></div><div><span class=3D"Apple-tab-span"=20=
style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem; background-color: rgb(255, 173, 91);=
">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem; background-color: rgb(255, 173, 91);">numa_de=
fault_policy();</span></div><div><br></div><div><span class=3D"Ap=
ple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem; background-color: rgb(=
255, 173, 91);">	</span></span><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem; background-color: rgb(255, 173,=
 91);">flush_delayed_fput();</span></div><div><br></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem; b=
ackground-color: rgb(255, 173, 91);">#ifdef CONFIG_MTPROF</span><=
/div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre=
"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem; background-color: rgb(255, 173, 91);">	</span></span><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem; back=
ground-color: rgb(255, 173, 91);">log_boot("Kernel_init_done");</=
span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem; background-color: rgb(255, 173, 91);">#endif</=
span></div><div><br></div><div><span class=3D"Apple-tab-span" sty=
le=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem; background-color: rgb(255, 173, 91);">=09=
</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem; background-color: rgb(255, 173, 91);">if (ramdis=
k_execute_command) { &nbsp;<b><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"color: rgb(255, 0, 0);">--&gt;=B9=D2=D4=D8=B8=F9=CE=C4=
=BC=FE=CF=B5=CD=B3=A3=AC=D5=E2=B2=BF=B7=D6=BF=C9=CF=C8=CC=F8=B9=FD=
=A3=AC=BA=F3=C3=E6=D3=D0=CA=B1=BC=E4=D4=D9=BB=D8=C0=B4=D1=D0=BE=BF=
</span></b></span></div><div><span class=3D"Apple-tab-span" style=
=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem; background-color: rgb(255, 173, 91);">		</s=
pan></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem; background-color: rgb(255, 173, 91);">ret =3D run_i=
nit_process(ramdisk_execute_command);</span></div><div><span clas=
s=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem; background-colo=
r: rgb(255, 173, 91);">		</span></span><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem; background-color: rgb(2=
55, 173, 91);">if (!ret)</span></div><div><span class=3D"Apple-ta=
b-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem; background-color: rgb(255, 1=
73, 91);">			</span></span><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem; background-color: rgb(255, 173, 91)=
;">return 0;</span></div><div><span class=3D"Apple-tab-span" styl=
e=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem; background-color: rgb(255, 173, 91);">	=09=
</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem; background-color: rgb(255, 173, 91);">pr_err("Fa=
iled to execute %s (error %d)\n",</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem; background-color: r=
gb(255, 173, 91);">		</span></span><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem; background-color: rgb(255,=20=
173, 91);"> &nbsp; &nbsp; &nbsp; ramdisk_execute_command, ret);</=
span></div><div><span class=3D"Apple-tab-span" style=3D"white-spa=
ce:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem; background-color: rgb(255, 173, 91);">	</span></span><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
; background-color: rgb(255, 173, 91);">}</span></div><div><br></=
div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em; background-color: rgb(255, 173, 91);">	</span></span><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem; backg=
round-color: rgb(255, 173, 91);">/*</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem; background-color: r=
gb(255, 173, 91);">	</span></span><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem; background-color: rgb(255, 1=
73, 91);"> * We try each of these until one succeeds.</span></div=
><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
 background-color: rgb(255, 173, 91);">	</span></span><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem; backgrou=
nd-color: rgb(255, 173, 91);"> *</span></div><div><span class=3D"=
Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem; background-color: rg=
b(255, 173, 91);">	</span></span><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem; background-color: rgb(255, 17=
3, 91);"> * The Bourne shell can be used instead of init if we ar=
e</span></div><div><span class=3D"Apple-tab-span" style=3D"white-=
space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem; background-color: rgb(255, 173, 91);">	</span></spa=
n><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem; background-color: rgb(255, 173, 91);"> * trying to recover a=
 really broken machine.</span></div><div><span class=3D"Apple-tab=
-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem; background-color: rgb(255, 17=
3, 91);">	</span></span><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem; background-color: rgb(255, 173, 91);">=
 */</span></div><div><span class=3D"Apple-tab-span" style=3D"whit=
e-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem; background-color: rgb(255, 173, 91);">	</span></s=
pan><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem; background-color: rgb(255, 173, 91);">if (execute_command)=
 {</span><span style=3D"font-size: 13.005px; line-height: 20.808p=
x; background-color: rgb(255, 173, 91);"><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"background-color: rgb(255, 173, 91);">&nbs=
p;&nbsp;</span></span><b style=3D"font-size: 13.005px; line-heigh=
t: 20.808px;"><span data-wiz-span=3D"data-wiz-span" style=3D"colo=
r: rgb(255, 0, 0); background-color: rgb(255, 173, 91);">--&gt;=D5=
=E2=B2=BF=B7=D6=D0=E8=D2=AA=D6=D8=B5=E3=C0=ED=BD=E2=A3=AC=D2=BB=B0=
=E3=B6=BC=CA=C7=CD=A8=B9=FD=D5=E2=D6=D6=B7=BD=CA=BD=C6=F4=B6=AF=B5=
=DA=D2=BB=B8=F6=D5=E6=D5=FD=B5=C4=BD=F8=B3=CC=B5=C4</span></b></d=
iv><div><span class=3D"Apple-tab-span" style=3D"white-space:pre">=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m; background-color: rgb(255, 173, 91);">		</span></span><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem; backg=
round-color: rgb(255, 173, 91);">ret =3D run_init_process(execute=
_command);</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem; background-color: rgb(255, 173, 91);">		</sp=
an></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem; background-color: rgb(255, 173, 91);">if (!ret)</spa=
n></div><div><span class=3D"Apple-tab-span" style=3D"white-space:=
pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem; background-color: rgb(255, 173, 91);">			</span></span><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
 background-color: rgb(255, 173, 91);">return 0;</span></div><div=
><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem; back=
ground-color: rgb(255, 173, 91);">		</span></span><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem; background-c=
olor: rgb(255, 173, 91);">panic("Requested init %s failed (error=20=
%d).",</span></div><div><span class=3D"Apple-tab-span" style=3D"w=
hite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem; background-color: rgb(255, 173, 91);">		</span=
></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem; background-color: rgb(255, 173, 91);"> &nbsp; &nbsp; &=
nbsp;execute_command, ret);</span></div><div><span class=3D"Apple=
-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem; background-color: rgb(255=
, 173, 91);">	</span></span><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem; background-color: rgb(255, 173, 91=
);">}</span></div><div><b><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem; color: rgb(255, 0, 0); background-color: rgb=
(255, 173, 91);">	</span></span><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem; color: rgb(255, 0, 0); backgro=
und-color: rgb(255, 173, 91);"><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"background-color: rgb(255, 173, 91);">if (!try_to_ru=
n_init_process("/sbin/init") || &nbsp;</span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.8rem; background-color: rgb=
(255, 173, 91);">--&gt;</span></span></b><font color=3D"#ff0000">=
<span style=3D"font-size: 13.005px; line-height: 20.808px;"><b><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"color: rgb(255, 0, 0=
); font-size: 0.8rem; background-color: rgb(255, 173, 91);">=D5=E2=
=B8=F6=BA=AF=CA=FD=BB=E1=C8=A5=B8=F9=CE=C4=BC=FE=CF=B5=CD=B3=D6=D0=
=D1=B0=D5=D2init=B3=CC=D0=F2=A3=AC=BE=DF=CC=E5=C2=B7=BE=B6=D3=C9l=
k=B4=AB=B5=DD=B9=FD=C0=B4=B5=C4cmdline=B2=CE=CA=FD=CC=E1=B9=A9=A3=
=AC=D2=BB=B5=A9init=B3=CC=D0=F2=B1=BB=D5=D2=B5=BD=A3=AC=BE=CD=BB=E1=
=C6=F4=B6=AFinit=BD=F8=B3=CC=A3=A8=B8=C3=BF=C9=D6=B4=D0=D0=B3=CC=D0=
=F2=B5=C4=CE=C4=BC=FE=C3=FB=B2=BB=D2=BB=B6=A8=BD=D0init=A3=A9=A3=AC=
=C8=BB=BA=F3=B2=D9=D7=F7=CF=B5=CD=B3=D5=FD=CA=BD=D4=CB=D0=D0=A3=AC=
=D6=C1=B4=CB=D2=BB=C8=A5=B2=BB=B8=B4=B7=B5</span></b></span></fon=
t></div><div><b><span class=3D"Apple-tab-span" style=3D"white-spa=
ce:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem; color: rgb(255, 0, 0); background-color: rgb(255, 173,=
 91);">	</span></span><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem; color: rgb(255, 0, 0); background-color:=
 rgb(255, 173, 91);"> &nbsp; &nbsp;!try_to_run_init_process("/etc=
/init") ||</span></b></div><div><b><span class=3D"Apple-tab-span"=
 style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem; color: rgb(255, 0, 0); background-c=
olor: rgb(255, 173, 91);">	</span></span><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem; color: rgb(255, 0, 0)=
; background-color: rgb(255, 173, 91);"> &nbsp; &nbsp;!try_to_run=
_init_process("/bin/init") ||</span></b></div><div><b><span class=
=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem; color: rgb(255,=20=
0, 0); background-color: rgb(255, 173, 91);">	</span></span><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem; co=
lor: rgb(255, 0, 0); background-color: rgb(255, 173, 91);"> &nbsp=
; &nbsp;!try_to_run_init_process("/bin/sh"))</span></b></div><div=
><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem; back=
ground-color: rgb(255, 173, 91);">		</span></span><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem; background-c=
olor: rgb(255, 173, 91);">return 0;</span></div><div><br></div><d=
iv><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem; ba=
ckground-color: rgb(255, 173, 91);">	</span></span><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem; background-=
color: rgb(255, 173, 91);">panic("No working init found. &nbsp;Tr=
y passing init=3D option to kernel. "</span></div><div><span clas=
s=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem; background-colo=
r: rgb(255, 173, 91);">	</span></span><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem; background-color: rgb(25=
5, 173, 91);"> &nbsp; &nbsp; &nbsp;"See Linux Documentation/init.=
txt for guidance.");</span></div><div><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem; background-color: rgb(25=
5, 173, 91);">}</span></div><div><br></div><div><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">static noinli=
ne void __init kernel_init_freeable(void)</span></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">{<=
/span></div><div><span class=3D"Apple-tab-span" style=3D"white-sp=
ace:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">/*</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
> * Wait until kthreadd is all set-up.</span></div><div><span cla=
ss=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></spa=
n><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;"> */</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">wait_for_completion(&amp=
;kthreadd_done);</span></div><div><br></div><div><span class=3D"A=
pple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/=
* Now the scheduler is fully set up and can do blocking allocatio=
ns */</span></div><div><span class=3D"Apple-tab-span" style=3D"wh=
ite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">gfp_allowed_mask =3D __GFP_=
BITS_MASK;</span></div><div><br></div><div><span class=3D"Apple-t=
ab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">	</span></span><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/*</spa=
n></div><div><span class=3D"Apple-tab-span" style=3D"white-space:=
pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;"> * init can allocate pages on any nod=
e</span></div><div><span class=3D"Apple-tab-span" style=3D"white-=
space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;"> */</span></div><div><span clas=
s=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">set_mems_allowed(node_states[N_MEMORY]);</span></div><div><s=
pan class=3D"Apple-tab-span" style=3D"white-space:pre"><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</spa=
n></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">/*</span></div><div><span class=3D"Apple-tab-span" s=
tyle=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;"> * init can run on=
 any cpu.</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;"> */</span></div><div><sp=
an class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span=
></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">set_cpus_allowed_ptr(current, cpu_all_mask);</span></=
div><div><br></div><div><span class=3D"Apple-tab-span" style=3D"w=
hite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">cad_pid =3D task_pid(curre=
nt);</span></div><div><br></div><div><span class=3D"Apple-tab-spa=
n" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">smp_prepare_c=
pus(setup_max_cpus);</span></div><div><br></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>do_pre_smp_initcalls();</span></div><div><span class=3D"Apple-ta=
b-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">	</span></span><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">lockup_d=
etector_init();</span></div><div><br></div><div><span class=3D"Ap=
ple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">sm=
p_init();</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">sched_init_smp();</span>=
</div><div><br></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">page_alloc_init_late();<=
/span></div><div><br></div><div><span class=3D"Apple-tab-span" st=
yle=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">do_basic_setup();<=
/span></div><div><br></div><div><span class=3D"Apple-tab-span" st=
yle=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">/* Open the /dev/c=
onsole on the rootfs, this should never fail */</span></div><div>=
<span class=3D"Apple-tab-span" style=3D"white-space:pre"><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</s=
pan></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">if (sys_open((const char __user *) "/dev/console",=
 O_RDWR, 0) &lt; 0)</span></div><div><span class=3D"Apple-tab-spa=
n" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">		</span></span><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">pr_err("Warn=
ing: unable to open an initial console.\n");</span></div><div><br=
></div><div><span class=3D"Apple-tab-span" style=3D"white-space:p=
re"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">(void) sys_dup(0);</span></div><div><s=
pan class=3D"Apple-tab-span" style=3D"white-space:pre"><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</spa=
n></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">(void) sys_dup(0);</span></div><div><span class=3D"A=
pple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/=
*</span></div><div><span class=3D"Apple-tab-span" style=3D"white-=
space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;"> * check if there is an early u=
serspace init. &nbsp;If yes, let it do all</span></div><div><span=
 class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span><=
/span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;"> * the work</span></div><div><span class=3D"Apple-tab-s=
pan" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"> */</span><=
/div><div><br></div><div><span class=3D"Apple-tab-span" style=3D"=
white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">if (!ramdisk_execute_comm=
and)</span></div><div><span class=3D"Apple-tab-span" style=3D"whi=
te-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">ramdisk_execute_command =3D=
 "/init";</span></div><div><br></div><div><span class=3D"Apple-ta=
b-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">	</span></span><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">if (sys_=
access((const char __user *) ramdisk_execute_command, 0) !=3D 0)=20=
{</span></div><div><span class=3D"Apple-tab-span" style=3D"white-=
space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">ramdisk_execute_command =3D NU=
LL;</span></div><div><span class=3D"Apple-tab-span" style=3D"whit=
e-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">prepare_namespace();</span><=
/div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre=
"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">}</span></div><div><br></div><div><span cl=
ass=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></sp=
an><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">/*</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;"> * Ok, we have completed=
 the initial bootup, and</span></div><div><span class=3D"Apple-ta=
b-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">	</span></span><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"> * we're=
 essentially up and running. Get rid of the</span></div><div><spa=
n class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span>=
</span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;"> * initmem segments and start the user-mode stuff..</s=
pan></div><div><span class=3D"Apple-tab-span" style=3D"white-spac=
e:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;"> *</span></div><div><span class=3D"=
Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
 * rootfs is available now, try loading the public keys</span></d=
iv><div><span class=3D"Apple-tab-span" style=3D"white-space:pre">=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;"> * and default modules</span></div><div><s=
pan class=3D"Apple-tab-span" style=3D"white-space:pre"><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</spa=
n></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;"> */</span></div><div><br></div><div><span class=3D"A=
pple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">i=
ntegrity_load_keys();</span></div><div><span class=3D"Apple-tab-s=
pan" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">load_defaul=
t_modules();</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">}</span></div></div><div><br></=
div></body></html>

------=_Next_Part_0138495328.101--

------=_Next_Part_0415485984.006--

