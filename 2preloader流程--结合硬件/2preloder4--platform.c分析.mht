From: WizMime<support@wiz.cn>
Subject: =?gb2312?B?MnByZWxvZGVyNC0tcGxhdGZvcm0uY7fWzvY=?=
Date: Date: Mon, 23 Oct 2017 08:42:57 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="multipart/alternative";
	boundary="----=_Next_Part_0415372452.859"

This is a multi-part message in MIME format.

------=_Next_Part_0415372452.859
Content-Type: multipart/alternative;
	boundary="----=_Next_Part_0138457484.723"


------=_Next_Part_0138457484.723
Content-Type: text/plain;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

This is a multi-part message in MIME format.

------=_Next_Part_0138457484.723
Content-Type: text/html;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML><html><head>=0D=0A<meta http-equiv=3D"Content-Type=
" content=3D"text/html; charset=3Dgb2312">=0A=0A<title>2preloder4=
--platform.c=B7=D6=CE=F6</title>=0A    <!--mark |wiz_custom_css|=20=
for wizeditor replace it-->=0A<style id=3D"wiz_custom_css">html,=20=
body {            font-size: 15px;        }        body {       =20=
    font-family: Helvetica, 'Hiragino Sans GB', '=CE=A2=C8=ED=D1=C5=
=BA=DA', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;=
            line-height: 1.6;            margin: 0;            pa=
dding: 20px 15px;            padding: 1.33rem 1rem;        }    =20=
   h1, h2, h3, h4, h5, h6 {            margin: 20px 0 10px;     =20=
      margin: 1.33rem 0 0.667rem;            padding: 0;        =20=
   font-weight: bold;        }        h1 {            font-size:=20=
21px;            font-size: 1.4rem;        }        h2 {        =20=
   font-size: 20px;            font-size: 1.33rem;        }     =20=
  h3 {            font-size: 18px;            font-size: 1.2rem;=20=
       }        h4 {            font-size: 17px;            font-=
size: 1.13rem;        }        h5 {            font-size: 15px; =20=
          font-size: 1rem;        }        h6 {            font-s=
ize: 15px;            font-size: 1rem;            color: #777777;=
            margin: 1rem 0;        }        div, p, ul, ol, dl, l=
i {            margin: 0;        }        blockquote, table, pre,=
 code {            margin: 8px 0;        }        ul, ol {      =20=
     padding-left: 32px;            padding-left: 2.13rem;      =20=
 }        blockquote {            padding: 0 12px;            pad=
ding: 0 0.8rem;        }        blockquote > :first-child {     =20=
      margin-top: 0;        }        blockquote > :last-child { =20=
          margin-bottom: 0;        }        img {            bord=
er: 0;            max-width: 100%;            height: auto !impor=
tant;            margin: 2px 0;        }        table {         =20=
  border-collapse: collapse;            border: 1px solid #bbbbbb=
;        }        td, th {            padding: 4px 8px;         =20=
  border-collapse: collapse;            border: 1px solid #bbbbbb=
;			        }        @media only screen and (-webkit-max-device-w=
idth: 1024px), only screen and (-o-max-device-width: 1024px), onl=
y screen and (max-device-width: 1024px), only screen and (-webkit=
-min-device-pixel-ratio: 3), only screen and (-o-min-device-pixel=
-ratio: 3), only screen and (min-device-pixel-ratio: 3) {       =20=
    html, body {                font-size: 17px;            }   =20=
        body {                line-height: 1.7;                pa=
dding: 0.75rem 0.9375rem;                color: #353c47;        =20=
   }            h1 {                font-size: 2.125rem;        =20=
   }            h2 {                font-size: 1.875rem;        =20=
   }            h3 {                font-size: 1.625rem;        =20=
   }            h4 {                font-size: 1.375rem;        =20=
   }            h5 {                font-size: 1.125rem;        =20=
   }            h6 {                color: inherit;            }=20=
           ul, ol {                padding-left: 2.5rem;        =20=
   }            blockquote {                padding: 0 0.9375rem;=
            }        }</style></head>=0A=0A<body spellcheck=3D"fa=
lse" ><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;"><b><span data-wiz-span=3D"data-wiz-span" style=3D"color=
: rgb(255, 0, 0);">vendor/mediatek/proprietary/bootable/bootloade=
r/preloader/platform/mt8167/src/drivers/platform.c</span></b></sp=
an><div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">/* Copyright Statement:</span></div><div><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nb=
sp;*</span></div><div><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">&nbsp;* This software/firmware and rela=
ted documentation ("MediaTek Software") are</span></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
&nbsp;* protected under relevant copyright laws. The information=20=
contained herein is</span></div><div><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">&nbsp;* confidential and=
 proprietary to MediaTek Inc. and/or its licensors. Without</span=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">&nbsp;* the prior written permission of MediaTek=20=
inc. and/or its licensors, any</span></div><div><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;* repro=
duction, modification, use or disclosure of MediaTek Software, an=
d</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp;* information contained herein, in w=
hole or in part, shall be strictly</span></div><div><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;* p=
rohibited.</span></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">&nbsp;*</span></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbs=
p;* MediaTek Inc. (C) 2010. All rights reserved.</span></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">&nbsp;*</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">&nbsp;* BY OPENING THIS FILE, R=
ECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES</span></div>=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">&nbsp;* THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATION=
S ("MEDIATEK SOFTWARE")</span></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;* RECEIVED FRO=
M MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER</s=
pan></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">&nbsp;* ON AN "AS-IS" BASIS ONLY. MEDIATEK EXP=
RESSLY DISCLAIMS ANY AND ALL</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;* WARRANT=
IES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED=
</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">&nbsp;* WARRANTIES OF MERCHANTABILITY, FITN=
ESS FOR A PARTICULAR PURPOSE OR</span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;* NONI=
NFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVE=
R WITH</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">&nbsp;* RESPECT TO THE SOFTWARE OF AN=
Y THIRD PARTY WHICH MAY BE USED BY,</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;*=20=
INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECE=
IVER AGREES</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">&nbsp;* TO LOOK ONLY TO SUCH THI=
RD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.</span></div><di=
v><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">&nbsp;* RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER=
'S SOLE RESPONSIBILITY TO</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;* OBTAIN FRO=
M ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK</span=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">&nbsp;* SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESP=
ONSIBLE FOR ANY MEDIATEK SOFTWARE</span></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;* RE=
LEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTIC=
ULAR</span></div><div><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">&nbsp;* STANDARD OR OPEN FORUM. RECEIVE=
R'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S</span></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>&nbsp;* ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDI=
ATEK SOFTWARE</span></div><div><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">&nbsp;* RELEASED HEREUNDER WIL=
L BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE</span></div>=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">&nbsp;* MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWA=
RE LICENSE FEES OR SERVICE</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;* CHARGE PAI=
D BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.</s=
pan></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">&nbsp;*</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;* The follow=
ing software/firmware and/or related documentation ("MediaTek</sp=
an></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">&nbsp;* Software") have been modified by MediaT=
ek Inc. All revisions are subject to</span></div><div><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;*=
 any receiver's applicable license agreements with MediaTek Inc.<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">&nbsp;*/</span></div><div><br></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>#include "typedefs.h"</span></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">#include "platform.h"=
</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">#include "boot_device.h"</span></div><div><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">#include "nand.h"</span></div><div><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">#include "mmc_common_in=
ter.h"</span></div><div><br></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">#include "uart.h"</spa=
n></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">#include "nand_core.h"</span></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#inc=
lude "pll.h"</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">#include "i2c.h"</span></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">#include "rtc.h"</span></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">#include "emi.h"</sp=
an></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">#include "pmic.h"</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#include=
 "wdt.h"</span></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">#include "ram_console.h"</span></di=
v><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">#include "cust_sec_ctrl.h"</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#inclu=
de "gpio.h"</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">#include "pmic_wrap_init.h"</spa=
n></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">#include "keypad.h"</span></div><div><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#includ=
e "usbphy.h"</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">#include "timer.h"</span></div>=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">#include "dram_buffer.h"</span></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#include "=
spm_mtcmos.h"</span></div><div><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">#ifndef MTK_EMMC_SUPPORT</span=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">#include "nand_device_list.h"</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">#endif</span></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">#include "pl_version.h"</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">#include "bq24296.h"</span></div><div><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#include "tz_=
mem.h"</span></div><div><br></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">/*=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D*/</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">/* CONSTAND DEFINITIONS &nbsp; &=
nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nb=
sp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp=
; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; */</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">/*=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D*/</span></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>#define MOD "[PLFM]"</span></div><div><br></div><div><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/*=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D*/</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">/* GLOBAL VARIABLE=
S &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=20=
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &n=
bsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbs=
p; &nbsp; */</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">/*=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
*/</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">unsigned int sys_stack[CFG_SYS_STACK_SZ &g=
t;&gt; 2];</span></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">const unsigned int sys_stack_sz =3D=
 CFG_SYS_STACK_SZ;</span></div><div><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">boot_mode_t g_boot_mode;<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">boot_dev_t g_boot_dev;</span></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
meta_com_t g_meta_com_type =3D META_UNKNOWN_COM;</span></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">u32 g_meta_com_id =3D 0;</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">boot_reason_t=20=
g_boot_reason;</span></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">ulong g_boot_time;</span></di=
v><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">u32 g_ddr_reserve_enable =3D 0;</span></div><div><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">u=
32 g_ddr_reserve_success =3D 0;</span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">u32 g_smc_bo=
ot_opt;</span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">u32 g_lk_boot_opt;</span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">u32 g_kernel_boot_opt;</span></div><div><br></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">ex=
tern unsigned int part_num;</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">extern part_hdr_t=20=
&nbsp; part_info[PART_MAX_NUM];</span></div><div><br></div><div><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">#if defined (MTK_KERNEL_POWER_OFF_CHARGING)</span></div><div><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">kal_bool kpoc_flag =3D false;</span></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#endif</spa=
n></div><div><br></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">#if CFG_BOOT_ARGUMENT</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">#define bootarg g_dram_buf-&gt;bootarg</span></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">#endif</span></div><div><br></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">#if CFG_USB_AUTO_D=
ETECT</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">bool g_usbdl_flag;</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">#endif</span></div><div><br></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">/*=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D*/</span></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">/* platform_core_handler &nbs=
p; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &=
nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</span></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">/*=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D*/</span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">#define NR_CPUS 8</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">void platform_core_han=
dler(void)</span></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">{</span></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#if CFG_LO=
AD_SLT_AARCH64_KERNEL</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; if (0 =3D=
=3D aarch64_slt_done())</span></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; {</spa=
n></div><div><br></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; print=
("\n%s in platform_core_handler\n", MOD);</span></div><div><span=20=
class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></=
span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">return ;</span></div><div><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; }</span></di=
v><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">#endif</span></div><div><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">}</span></div><div><br></d=
iv><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">/*=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D*/</span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">/* EXTERNAL FUNCTIONS &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbs=
p; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &=
nbsp; &nbsp; &nbsp; &nbsp; */</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/*=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D*/</span></div><div><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">/*mmc_switch_pll is wor=
karound function</span></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">&nbsp; mt8167 should gate c=
lock when switching emmc/sdcard pll.</span></div><div><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=20=
*/</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">static void mmc_config_pll(void)</span></d=
iv><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">{</span></div><div><span class=3D"Apple-tab-span" sty=
le=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">u32 clk_ctrl, clk_s=
el;</span></div><div><br></div><div><span class=3D"Apple-tab-span=
" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/*set emmc clo=
ck infra gate off*/</span></div><div><span class=3D"Apple-tab-spa=
n" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">DRV_SetReg32(=
MSDC_GATE_INFRA_SW_CG, MSDC0_INFRA_SW_CG);</span></div><div><span=
 class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span><=
/span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">/* set emmc clock gated off */</span></div><div><span c=
lass=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></s=
pan><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">DRV_SetReg32(MSDC_CLK_GATE_CTRL, MSDC0_CLK_SW_CG);</span>=
</div><div><span class=3D"Apple-tab-span" style=3D"white-space:pr=
e"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">/* switch emmc pll to 188M*/</span></di=
v><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">clk_sel =3D DRV_Reg32(MSDC_CLK_MUX_REG);</s=
pan></div><div><span class=3D"Apple-tab-span" style=3D"white-spac=
e:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">clk_sel &amp;=3D ~MSDC0_CLK_MUX_SEL=
;</span></div><div><span class=3D"Apple-tab-span" style=3D"white-=
space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">clk_sel |=3D (2 &lt;&lt; 11);</=
span></div><div><span class=3D"Apple-tab-span" style=3D"white-spa=
ce:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">DRV_WriteReg32(MSDC_CLK_MUX_REG, c=
lk_sel);</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">/*clear emmc clock gated=
 off*/</span></div><div><span class=3D"Apple-tab-span" style=3D"w=
hite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">DRV_SetReg32(MSDC_CLK_UNGA=
TE_CTRL, MSDC0_CLK_SW_CG);</span></div><div><span class=3D"Apple-=
tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">	</span></span><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/*clea=
r emmc clock infra gate off*/</span></div><div><span class=3D"App=
le-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">DRV=
_SetReg32(MSDC_UNGATE_INFRA_SW_CG, MSDC0_INFRA_SW_CG);</span></di=
v><div><br></div><div><span class=3D"Apple-tab-span" style=3D"whi=
te-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">/*set sdcard clock infra gat=
e off*/</span></div><div><span class=3D"Apple-tab-span" style=3D"=
white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">DRV_SetReg32(MSDC_GATE_IN=
FRA_SW_CG, MSDC1_INFRA_SW_CG);</span></div><div><span class=3D"Ap=
ple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/*=
set sdcard clock gated off*/</span></div><div><span class=3D"Appl=
e-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">DRV_=
SetReg32(MSDC_CLK_GATE_CTRL, MSDC1_CLK_SW_CG);</span></div><div><=
span class=3D"Apple-tab-span" style=3D"white-space:pre"><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</sp=
an></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">/* switch sdcard pll to 188M*/</span></div><div><sp=
an class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span=
></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">clk_sel =3D DRV_Reg32(MSDC_CLK_MUX_REG);</span></div>=
<div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">clk_sel &amp;=3D ~MSDC1_CLK_MUX_SEL;</span></=
div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">clk_sel |=3D (2 &lt;&lt; 20);</span></div>=
<div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">DRV_WriteReg32(MSDC_CLK_MUX_REG, clk_sel);</s=
pan></div><div><span class=3D"Apple-tab-span" style=3D"white-spac=
e:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">/*clear sdcard clock gated off*/</s=
pan></div><div><span class=3D"Apple-tab-span" style=3D"white-spac=
e:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">DRV_SetReg32(MSDC_CLK_UNGATE_CTRL,=20=
MSDC1_CLK_SW_CG);</span></div><div><span class=3D"Apple-tab-span"=
 style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/*clear sdcard=20=
clock infra gate off*/</span></div><div><span class=3D"Apple-tab-=
span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">DRV_SetReg=
32(MSDC_UNGATE_INFRA_SW_CG, MSDC1_INFRA_SW_CG);</span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">}</span></div><div><br></div><div><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">static u32 boot_device_=
init(void)</span></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">{</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>mmc_config_pll();</span></div><div><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; #if (CFG_BO=
OT_DEV =3D=3D BOOTDEV_SDMMC)</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; r=
eturn (u32)mmc_init_device();</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=20=
#else</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">&nbsp; &nbsp; return (u32)nand_init_de=
vice();</span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">&nbsp; &nbsp; #endif</span></div><di=
v><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">}</span></div><div><br></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">int usb_accessory_in(=
void)</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">{</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#if !CFG_FPGA_P=
LATFORM</span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">&nbsp; &nbsp; int exist =3D 0;</span=
></div><div><br></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">&nbsp; &nbsp; if (PMIC_CHRDET_EXIS=
T =3D=3D pmic_IsUsbCableIn()) {</span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp=
; &nbsp; &nbsp; exist =3D 1;</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &=
nbsp; &nbsp; #if !CFG_USBIF_COMPLIANCE</span></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp=
; &nbsp; &nbsp; &nbsp; /* enable charging current as early as pos=
sible to avoid can't enter</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbs=
p; &nbsp; &nbsp;* following battery charging flow when low batter=
y</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</span=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; platform_set_chrg_cur=
(450);</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; #endif</s=
pan></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">&nbsp; &nbsp; }</span></div><div><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &n=
bsp; return exist;</span></div><div><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">#else</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">&nbsp; &nbsp; return 1;</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">#endif</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">}</span></div><div><br></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">extern bool is_uar=
t_cable_inserted(void);</span></div><div><br></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">int u=
sb_cable_in(void)</span></div><div><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">{</span></div><div><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#if=
 !CFG_FPGA_PLATFORM</span></div><div><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; int exist=20=
=3D 0;</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">&nbsp; &nbsp; CHARGER_TYPE ret;</span=
></div><div><br></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">&nbsp; &nbsp; if ((g_boot_reason =3D=
=3D BR_USB) || usb_accessory_in()) {</span></div><div><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=20=
&nbsp; &nbsp; &nbsp; ret =3D mt_charger_type_detection();</span><=
/div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; if (ret =3D=3D STANDARD=
_HOST || ret =3D=3D CHARGING_HOST) {</span></div><div><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=20=
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print("\n%s USB cable in\n", M=
OD);</span></div><div><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbs=
p; mt_usb_phy_poweron();</span></div><div><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp=
; &nbsp; &nbsp; &nbsp; mt_usb_phy_savecurrent();</span></div><div=
><br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; exi=
st =3D 1;</span></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; } else=
 if (ret =3D=3D NONSTANDARD_CHARGER || ret =3D=3D STANDARD_CHARGE=
R) {</span></div><div><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbs=
p; #if CFG_USBIF_COMPLIANCE</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbs=
p; &nbsp; &nbsp; &nbsp; platform_set_chrg_cur(450);</span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #endif</span></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&=
nbsp; &nbsp; }</span></div><div><br></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=20=
return exist;</span></div><div><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">#else</span></div><div><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nb=
sp; &nbsp; print("\n%s USB cable in\n", MOD);</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">&nbsp; &nbsp; mt_usb_phy_poweron();</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=
 &nbsp; mt_usb_phy_savecurrent();</span></div><div><br></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">&nbsp; &nbsp; return 1;</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#endif</span></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">}</span></div><div><br></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#if CFG_FPGA_P=
LATFORM</span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">void show_tx(void)</span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">{</span></div><div><span class=3D"Apple-tab-span" style=3D"wh=
ite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">UINT8 var;</span></div><div=
><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</=
span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">USBPHY_I2C_READ8(0x6E, &amp;var);</span></div><di=
v><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	<=
/span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">UINT8 var2 =3D (var &gt;&gt; 3) &amp; ~0xFE;</sp=
an></div><div><span class=3D"Apple-tab-span" style=3D"white-space=
:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">print("[USB]addr: 0x6E (TX), value:=20=
%x - %x\n", var, var2);</span></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">}</span></div><div><=
br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">void store_tx(UINT8 value)</span></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>{</span></div><div><span class=3D"Apple-tab-span" style=3D"white=
-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">UINT8 var;</span></div><div><s=
pan class=3D"Apple-tab-span" style=3D"white-space:pre"><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</spa=
n></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">UINT8 var2;</span></div><div><span class=3D"Apple-ta=
b-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">	</span></span><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">USBPHY_I=
2C_READ8(0x6E, &amp;var);</span></div><div><br></div><div><span c=
lass=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></s=
pan><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">if (value =3D=3D 0) {</span></div><div><span class=3D"App=
le-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">va=
r2 =3D var &amp; ~(1 &lt;&lt; 3);</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>} else {</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">		</span></span><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">var2 =3D var | (1 &lt;&=
lt; 3);</span></div><div><span class=3D"Apple-tab-span" style=3D"=
white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">}</span></div><div><br></=
div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">USBPHY_I2C_WRITE8(0x6E, var2);</span></div=
><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">USBPHY_I2C_READ8(0x6E, &amp;var);</span></di=
v><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">var2 =3D (var &gt;&gt; 3) &amp; ~0xFE;</spa=
n></div><div><br></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">print("[USB]addr: 0x6E T=
X [AFTER WRITE], value after: %x - %x\n", var, var2);</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">}</span></div><div><br></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">void show_rx(void)=
</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">{</span></div><div><span class=3D"Apple-tab=
-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">	</span></span><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">UINT8 var=
;</span></div><div><span class=3D"Apple-tab-span" style=3D"white-=
space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">USBPHY_I2C_READ8(0x77, &amp;var=
);</span></div><div><span class=3D"Apple-tab-span" style=3D"white=
-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">UINT8 var2 =3D (var &gt;&gt; 7=
) &amp; ~0xFE;</span></div><div><span class=3D"Apple-tab-span" st=
yle=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">print("[USB]addr:=20=
0x77 (RX) [AFTER WRITE], value after: %x - %x\n", var, var2);</sp=
an></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">}</span></div><div><br></div><div><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">void test=
_uart(void)</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">{</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>int i=3D0;</span></div><div><span class=3D"Apple-tab-span" style=
=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">UINT8 val =3D 0;</span>=
</div><div><span class=3D"Apple-tab-span" style=3D"white-space:pr=
e"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">for (i=3D0; i&lt;1000; i++)</span></div=
><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">{</span></div><div><span class=3D"Apple-tab-=
span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">			</span></span><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">show_tx(=
);</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=20=
mdelay(300);</span></div><div><span class=3D"Apple-tab-span" styl=
e=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">			</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">if (val) {</span><=
/div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre=
"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">				</span></span><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">val =3D 0;</span></div><div><span cla=
ss=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">			</span></s=
pan><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">}</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">			</span></span><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">else {</span></div><di=
v><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	=09=
		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">val =3D 1;</span></div><div><span class=3D"Ap=
ple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">			</span></span><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
}</span></div><div><span class=3D"Apple-tab-span" style=3D"white-=
space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">			</span></span><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">store_tx(val);</span></div><d=
iv><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=09=
		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">show_rx();</span></div><div><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=
 &nbsp; &nbsp; &nbsp; &nbsp; mdelay(1000);</span></div><div><span=
 class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span><=
/span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">}</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">}</span></div><div><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#endif</s=
pan></div><div><br></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">void set_to_usb_mode(void)</spa=
n></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">{</span></div><div><span class=3D"Apple-tab-span=
" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">		</span></span><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">UINT8 var;</s=
pan></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">#if !CFG_FPGA_PLATFORM</span></div><div><span=20=
class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span><=
/span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">/* Turn on USB MCU Bus Clock */</span></div><div><span=20=
class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span><=
/span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">var =3D READ_REG(PERI_GLOBALCON_PDN0_SET);</span></div>=
<div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">print("\n[USB]USB bus clock: 0x008, value: %=
x\n", var);</span></div><div><span class=3D"Apple-tab-span" style=
=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">		</span></span><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">USB_CLR_BIT(USB0_PDN,=20=
PERI_GLOBALCON_PDN0_SET);</span></div><div><span class=3D"Apple-t=
ab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">		</span></span><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">var =3D=
 READ_REG(PERI_GLOBALCON_PDN0_SET);</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">print("\n[USB]USB bus clock: 0x008, value after: %x\n", var);</=
span></div><div><br></div><div><span class=3D"Apple-tab-span" sty=
le=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">		</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">/* Switch from BC1=
.1 mode to USB mode */</span></div><div><span class=3D"Apple-tab-=
span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">		</span></span><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">var =3D U=
SBPHY_READ8(0x1A);</span></div><div><span class=3D"Apple-tab-span=
" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">		</span></span><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">print("\n[USB=
]addr: 0x1A, value: %x\n", var);</span></div><div><span class=3D"=
Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>USBPHY_WRITE8(0x1A, var &amp; 0x7f);</span></div><div><span clas=
s=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span></spa=
n><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">print("\n[USB]addr: 0x1A, value after: %x\n", USBPHY_READ8(=
0x1A));</span></div><div><br></div><div><span class=3D"Apple-tab-=
span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">		</span></span><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/* Set RG=
_UART_EN to 0 */</span></div><div><span class=3D"Apple-tab-span"=20=
style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">		</span></span><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">var =3D USBPHY_=
READ8(0x6E);</span></div><div><span class=3D"Apple-tab-span" styl=
e=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">		</span></span><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">print("\n[USB]addr:=
 0x6E, value: %x\n", var);</span></div><div><span class=3D"Apple-=
tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">		</span></span><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">USBPH=
Y_WRITE8(0x6E, var &amp; ~0x01);</span></div><div><span class=3D"=
Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>print("\n[USB]addr: 0x6E, value after: %x\n", USBPHY_READ8(0x6E)=
);</span></div><div><br></div><div><span class=3D"Apple-tab-span"=
 style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">		</span></span><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/* Set RG_USB2=
0_DM_100K_EN to 0 */</span></div><div><span class=3D"Apple-tab-sp=
an" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">		</span></span><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">var =3D USB=
PHY_READ8(0x22);</span></div><div><span class=3D"Apple-tab-span"=20=
style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">		</span></span><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">print("\n[USB]a=
ddr: 0x22, value: %x\n", var);</span></div><div><span class=3D"Ap=
ple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">U=
SBPHY_WRITE8(0x22, var &amp; ~0x02);</span></div><div><span class=
=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span></span=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">print("\n[USB]addr: 0x22, value after: %x\n", USBPHY_READ8(0=
x22));</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">#else</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">/* Set RG_UART_EN to 0 */</span></div><div><span class=3D"Apple=
-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">		</span></span><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">USBP=
HY_I2C_READ8(0x6E, &amp;var);</span></div><div><span class=3D"App=
le-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">pr=
int("\n[USB]addr: 0x6E, value: %x\n", var);</span></div><div><spa=
n class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span=
></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">USBPHY_I2C_WRITE8(0x6E, var &amp; ~0x01);</span></div=
><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">USBPHY_I2C_READ8(0x6E, &amp;var);</span></d=
iv><div><span class=3D"Apple-tab-span" style=3D"white-space:pre">=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">print("\n[USB]addr: 0x6E, value after: %x\=
n", var);</span></div><div><br></div><div><span class=3D"Apple-ta=
b-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">		</span></span><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/* Set=20=
RG_USB20_DM_100K_EN to 0 */</span></div><div><span class=3D"Apple=
-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">		</span></span><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">USBP=
HY_I2C_READ8(0x22, &amp;var);</span></div><div><span class=3D"App=
le-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">pr=
int("\n[USB]addr: 0x22, value: %x\n", var);</span></div><div><spa=
n class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span=
></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">USBPHY_I2C_WRITE8(0x22, var &amp; ~0x02);</span></div=
><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">USBPHY_I2C_READ8(0x22, &amp;var);</span></d=
iv><div><span class=3D"Apple-tab-span" style=3D"white-space:pre">=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">print("\n[USB]addr: 0x22, value after: %x\=
n", var);</span></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">#endif</span></div><div><span clas=
s=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span></spa=
n><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">var =3D READ_REG(UART1_BASE + 0x90);</span></div><div><span=
 class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span>=
</span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">print("\n[USB]addr: 0x11002090 (UART1), value: %x\n",=20=
var);</span></div><div><span class=3D"Apple-tab-span" style=3D"wh=
ite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">		</span></span><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">WRITE_REG(var &amp; ~0x01,=
 UART1_BASE + 0x90);</span></div><div><span class=3D"Apple-tab-sp=
an" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">		</span></span><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">print("\n[U=
SB]addr: 0x11002090 (UART1), value after: %x\n", READ_REG(UART1_B=
ASE + 0x90));</span></div><div><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">}</span></div><div><br></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">void set_to_uart_mode(void)</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">{</span>=
</div><div><span class=3D"Apple-tab-span" style=3D"white-space:pr=
e"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">		</span></span><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">UINT8 var;</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#if !C=
FG_FPGA_PLATFORM</span></div><div><span class=3D"Apple-tab-span"=20=
style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">		</span></span><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/* Turn on USB=20=
MCU Bus Clock */</span></div><div><span class=3D"Apple-tab-span"=20=
style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">		</span></span><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#if 0</span></d=
iv><div><span class=3D"Apple-tab-span" style=3D"white-space:pre">=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">var =3D READ_REG(PERI_GLOBALCON_PDN0_SET);=
</span></div><div><span class=3D"Apple-tab-span" style=3D"white-s=
pace:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">print("\n[USB]USB bus clock: 0x=
008, value: %x\n", var);</span></div><div><span class=3D"Apple-ta=
b-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">		</span></span><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">USB_CLR=
_BIT(USB0_PDN, PERI_GLOBALCON_PDN0_SET);</span></div><div><span c=
lass=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span></=
span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">var =3D READ_REG(PERI_GLOBALCON_PDN0_SET);</span></div><=
div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">print("\n[USB]USB bus clock: 0x008, value aft=
er: %x\n", var);</span></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; #endif</span>=
</div><div><span class=3D"Apple-tab-span" style=3D"white-space:pr=
e"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">		</span></span><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">/* Switch from BC1.1 mode to USB mode=20=
*/</span></div><div><span class=3D"Apple-tab-span" style=3D"white=
-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">var =3D USBPHY_READ8(0x1A);</=
span></div><div><span class=3D"Apple-tab-span" style=3D"white-spa=
ce:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">print("\n[USB]addr: 0x1A, value:=20=
%x\n", var);</span></div><div><span class=3D"Apple-tab-span" styl=
e=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">		</span></span><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">USBPHY_WRITE8(0x1A,=
 var &amp; 0x7f);</span></div><div><span class=3D"Apple-tab-span"=
 style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">		</span></span><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">print("\n[USB]=
addr: 0x1A, value after: %x\n", USBPHY_READ8(0x1A));</span></div>=
<div><br></div><div><span class=3D"Apple-tab-span" style=3D"white=
-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">/* Set ru_uart_mode to 2'b01=20=
*/</span></div><div><span class=3D"Apple-tab-span" style=3D"white=
-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">var =3D USBPHY_READ8(0x6B);</=
span></div><div><span class=3D"Apple-tab-span" style=3D"white-spa=
ce:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">print("\n[USB]addr: 0x6B, value:=20=
%x\n", var);</span></div><div><span class=3D"Apple-tab-span" styl=
e=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">		</span></span><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">USBPHY_WRITE8(0x6B,=
 var | 0x5C);</span></div><div><span class=3D"Apple-tab-span" sty=
le=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">		</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">print("\n[USB]addr=
: 0x6B, value after: %x\n", USBPHY_READ8(0x6B));</span></div><div=
><br></div><div><span class=3D"Apple-tab-span" style=3D"white-spa=
ce:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">/* Set RG_UART_EN to 1 */</span><=
/div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre=
"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">		</span></span><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">var =3D USBPHY_READ8(0x6E);</span></div=
><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">print("\n[USB]addr: 0x6E, value: %x\n", var=
);</span></div><div><span class=3D"Apple-tab-span" style=3D"white=
-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">USBPHY_WRITE8(0x6E, var | 0x0=
7);</span></div><div><span class=3D"Apple-tab-span" style=3D"whit=
e-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">print("\n[USB]addr: 0x6E, va=
lue after: %x\n", USBPHY_READ8(0x6E));</span></div><div><br></div=
><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">/* Set RG_USB20_DM_100K_EN to 1 */</span></=
div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">var =3D USBPHY_READ8(0x22);</span></div><d=
iv><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=09=
	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">print("\n[USB]addr: 0x22, value: %x\n", var);<=
/span></div><div><span class=3D"Apple-tab-span" style=3D"white-sp=
ace:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">USBPHY_WRITE8(0x22, var | 0x02);=
</span></div><div><span class=3D"Apple-tab-span" style=3D"white-s=
pace:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">print("\n[USB]addr: 0x22, value=
 after: %x\n", USBPHY_READ8(0x22));</span></div><div><br></div><d=
iv><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=09=
	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">/* Set RG_SUSPENDM to 1 */</span></div><div><s=
pan class=3D"Apple-tab-span" style=3D"white-space:pre"><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</sp=
an></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">var =3D USBPHY_READ8(0x68);</span></div><div><span=20=
class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span><=
/span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">print("\n[USB]addr: 0x68, value: %x\n", var);</span></d=
iv><div><span class=3D"Apple-tab-span" style=3D"white-space:pre">=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">USBPHY_WRITE8(0x68, var | 0x08);</span></d=
iv><div><span class=3D"Apple-tab-span" style=3D"white-space:pre">=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">print("\n[USB]addr: 0x68, value after: %x\=
n", USBPHY_READ8(0x68));</span></div><div><br></div><div><span cl=
ass=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span></s=
pan><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">/* force suspendm =3D 1 */</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">var =3D USBPHY_READ8(0x6A);</span></div><div><span class=3D"App=
le-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">pr=
int("\n[USB]addr: 0x6A, value: %x\n", var);</span></div><div><spa=
n class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span=
></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">USBPHY_WRITE8(0x6A, var | 0x04);</span></div><div><sp=
an class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</spa=
n></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">print("\n[USB]addr: 0x6A, value after: %x\n", USBPHY=
_READ8(0x6A));</span></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">#else</span></div><div><span=20=
class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span><=
/span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">/* Set ru_uart_mode to 2'b01 */</span></div><div><span=20=
class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span><=
/span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">USBPHY_I2C_READ8(0x6B, &amp;var);</span></div><div><spa=
n class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span=
></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">print("\n[USB]addr: 0x6B, value: %x\n", var);</span><=
/div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre=
"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">		</span></span><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">USBPHY_I2C_WRITE8(0x6B, var | 0x7C);</s=
pan></div><div><span class=3D"Apple-tab-span" style=3D"white-spac=
e:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">USBPHY_I2C_READ8(0x6B, &amp;var);<=
/span></div><div><span class=3D"Apple-tab-span" style=3D"white-sp=
ace:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">print("\n[USB]addr: 0x6B, value=20=
after: %x\n", var);</span></div><div><br></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">/* Set RG_UART_EN to 1 */</span></div><div><span class=3D"Apple=
-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">		</span></span><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">USBP=
HY_I2C_READ8(0x6E, &amp;var);</span></div><div><span class=3D"App=
le-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">pr=
int("\n[USB]addr: 0x6E, value: %x\n", var);</span></div><div><spa=
n class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span=
></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">USBPHY_I2C_WRITE8(0x6E, var | 0x07);</span></div><div=
><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		<=
/span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">USBPHY_I2C_READ8(0x6E, &amp;var);</span></div><d=
iv><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=09=
	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">print("\n[USB]addr: 0x6E, value after: %x\n",=20=
var);</span></div><div><br></div><div><span class=3D"Apple-tab-sp=
an" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">		</span></span><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/* Set RG_U=
SB20_DM_100K_EN to 1 */</span></div><div><span class=3D"Apple-tab=
-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">		</span></span><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">USBPHY_I=
2C_READ8(0x22, &amp;var);</span></div><div><span class=3D"Apple-t=
ab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">		</span></span><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">print(=
"\n[USB]addr: 0x22, value: %x\n", var);</span></div><div><span cl=
ass=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span></s=
pan><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">USBPHY_I2C_WRITE8(0x22, var | 0x02);</span></div><div><sp=
an class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</spa=
n></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">USBPHY_I2C_READ8(0x22, &amp;var);</span></div><div><=
span class=3D"Apple-tab-span" style=3D"white-space:pre"><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</s=
pan></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">print("\n[USB]addr: 0x22, value after: %x\n", var)=
;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">#endif</span></div><div><span class=3D"App=
le-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">md=
elay(100);</span></div><div><br></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbs=
p; &nbsp; var =3D DRV_Reg32(UART0_BASE+0xB0);</span></div><div><s=
pan class=3D"Apple-tab-span" style=3D"white-space:pre"><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</sp=
an></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">print("\n[USB]addr: 0x110030B0 (UART2), value: %x\n=
", var);</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">		</span></span><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">DRV_WriteReg32(UART0_BA=
SE+0xB0, 0x0001);</span></div><div><span class=3D"Apple-tab-span"=
 style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">		</span></span><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">print("\n[USB]=
addr: 0x110030B0 (UART2), value after: %x\n", DRV_Reg32(UART1_BAS=
E+0xB0));</span></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">}</span></div><div><br></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">void platform_vusb_on(void)</span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">{</span></di=
v><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">#if !CFG_FPGA_PLATFORM</span></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nb=
sp; U32 ret=3D0;</span></div><div><br></div><div><span class=3D"A=
pple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">r=
et =3D pmic_config_interface( (kal_uint32)(MT6392_DIGLDO_CON2),</=
span></div><div><span class=3D"Apple-tab-span" style=3D"white-spa=
ce:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">			</span></span><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">(kal_uint32)(1),</span></div><di=
v><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	=09=
	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">(kal_uint32)(MT6392_PMIC_RG_VUSB_EN_MASK),</sp=
an></div><div><span class=3D"Apple-tab-span" style=3D"white-space=
:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">			</span></span><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">(kal_uint32)(MT6392_PMIC_RG_VUSB_E=
N_SHIFT)</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">			</span></span><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">);</span></div><div><b=
r></div><div><span class=3D"Apple-tab-span" style=3D"white-space:=
pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">if (ret=3D=3D0){</span></div><div><sp=
an class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</spa=
n></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">print("[platform_vusb_on] VUSB33 is on\n");</span></=
div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">}</span></div><div><span class=3D"Apple-ta=
b-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">	</span></span><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">else{</s=
pan></div><div><span class=3D"Apple-tab-span" style=3D"white-spac=
e:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">print("[platform_vusb_on] Failed t=
o turn on VUSB33!\n");</span></div><div><span class=3D"Apple-tab-=
span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">}</span></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">#endif</span></div><div><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; return;</s=
pan></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">}</span></div><div><br></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#if CFG_=
BOOT_ARGUMENT_BY_ATAG</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">void platform_set_boot=
_args_by_atag(unsigned *ptr)</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">{</span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">&nbsp; &nbsp; int i=3D0, j=3D0;</span></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbs=
p; &nbsp; u32 dram_rank_size[4];</span></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbs=
p; boot_tag *tags;</span></div><div><br></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nb=
sp; tags =3D ptr;</span></div><div><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;hdr=
.size =3D boot_tag_size(boot_tag_boot_reason);</span></div><div><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">&nbsp; &nbsp; tags-&gt;hdr.tag =3D BOOT_TAG_BOOT_REASON;</span=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">&nbsp; &nbsp; tags-&gt;u.boot_reason.boot_reason=20=
=3D g_boot_reason;</span></div><div><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; ptr +=3D ta=
gs-&gt;hdr.size;</span></div><div><br></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp=
; tags =3D ptr;</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;hdr.s=
ize =3D boot_tag_size(boot_tag_boot_mode);</span></div><div><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&=
nbsp; &nbsp; tags-&gt;hdr.tag =3D BOOT_TAG_BOOT_MODE;</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">&nbsp; &nbsp; tags-&gt;u.boot_mode.boot_mode =3D g_boot=
_mode;</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">&nbsp; &nbsp; ptr +=3D tags-&gt;hdr.s=
ize;</span></div><div><br></div><div><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags =3D p=
tr;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;hdr.size =3D boot_t=
ag_size(boot_tag_meta_com);</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags=
-&gt;hdr.tag =3D BOOT_TAG_META_COM;</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &=
nbsp; tags-&gt;u.meta_com.meta_com_type =3D (u32)g_meta_com_type;=
</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;u.meta_com.meta_com_=
id =3D g_meta_com_id;</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt=
;u.meta_com.meta_uart_port =3D CFG_UART_META;</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">&nbsp; &nbsp; ptr +=3D tags-&gt;hdr.size;</span></div><div><br>=
</div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">&nbsp; &nbsp; tags =3D ptr;</span></div><div><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&=
nbsp; &nbsp; tags-&gt;hdr.size =3D boot_tag_size(boot_tag_log_com=
);</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;hdr.tag =3D BOOT_TA=
G_LOG_COM;</span></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;u.log_com.=
log_port =3D CFG_UART_LOG;</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags=
-&gt;u.log_com.log_baudrate =3D CFG_LOG_BAUDRATE;</span></div><di=
v><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">&nbsp; &nbsp; tags-&gt;u.log_com.log_enable =3D (u8)log_sta=
tus();</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">&nbsp; &nbsp; ptr +=3D tags-&gt;hdr.s=
ize;</span></div><div><br></div><div><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; //---- DRA=
M tags ----</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">#if !CFG_FPGA_PLATFORM</span></d=
iv><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">&nbsp; &nbsp; tags =3D ptr;</span></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbs=
p; &nbsp; tags-&gt;hdr.size =3D boot_tag_size(boot_tag_mem);</spa=
n></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">&nbsp; &nbsp; tags-&gt;hdr.tag =3D BOOT_TAG_MEM;=
</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;u.mem.dram_rank_num=20=
=3D bootarg.mblock_info.mblock_num;</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &=
nbsp; for (i =3D 0; i &lt; 4 ; i++) {</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=
 &nbsp; bootarg.dram_rank_size[i] =3D bootarg.mblock_info.mblock[=
i].size;</span></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">&nbsp; &nbsp; }</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">&nbsp; &nbsp; for(i=3D0;i&lt;4;i++){</span></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp=
; &nbsp; tags-&gt;u.mem.dram_rank_size[i] =3D bootarg.dram_rank_s=
ize[i];</span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">&nbsp; &nbsp; }</span></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>&nbsp; &nbsp; tags-&gt;u.mem.mblock_info.mblock_num =3D bootarg.=
mblock_info.mblock_num;</span></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; for(i=3D=
0;i&lt;4;i++) {</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;u.mem=
.mblock_info.mblock[i].start =3D bootarg.mblock_info.mblock[i].st=
art;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;u.mem.mblock_inf=
o.mblock[i].size =3D bootarg.mblock_info.mblock[i].size;</span></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">&nbsp; &nbsp; tags-&gt;u.mem.mblock_info.mblock[i].r=
ank =3D bootarg.mblock_info.mblock[i].rank;</span></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
&nbsp; &nbsp; }</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;u.mem=
.orig_dram_info.rank_num =3D bootarg.orig_dram_info.rank_num;</sp=
an></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">&nbsp; &nbsp; for(i=3D0;i&lt;4;i++) {</span></d=
iv><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">&nbsp; &nbsp; tags-&gt;u.mem.orig_dram_info.rank_info=
[i].start =3D bootarg.orig_dram_info.rank_info[i].start; // 64</s=
pan></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;u.mem.orig_dram_info.ra=
nk_info[i].size =3D bootarg.orig_dram_info.rank_info[i].size; //=20=
64</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; }</span></div><div><br></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">&nbsp; &nbsp; tags-&gt;u.mem.lca_reserved_mem.start=3D=20=
bootarg.lca_reserved_mem.start;</span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp=
; tags-&gt;u.mem.lca_reserved_mem.size =3D bootarg.lca_reserved_m=
em.size;</span></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;u.mem.tee_re=
served_mem.start=3D bootarg.tee_reserved_mem.start;</span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">&nbsp; &nbsp; tags-&gt;u.mem.tee_reserved_mem.size =3D bo=
otarg.tee_reserved_mem.size;</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; p=
tr +=3D tags-&gt;hdr.size;</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">#endif</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">&nbsp; &nbsp; //----------------</span></div><div><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&=
nbsp; &nbsp; tags =3D ptr;</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags=
-&gt;hdr.size =3D boot_tag_size(boot_tag_md_info);</span></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">&nbsp; &nbsp; tags-&gt;hdr.tag =3D BOOT_TAG_MD_INFO;</span=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">&nbsp; &nbsp; for(i=3D0;i&lt;4;i++)</span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">&nbsp; &nbsp; tags-&gt;u.md_info.md_type[i] =3D bootarg.m=
d_type[i];</span></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">&nbsp; &nbsp; ptr +=3D tags-&gt;h=
dr.size;</span></div><div><br></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags =3D=
 ptr;</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;hdr.size =3D bo=
ot_tag_size(boot_tag_boot_time);</span></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbs=
p; tags-&gt;hdr.tag =3D BOOT_TAG_BOOT_TIME;</span></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
&nbsp; &nbsp; tags-&gt;u.boot_time.boot_time =3D get_timer(g_boot=
_time);;</span></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">&nbsp; &nbsp; ptr +=3D tags-&gt;hdr=
.size;</span></div><div><br></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags =3D=
 ptr;</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;hdr.size =3D bo=
ot_tag_size(boot_tag_da_info);</span></div><div><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=
 tags-&gt;hdr.tag =3D BOOT_TAG_DA_INFO;</span></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbs=
p; &nbsp; tags-&gt;u.da_info.da_info.addr =3D bootarg.da_info.add=
r;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;u.da_info.da_info.a=
rg1 =3D bootarg.da_info.arg1;</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=20=
tags-&gt;u.da_info.da_info.arg2 =3D bootarg.da_info.arg2;</span><=
/div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">&nbsp; &nbsp; tags-&gt;u.da_info.da_info.len &nbsp;=
=3D bootarg.da_info.len;</span></div><div><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags-=
&gt;u.da_info.da_info.sig_len =3D bootarg.da_info.sig_len;</span>=
</div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">&nbsp; &nbsp; ptr +=3D tags-&gt;hdr.size;</span></=
div><div><br></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags =3D ptr;</span></d=
iv><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">&nbsp; &nbsp; tags-&gt;hdr.size =3D boot_tag_size(boo=
t_tag_sec_info);</span></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;hdr.=
tag =3D BOOT_TAG_SEC_INFO;</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags=
-&gt;u.sec_info.sec_limit.magic_num =3D bootarg.sec_limit.magic_n=
um;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;u.sec_info.sec_limi=
t.forbid_mode =3D bootarg.sec_limit.forbid_mode;</span></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">&nbsp; &nbsp; ptr +=3D tags-&gt;hdr.size;</span></div><div><=
br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">&nbsp; &nbsp; tags =3D ptr;</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">&nbsp; &nbsp; tags-&gt;hdr.size =3D boot_tag_size(boot_tag_part=
_num);</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;hdr.tag =3D BO=
OT_TAG_PART_NUM;</span></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;u.pa=
rt_num.part_num =3D g_dram_buf-&gt;part_num;</span></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>&nbsp; &nbsp; ptr +=3D tags-&gt;hdr.size;</span></div><div><br><=
/div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">&nbsp; &nbsp; tags =3D ptr;</span></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&n=
bsp; &nbsp; tags-&gt;hdr.size =3D boot_tag_size(boot_tag_part_inf=
o);</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;hdr.tag =3D BOOT_TA=
G_PART_INFO;</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;u.part_i=
nfo.part_info =3D g_dram_buf-&gt;part_info;</span></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
&nbsp; &nbsp; ptr +=3D tags-&gt;hdr.size;</span></div><div><br></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">&nbsp; &nbsp; tags =3D ptr;</span></div><div><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nb=
sp; &nbsp; tags-&gt;hdr.size =3D boot_tag_size(boot_tag_eflag);</=
span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;hdr.tag =3D BOOT_TAG_E=
FLAG;</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;u.eflag.e_flag=20=
=3D sp_check_platform();</span></div><div><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; ptr +=
=3D tags-&gt;hdr.size;</span></div><div><br></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=
 &nbsp; tags =3D ptr;</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt=
;hdr.size =3D boot_tag_size(boot_tag_ddr_reserve);</span></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">&nbsp; &nbsp; tags-&gt;hdr.tag =3D BOOT_TAG_DDR_RESERVE;</=
span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;u.ddr_reserve.ddr_rese=
rve_enable =3D g_ddr_reserve_enable;</span></div><div><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=20=
&nbsp; tags-&gt;u.ddr_reserve.ddr_reserve_success =3D g_ddr_reser=
ve_success;</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; ptr +=3D tags-&gt;=
hdr.size;</span></div><div><br></div><div><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags=20=
=3D ptr;</span></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;hdr.size &nb=
sp;=3D boot_tag_size(boot_tag_dram_buf);</span></div><div><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nb=
sp; &nbsp; tags-&gt;hdr.tag &nbsp; =3D BOOT_TAG_DRAM_BUF;</span><=
/div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">&nbsp; &nbsp; tags-&gt;u.dram_buf.dram_buf_size =3D=
 sizeof(dram_buf_t);</span></div><div><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; ptr +=3D=20=
tags-&gt;hdr.size;</span></div><div><br></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nb=
sp; tags =3D ptr;</span></div><div><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;hdr=
.size &nbsp;=3D boot_tag_size(boot_tag_boot_opt);</span></div><di=
v><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">&nbsp; &nbsp; tags-&gt;hdr.tag &nbsp; =3D BOOT_TAG_BOOT_OPT=
;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;u.boot_opt.smc_boot=
_opt =3D g_smc_boot_opt;</span></div><div><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags-=
&gt;u.boot_opt.lk_boot_opt=3D g_lk_boot_opt;</span></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>&nbsp; &nbsp; tags-&gt;u.boot_opt.kernel_boot_opt =3D g_kernel_b=
oot_opt;</span></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">&nbsp; &nbsp; ptr +=3D tags-&gt;hdr=
.size;</span></div><div><br></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags =3D=
 ptr;</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;hdr.size =3D bo=
ot_tag_size(boot_tag_sram_info);</span></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbs=
p; tags-&gt;hdr.tag &nbsp;=3D BOOT_TAG_SRAM_INFO;</span></div><di=
v><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">&nbsp; &nbsp; tags-&gt;u.sram_info.non_secure_sram_addr=3D=20=
CFG_NON_SECURE_SRAM_ADDR;</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags=
-&gt;u.sram_info.non_secure_sram_size =3D CFG_NON_SECURE_SRAM_SIZ=
E;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; ptr +=3D tags-&gt;hdr.size;<=
/span></div><div><br></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags =3D ptr;</=
span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">&nbsp; &nbsp; tags-&gt;hdr.size =3D boot_tag_=
size(boot_tag_lastpc);</span></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags-&g=
t;hdr.tag &nbsp;=3D BOOT_TAG_LASTPC;</span></div><div><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=20=
&nbsp; memcpy(tags-&gt;u.lastpc.lastpc, &amp;bootarg.lastpc, size=
of(tags-&gt;u.lastpc.lastpc));</span></div><div><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=
 ptr +=3D tags-&gt;hdr.size;</span></div><div><br></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
&nbsp; &nbsp; tags =3D ptr;</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tags=
-&gt;hdr.size =3D boot_tag_size(boot_tag_pl_version);</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">&nbsp; &nbsp; tags-&gt;hdr.tag &nbsp;=3D BOOT_TAG_PL_VE=
RSION;</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">&nbsp; &nbsp; memcpy(tags-&gt;u.pl_ve=
rsion.pl_version, PL_VERSION, sizeof(tags-&gt;u.pl_version.pl_ver=
sion));</span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">&nbsp; &nbsp; ptr +=3D tags-&gt;hdr.=
size;</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">&nbsp; &nbsp; print("PL_VERSION =3D %s=
 \n", tags-&gt;u.pl_version.pl_version);</span></div><div><br></d=
iv><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">&nbsp; &nbsp; /* END */</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &=
nbsp; *ptr++ =3D 0;</span></div><div><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; *ptr++ =3D=
 0;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">}</span></div><div><br></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">void=
 platform_dump_boot_atag()</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">{</span></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">&nbsp; &nbsp; int i=3D0, j=3D0;</span></div><div><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=20=
&nbsp; boot_tag *tags;</span></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; for (ta=
gs =3D &amp;(g_dram_buf-&gt;boottag); tags-&gt;hdr.size; tags =3D=
 boot_tag_next(tags))</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; {</span>=
</div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; switch(tags-&gt;hdr.ta=
g)</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; {</span></div>=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case BOOT_TAG_=
BOOT_REASON:</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nb=
sp; &nbsp; &nbsp; &nbsp; print("BOOT_REASON: %d\n", tags-&gt;u.bo=
ot_reason.boot_reason);</span></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp;=
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></div><div><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&=
nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case BOOT_TAG_BOOT_MODE:=
</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &=
nbsp; &nbsp; print("BOOT_MODE: %d\n", tags-&gt;u.boot_mode.boot_m=
ode);</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nb=
sp; &nbsp; &nbsp; break;</span></div><div><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp=
; &nbsp; &nbsp; &nbsp; case BOOT_TAG_META_COM:</span></div><div><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(=
"META_COM TYPE: %d\n", tags-&gt;u.meta_com.meta_com_type);</span>=
</div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &=
nbsp; print("META_COM ID: %d\n", tags-&gt;u.meta_com.meta_com_id)=
;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=20=
&nbsp; &nbsp; print("META_COM PORT: %d\n", tags-&gt;u.meta_com.me=
ta_uart_port);</span></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &=
nbsp; &nbsp; &nbsp; &nbsp; break;</span></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nb=
sp; &nbsp; &nbsp; &nbsp; &nbsp; case BOOT_TAG_LOG_COM:</span></di=
v><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp=
; print("LOG_COM PORT: %d\n", tags-&gt;u.log_com.log_port);</span=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=20=
&nbsp; print("LOG_COM BAUD: %d\n", tags-&gt;u.log_com.log_baudrat=
e);</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=20=
&nbsp; &nbsp; print("LOG_COM EN: %d\n", tags-&gt;u.log_com.log_en=
able);</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &n=
bsp; &nbsp; &nbsp; break;</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbs=
p; &nbsp; &nbsp; &nbsp; case BOOT_TAG_MEM:</span></div><div><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&=
nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print("MEM=
_NUM: %d\n", tags-&gt;u.mem.dram_rank_num);</span></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (i =3D=
 0; i &lt; tags-&gt;u.mem.dram_rank_num; i++)</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=20=
&nbsp; print("MEM_SIZE: 0x%x\n", tags-&gt;u.mem.dram_rank_size[i]=
);</span></div><div><br></div><div><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp=
; &nbsp; &nbsp; &nbsp; &nbsp; print("mblock num: 0x%x\n", tags-&g=
t;u.mem.mblock_info.mblock_num);</span></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbs=
p; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for(i=3D0;i&lt;4;i++=
) {</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=20=
&nbsp; &nbsp; &nbsp; &nbsp; print("mblock start: 0x%llx\n", tags-=
&gt;u.mem.mblock_info.mblock[i].start);</span></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbs=
p; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=
 print("mblock size: 0x%llx\n", tags-&gt;u.mem.mblock_info.mblock=
[i].size);</span></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp=
; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print("mblock rank: 0x%x\n",=
 tags-&gt;u.mem.mblock_info.mblock[i].rank);</span></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>=
</div><div><br></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=20=
&nbsp; &nbsp; &nbsp; print("orig_dram num: 0x%x\n", tags-&gt;u.me=
m.orig_dram_info.rank_num);</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbs=
p; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for(i=3D0;i&lt;4;i++) {</sp=
an></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp=
; &nbsp; &nbsp; &nbsp; print("orig_dram start: 0x%llx\n", tags-&g=
t;u.mem.orig_dram_info.rank_info[i].start);</span></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &n=
bsp; print("orig_dram size: 0x%llx\n", tags-&gt;u.mem.orig_dram_i=
nfo.rank_info[i].size);</span></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp;=
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><br></div>=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=20=
print("lca start: 0x%llx\n", tags-&gt;u.mem.lca_reserved_mem.star=
t);</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=20=
&nbsp; &nbsp; print("lca size: 0x%llx\n", tags-&gt;u.mem.lca_rese=
rved_mem.size);</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp;=20=
&nbsp; &nbsp; &nbsp; &nbsp; print("tee start: 0x%llx\n", tags-&gt=
;u.mem.tee_reserved_mem.start);</span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp=
; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print("tee size: 0x%l=
lx\n", tags-&gt;u.mem.tee_reserved_mem.size);</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;<=
/span></div><div><br></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &=
nbsp; &nbsp; case BOOT_TAG_MD_INFO:</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &=
nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for(i=3D0;i&lt;4;=
i++)</span></div><div><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbs=
p; &nbsp; &nbsp; &nbsp; &nbsp; print("MD_INFO: 0x%x\n", tags-&gt;=
u.md_info.md_type[i]);</span></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp;=20=
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&n=
bsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case BOOT_TAG_BOOT_TIME:<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &n=
bsp; &nbsp; print("BOOT_TIME: %d\n", tags-&gt;u.boot_time.boot_ti=
me);</span></div><div><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbs=
p; &nbsp; &nbsp; break;</span></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp;=
 &nbsp; &nbsp; &nbsp; case BOOT_TAG_DA_INFO:</span></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print("D=
A_INFO: 0x%x\n", tags-&gt;u.da_info.da_info.addr);</span></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pr=
int("DA_INFO: 0x%x\n", tags-&gt;u.da_info.da_info.arg1);</span></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nb=
sp; print("DA_INFO: 0x%x\n", tags-&gt;u.da_info.da_info.arg2);</s=
pan></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbs=
p; &nbsp; print("DA_INFO: 0x%x\n", tags-&gt;u.da_info.da_info.len=
);</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=20=
&nbsp; &nbsp; print("DA_INFO: 0x%x\n", tags-&gt;u.da_info.da_info=
.sig_len);</span></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp=
; &nbsp; &nbsp; &nbsp; break;</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=20=
&nbsp; &nbsp; &nbsp; &nbsp; case BOOT_TAG_SEC_INFO:</span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; p=
rint("SEC_INFO: 0x%x\n", tags-&gt;u.sec_info.sec_limit.magic_num)=
;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=20=
&nbsp; &nbsp; print("SEC_INFO: 0x%x\n", tags-&gt;u.sec_info.sec_l=
imit.forbid_mode);</span></div><div><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbs=
p; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case BOOT_TAG_PART_NUM:</span=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=20=
&nbsp; print("PART_NUM: %d\n", tags-&gt;u.part_num.part_num);</sp=
an></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp=
; &nbsp; break;</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp;=20=
&nbsp; &nbsp; case BOOT_TAG_PART_INFO:</span></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp=
; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print("PART_IN=
FO: 0x%x\n", tags-&gt;u.part_info.part_info);</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ca=
se BOOT_TAG_EFLAG:</span></div><div><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbs=
p; &nbsp; &nbsp; &nbsp; &nbsp; print("EFLAG: %d\n", tags-&gt;u.ef=
lag.e_flag);</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nb=
sp; &nbsp; &nbsp; &nbsp; break;</span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp=
; &nbsp; &nbsp; &nbsp; &nbsp; case BOOT_TAG_DDR_RESERVE:</span></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nb=
sp; print("DDR_RESERVE: %d\n", tags-&gt;u.ddr_reserve.ddr_reserve=
_enable);</span></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=
 &nbsp; &nbsp; &nbsp; print("DDR_RESERVE: %d\n", tags-&gt;u.ddr_r=
eserve.ddr_reserve_success);</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &=
nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print("DDR_RESERVE: %d\n=
", tags-&gt;u.ddr_reserve.ddr_reserve_ready);</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ca=
se BOOT_TAG_DRAM_BUF:</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &=
nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print("DRAM_BUF: %d\n", tags-&g=
t;u.dram_buf.dram_buf_size);</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &=
nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case BOOT_TAG_VCORE=
_DVFS:</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &n=
bsp; &nbsp; &nbsp; print("DVFS: %d\n", tags-&gt;u.vcore_dvfs.vcor=
e_dvfs_info.pll_setting_num);</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=20=
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print("DVFS: %d\n", tag=
s-&gt;u.vcore_dvfs.vcore_dvfs_info.freq_setting_num);</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=
 print("DVFS: 0x%x\n", tags-&gt;u.vcore_dvfs.vcore_dvfs_info.low_=
freq_pll_setting_addr);</span></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp;=
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print("DVFS: 0x%x\n", tags-&g=
t;u.vcore_dvfs.vcore_dvfs_info.low_freq_cha_setting_addr);</span>=
</div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &=
nbsp; print("DVFS: 0x%x\n", tags-&gt;u.vcore_dvfs.vcore_dvfs_info=
.low_freq_chb_setting_addr);</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &=
nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print("DVFS: 0x%x\n", ta=
gs-&gt;u.vcore_dvfs.vcore_dvfs_info.high_freq_pll_setting_addr);<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &n=
bsp; &nbsp; print("DVFS: 0x%x\n", tags-&gt;u.vcore_dvfs.vcore_dvf=
s_info.high_freq_cha_setting_addr);</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &=
nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print("DVFS: 0x%x=
\n", tags-&gt;u.vcore_dvfs.vcore_dvfs_info.high_freq_chb_setting_=
addr);</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &n=
bsp; &nbsp; &nbsp; break;</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbs=
p; &nbsp; &nbsp; &nbsp; case BOOT_TAG_BOOT_OPT:</span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print=
("SMC: 0x%x\n", tags-&gt;u.boot_opt.smc_boot_opt);</span></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pr=
int("SMC: 0x%x\n", tags-&gt;u.boot_opt.lk_boot_opt);</span></div>=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=20=
print("SMC: 0x%x\n", tags-&gt;u.boot_opt.kernel_boot_opt);</span>=
</div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &=
nbsp; break;</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nb=
sp; &nbsp; case BOOT_TAG_SRAM_INFO:</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &=
nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print("SRAM satrt=
: 0x%x\n", tags-&gt;u.sram_info.non_secure_sram_addr);</span></di=
v><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp=
; print("SRAM size: 0x%x\n", tags-&gt;u.sram_info.non_secure_sram=
_size);</span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &=
nbsp; &nbsp; &nbsp; break;</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbs=
p; &nbsp; &nbsp; &nbsp; case BOOT_TAG_LASTPC:</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; }</span></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">&nbsp; &nbsp; }</span></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">}</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">#endif</span></div><div><br></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">void platform_parse_=
bootopt(void)</span></div><div><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">{</span></div><div><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=20=
&nbsp; u8 *bootimg_opt;</span></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; u8 boo=
timg_opt_buf[10];</span></div><div><br></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbs=
p; u8 bootimg_opt_str_array[10][5];</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &=
nbsp; u32 i;</span></div><div><br></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; i =3D=
 0;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; /* offset of boot option in=20=
boot image header 0x40 */</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; boot=
img_opt =3D CFG_BOOTIMG_HEADER_MEMADDR + 0x40;</span></div><div><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">&nbsp; &nbsp; memset(bootimg_opt_str_array,'\0',50);</span></d=
iv><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">&nbsp; &nbsp; memcpy(bootimg_opt_str_array[BOOT_OPT_6=
4S3],STR_BOOT_OPT_64S3,4);</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; memc=
py(bootimg_opt_str_array[BOOT_OPT_64S1],STR_BOOT_OPT_64S1,4);</sp=
an></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">&nbsp; &nbsp; memcpy(bootimg_opt_str_array[BOOT=
_OPT_32S3],STR_BOOT_OPT_32S3,4);</span></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbs=
p; memcpy(bootimg_opt_str_array[BOOT_OPT_32S1],STR_BOOT_OPT_32S1,=
4);</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; memcpy(bootimg_opt_str_array=
[BOOT_OPT_64N2],STR_BOOT_OPT_64N2,4);</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=
 &nbsp; memcpy(bootimg_opt_str_array[BOOT_OPT_64N1],STR_BOOT_OPT_=
64N1,4);</span></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">&nbsp; &nbsp; memcpy(bootimg_opt_st=
r_array[BOOT_OPT_32N2],STR_BOOT_OPT_32N2,4);</span></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>&nbsp; &nbsp; memcpy(bootimg_opt_str_array[BOOT_OPT_32N1],STR_BO=
OT_OPT_32N1,4);</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">/*</span></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#def=
ine &nbsp;STR_BOOT_OPT_64S3 "64S3"</span></div><div><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#define &=
nbsp;STR_BOOT_OPT_64S1 "64S1"</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#define &nbsp;=
STR_BOOT_OPT_32S3 "32S3"</span></div><div><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">#define &nbsp;STR_B=
OOT_OPT_32S1 "32S1"</span></div><div><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">#define &nbsp;STR_BOOT_O=
PT_64N2 "64N2"</span></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">#define &nbsp;STR_BOOT_OPT_64=
N1 "64N1"</span></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">#define &nbsp;STR_BOOT_OPT_32N2 "3=
2N2"</span></div><div><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">#define &nbsp;STR_BOOT_OPT_32N1 "32N1"<=
/span></div><div><br></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">typedef enum {</span></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">&nbsp; &nbsp; BOOT_OPT_64S3 =3D 0,</span></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&n=
bsp; &nbsp; BOOT_OPT_64S1,</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; BOOT=
_OPT_32S3,</span></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">&nbsp; &nbsp; BOOT_OPT_32S1,</spa=
n></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">&nbsp; &nbsp; BOOT_OPT_64N2,</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">&nbsp; &nbsp; BOOT_OPT_64N1,</span></div><div><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=
 BOOT_OPT_32N2,</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; BOOT_OPT_32N1,=
</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">&nbsp; &nbsp; BOOT_OPT_UNKNOWN</span></div>=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">} boot_option_t;</span></div><div><br></div><div><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">u32=
 g_smc_boot_opt;</span></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">u32 g_lk_boot_opt;</span></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">u32 g_kernel_boot_opt;</span></div><div><br></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">*/</span></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">&nbsp; &nbsp; //bootopt=3D64S3,32S=
1,32S1</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">&nbsp; &nbsp; //"bootopt=3D"</span></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">&nbsp; &nbsp; memset(bootimg_opt_buf,'\0',10);</span=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">&nbsp; &nbsp; memcpy(bootimg_opt_buf, bootimg_opt=
, 8);</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">&nbsp; &nbsp; bootimg_opt =3D bootimg_=
opt + 8;</span></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">&nbsp; &nbsp; if ( 0 =3D=3D strcmp(=
bootimg_opt_buf, "bootopt=3D"))</span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp=
; {</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; //"SMC option"=
</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; memset(bootimg_=
opt_buf,'\0',10);</span></div><div><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp=
; memcpy(bootimg_opt_buf, bootimg_opt, 4);</span></div><div><br><=
/div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; for(i =3D 0; i &lt; BOO=
T_OPT_UNKNOWN; i++)</span></div><div><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nb=
sp; {</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nb=
sp; if ( 0 =3D=3D strcmp(bootimg_opt_str_array[i], bootimg_opt_bu=
f))</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=20=
{</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=20=
&nbsp; &nbsp; g_smc_boot_opt =3D i;</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &=
nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print("%s,%s,boot=
_opt=3D0x%x\n", MOD, bootimg_opt_str_array[g_smc_boot_opt], g_smc=
_boot_opt);</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbs=
p; &nbsp; &nbsp; &nbsp; break;</span></div><div><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=
 &nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=
 &nbsp; &nbsp; }</span></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp;=
 //"LK option"</span></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; b=
ootimg_opt =3D bootimg_opt + 5;</span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp=
; &nbsp; &nbsp; memset(bootimg_opt_buf,'\0',10);</span></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">&nbsp; &nbsp; &nbsp; &nbsp; memcpy(bootimg_opt_buf, bootimg_=
opt, 4);</span></div><div><br></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp;=
 &nbsp; for(i =3D 0; i &lt; BOOT_OPT_UNKNOWN; i++)</span></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">&nbsp; &nbsp; &nbsp; &nbsp; {</span></div><div><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=20=
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if ( 0 =3D=3D strcmp(bootimg_o=
pt_str_array[i], bootimg_opt_buf))</span></div><div><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &n=
bsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span></div><div><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &n=
bsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_lk_boot_opt =3D=20=
i;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=20=
&nbsp; &nbsp; print("%s,%s,boot_opt=3D0x%x\n", MOD, bootimg_opt_s=
tr_array[g_lk_boot_opt], g_lk_boot_opt);</span></div><div><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nb=
sp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">&nbsp; &nbsp; &nbsp; &nbsp; //"Kernel option"</span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">&nbsp; &nbsp; &nbsp; &nbsp; bootimg_opt =3D bootimg_opt + 5;<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; memset(bootimg_o=
pt_buf,'\0',10);</span></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp;=
 memcpy(bootimg_opt_buf, bootimg_opt, 4);</span></div><div><br></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; for(i =3D 0; i &lt; BOOT=
_OPT_UNKNOWN; i++)</span></div><div><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbs=
p; {</span></div><div><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbs=
p; if ( 0 =3D=3D strcmp(bootimg_opt_str_array[i], bootimg_opt_buf=
))</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=20=
{</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=20=
&nbsp; &nbsp; g_kernel_boot_opt =3D i;</span></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp=
; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print("%s,%s,b=
oot_opt=3D0x%x\n", MOD, bootimg_opt_str_array[g_kernel_boot_opt],=
 g_kernel_boot_opt);</span></div><div><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &n=
bsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbs=
p; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbs=
p; &nbsp; &nbsp; &nbsp; }</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; }</s=
pan></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">&nbsp; &nbsp; else &nbsp; &nbsp;// if no speci=
fic bootopt</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; {</span></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">&nbsp; &nbsp; &nbsp; &nbsp; //bootopt=3D64S3,32S1,32S1</span=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; g_smc_boot_opt =3D BO=
OT_OPT_64S3;</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; g_l=
k_boot_opt =3D BOOT_OPT_32S1;</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=20=
&nbsp; &nbsp; g_kernel_boot_opt =3D BOOT_OPT_32S1; &nbsp; &nbsp;=20=
&nbsp; &nbsp;</span></div><div><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; }</span></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">}</span></div><div><br></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">#define MP0_DBG_CTRL=
 0x10200104</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">#define MCUSYS_DBG_MON_SEL_A 0x1=
0200590</span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">#define MCUSYS_DBG_MON 0x10200594</s=
pan></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">#define MCU_ALL_PWR_ON_CTRL 0x10200b58</span><=
/div><div><br></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">void platform_set_boot_args(void)</s=
pan></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">{</span></div><div><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; unsigned=20=
int i, j, val;</span></div><div><br></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=20=
*(volatile unsigned int *)MCU_ALL_PWR_ON_CTRL |=3D 1;</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">&nbsp; &nbsp; *(volatile unsigned int *)MCUSYS_DBG_MON_=
SEL_A =3D 1;</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; val =3D *(volatil=
e unsigned int *)MP0_DBG_CTRL;</span></div><div><br></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">&nbsp; &nbsp; for (i=3D0; i&lt;4; i++)</span></div><div><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nb=
sp; &nbsp; &nbsp; &nbsp; for (j=3D0; j&lt;8; j++) {</span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; val &amp;=3D ~0=
xff;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbs=
p; val |=3D i &lt;&lt; 4 | j;</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=20=
&nbsp; &nbsp; &nbsp; &nbsp; *(volatile unsigned int *)MP0_DBG_CTR=
L =3D val;</span></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp=
; &nbsp; bootarg.lastpc[i][j] =3D *(volatile unsigned int *)MCUSY=
S_DBG_MON;</span></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp=
; &nbsp; print("lastpc[%d][%d] =3D %x\n", i, j, bootarg.lastpc[i]=
[j]);</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; }</span></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">&nbsp; &nbsp; *(volatile unsigned int *)MCU_ALL_PWR_=
ON_CTRL &amp;=3D ~4;</span></div><div><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; *(volatil=
e unsigned int *)MCU_ALL_PWR_ON_CTRL &amp;=3D ~2;</span></div><di=
v><br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">#if CFG_ATF_SUPPORT</span></div><div><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nb=
sp; &nbsp; {</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; u32 sec_addr;</sp=
an></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">&nbsp; &nbsp; tee_get_secmem_start(&amp;sec_add=
r);</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; bootarg.tee_reserved_mem.sta=
rt =3D sec_addr;</span></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; bootarg.tee_r=
eserved_mem.size =3D ATF_LOG_BUFFER_SIZE;</span></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&n=
bsp; &nbsp; }</span></div><div><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">#else</span></div><div><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nb=
sp; &nbsp; bootarg.tee_reserved_mem.start =3D 0;</span></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">&nbsp; &nbsp; bootarg.tee_reserved_mem.size =3D 0;</span></d=
iv><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">#endif</span></div><div><br></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#if CFG_BO=
OT_ARGUMENT_BY_ATAG</span></div><div><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; print("\n%=
s boot to LK by ATAG.\n", MOD, g_boot_reason);</span></div><div><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">&nbsp; &nbsp; platform_set_boot_args_by_atag(&amp;(g_dram_buf-=
&gt;boottag)); // set jump addr</span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp=
; platform_dump_boot_atag();</span></div><div><br></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
#elif CFG_BOOT_ARGUMENT &amp;&amp; !CFG_BOOT_ARGUMENT_BY_ATAG</sp=
an></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">&nbsp; &nbsp; bootarg.magic =3D BOOT_ARGUMENT_M=
AGIC;</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">&nbsp; &nbsp; bootarg.mode &nbsp;=3D g=
_boot_mode;</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; bootarg.e_flag =3D=
 sp_check_platform();</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; bootarg.=
log_port =3D CFG_UART_LOG;</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; boot=
arg.log_baudrate =3D CFG_LOG_BAUDRATE;</span></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp=
; &nbsp; bootarg.log_enable =3D (u8)log_status();</span></div><di=
v><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">#if !CFG_FPGA_PLATFORM</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/*In FPGA phase=
, dram related function should by pass*/</span></div><div><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nb=
sp; &nbsp; bootarg.dram_rank_num =3D bootarg.mblock_info.mblock_n=
um;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; for (i =3D 0; i &lt; bootarg=
.mblock_info.mblock_num; i++) {</span></div><div><span class=3D"A=
pple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=20=
&nbsp; &nbsp;bootarg.dram_rank_size[i] =3D bootarg.mblock_info.mb=
lock[i].size;</span></div><div><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; pr=
int("%s, rank[%d].size =3D 0x%llx\n", __func__, i,&nbsp;</span></=
div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">			</span></span><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">(unsigned long long) bootarg.dram_rank_=
size[i]);</span></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">&nbsp; &nbsp; }</span></div><div><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">#endif</span></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">&nbsp; &nbsp; bootarg.boot_reason=20=
=3D g_boot_reason;</span></div><div><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; bootarg.met=
a_com_type =3D (u32)g_meta_com_type;</span></div><div><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=20=
&nbsp; bootarg.meta_com_id =3D g_meta_com_id;</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">&nbsp; &nbsp; bootarg.meta_uart_port =3D CFG_UART_META;</span><=
/div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">&nbsp; &nbsp; bootarg.boot_time =3D get_timer(g_boo=
t_time);</span></div><div><br></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; #if 0/=
/#if (CFG_BOOT_DEV =3D=3D BOOTDEV_NAND)</span><span class=3D"Appl=
e-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">		</span></span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">&nbsp; &nbsp; bootarg.flash_number =3D sizeof(gen_FlashTa=
ble)/sizeof(flashdev_info);</span></div><div><span class=3D"Apple=
-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"> &nbs=
p;if(bootarg.flash_number &gt; MAX_FLASH)</span></div><div><span=20=
class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></=
span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;"> &nbsp;{</span></div><div><span class=3D"Apple-tab-span"=
 style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;"> &nbsp; &nbsp;=20=
&nbsp;print("[BOOTDEV NAND]warning !! bootarg.flash_number &gt; M=
AX_FLASH");</span></div><div><span class=3D"Apple-tab-span" style=
=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;"> &nbsp;}</span></div><d=
iv><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=09=
</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;"> &nbsp;print("\n%s flash number: %d\n", MOD, bo=
otarg.flash_number);</span></div><div><span class=3D"Apple-tab-sp=
an" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;"> &nbsp;memcp=
y(bootarg.gen_FlashTable,gen_FlashTable,bootarg.flash_number*size=
of(flashdev_info));</span></div><div><span class=3D"Apple-tab-spa=
n" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;"> &nbsp;//memc=
py(gen_FlashTable_t,gen_FlashTable,bootarg.flash_number*sizeof(fl=
ashdev_info));</span></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; //bootarg.gen_F=
lashTable =3D gen_FlashTable_t;//gen_FlashTable_t;</span></div><d=
iv><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=09=
	</span></span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;"> &nbsp;//</span><span cl=
ass=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></sp=
an><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">print("\n%s bootarg-&gt;flash_number: %d CHIP_CNT %d size=20=
%d sizeof(gen_FlashTable) %d\n", MOD, bootarg-&gt;flash_number,CH=
IP_CNT,sizeof(flashdev_info),sizeof(gen_FlashTable));</span></div=
><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;"> &nbsp;//</span><span class=3D"Apple-tab-spa=
n" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">print("\n%s %=
s %s 0x%x\n", MOD, gen_FlashTable_t[0].devciename, gen_FlashTable=
_t[1].devciename,bootarg-&gt;gen_FlashTable);</span></div><div><s=
pan class=3D"Apple-tab-span" style=3D"white-space:pre"><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</spa=
n></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;"> &nbsp;//</span><span class=3D"Apple-tab-span" style=
=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">q =3D (unsigned int* )b=
ootarg-&gt;gen_FlashTable;</span></div><div><span class=3D"Apple-=
tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">		</span></span><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">//for=
(k =3D 0 ; k&lt;(bootarg-&gt;flash_number*sizeof(flashdev_info))/=
4;k++)</span></div><div><span class=3D"Apple-tab-span" style=3D"w=
hite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">		</span></span><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">//</span><span class=3D"A=
pple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">p=
rint("0x%x, ",*q++);</span></div><div><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; #endif</s=
pan></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">&nbsp; &nbsp;&nbsp;</span></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp=
; &nbsp; bootarg.part_num =3D &nbsp;g_dram_buf-&gt;part_num;</spa=
n></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">&nbsp; &nbsp; bootarg.part_info =3D g_dram_buf-&=
gt;part_info;</span></div><div><br></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; b=
ootarg.ddr_reserve_enable =3D g_ddr_reserve_enable;</span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">&nbsp; &nbsp; bootarg.ddr_reserve_success=3D g_ddr_reserv=
e_success;</span></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">&nbsp; &nbsp; bootarg.dram_buf_si=
ze =3D &nbsp;sizeof(dram_buf_t);</span></div><div><br></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">&nbsp; &nbsp; bootarg.smc_boot_opt =3D g_smc_boot_opt;</span>=
</div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">&nbsp; &nbsp; bootarg.lk_boot_opt =3D g_lk_boot_op=
t;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; bootarg.kernel_boot_opt =3D=20=
g_kernel_boot_opt;</span></div><div><br></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nb=
sp; bootarg.non_secure_sram_addr =3D CFG_NON_SECURE_SRAM_ADDR;</s=
pan></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">&nbsp; &nbsp; bootarg.non_secure_sram_size =3D=
 CFG_NON_SECURE_SRAM_SIZE;</span></div><div><br></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&n=
bsp; &nbsp; print("%s NON SECURE SRAM ADDR: 0x%x\n", MOD, bootarg=
.non_secure_sram_addr);</span></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; print(=
"%s NON SECURE SRAM SIZE: 0x%x\n", MOD, bootarg.non_secure_sram_s=
ize);</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">&nbsp; &nbsp; memcpy(bootarg.pl_versio=
n, PL_VERSION, sizeof(bootarg.pl_version));</span></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
&nbsp; &nbsp; print("%s PL_VERSION =3D %s \n", MOD, bootarg.pl_ve=
rsion);</span></div><div><br></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">#if CFG_WORLD_PHONE_S=
UPPORT</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">&nbsp; &nbsp; print("%s md_type[0] =3D=
 %d \n", MOD, bootarg.md_type[0]);</span></div><div><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &n=
bsp; print("%s md_type[1] =3D %d \n", MOD, bootarg.md_type[1]);</=
span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">#endif</span></div><div><br></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&n=
bsp; &nbsp; print("\n%s boot reason: %d\n", MOD, g_boot_reason);<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">&nbsp; &nbsp; print("%s boot mode: %d\n", MO=
D, g_boot_mode);</span></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; print("%s MET=
A COM%d: %d\n", MOD, bootarg.meta_com_id, bootarg.meta_com_type);=
</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">&nbsp; &nbsp; print("%s &lt;0x%x&gt;: 0x%x\=
n", MOD, &amp;bootarg.e_flag, bootarg.e_flag);</span></div><div><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">&nbsp; &nbsp; print("%s boot time: %dms\n", MOD, bootarg.boot_=
time);</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">&nbsp; &nbsp; print("%s DDR reserve m=
ode: enable =3D %d, success =3D %d\n", MOD, bootarg.ddr_reserve_e=
nable, bootarg.ddr_reserve_success);</span></div><div><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=20=
&nbsp; print("%s dram_buf_size: 0x%x\n", MOD, bootarg.dram_buf_si=
ze);</span></div><div><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">&nbsp; &nbsp; print("%s smc_boot_opt: 0=
x%x\n", MOD, bootarg.smc_boot_opt);</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &=
nbsp; print("%s lk_boot_opt: 0x%x\n", MOD, bootarg.lk_boot_opt);<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">&nbsp; &nbsp; print("%s kernel_boot_opt: 0x%=
x\n", MOD, bootarg.kernel_boot_opt);</span></div><div><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=20=
&nbsp; print("%s tee_reserved_mem: 0x%llx, 0x%llx\n", MOD, bootar=
g.tee_reserved_mem.start, bootarg.tee_reserved_mem.size);</span><=
/div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">#endif</span></div><div><br></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">}</span>=
</div><div><br></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">void platform_set_dl_boot_args(da_i=
nfo_t *da_info)</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">{</span></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#if C=
FG_BOOT_ARGUMENT</span></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; if (da_info-&=
gt;addr !=3D BA_FIELD_BYPASS_MAGIC)</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>bootarg.da_info.addr =3D da_info-&gt;addr;</span></div><div><br>=
</div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">&nbsp; &nbsp; if (da_info-&gt;arg1 !=3D BA_FIELD_B=
YPASS_MAGIC)</span></div><div><span class=3D"Apple-tab-span" styl=
e=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">bootarg.da_info.arg1=
 =3D da_info-&gt;arg1;</span></div><div><br></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=
 &nbsp; if (da_info-&gt;arg2 !=3D BA_FIELD_BYPASS_MAGIC)</span></=
div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">bootarg.da_info.arg2 =3D da_info-&gt;arg2;=
</span></div><div><br></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; if (da_info-&g=
t;len !=3D BA_FIELD_BYPASS_MAGIC)</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>bootarg.da_info.len =3D da_info-&gt;len;</span></div><div><br></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">&nbsp; &nbsp; if (da_info-&gt;sig_len !=3D BA_FIELD_=
BYPASS_MAGIC)</span></div><div><span class=3D"Apple-tab-span" sty=
le=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">bootarg.da_info.sig=
_len =3D da_info-&gt;sig_len;</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#endif</span><=
/div><div><br></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">&nbsp; &nbsp; return;</span></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">}</span></div><div><br></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">void platform_wdt_al=
l_kick(void)</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">{</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &=
nbsp; /* kick watchdog to avoid cpu reset */</span></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>&nbsp; &nbsp; mtk_wdt_restart();</span></div><div><br></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">#if !CFG_FPGA_PLATFORM</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; /* k=
ick PMIC watchdog to keep charging */</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=
 &nbsp; pl_kick_chr_wdt();</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">#endif</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">}</span></div><div><br></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">void platform_wdt_=
kick(void)</span></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">{</span></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nb=
sp; /* kick hardware watchdog */</span></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbs=
p; mtk_wdt_restart();</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">}</span></div><div><br=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">#if CFG_DT_MD_DOWNLOAD</span></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">void=20=
platform_modem_download(void)</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">{</span></div>=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">&nbsp; &nbsp; print("[%s] modem download...\n", MOD);</s=
pan></div><div><br></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; /* Switch to MT62=
61 USB:</span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp;* GPIO_USB_SW1(U=
SB_SW1)=3D1</span><span class=3D"Apple-tab-span" style=3D"white-s=
pace:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">//GPIO115, GPIO48</span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">&nbsp; &nbsp; &nbsp;* GPIO_USB_SW2(USB_SW2)=3D0</span><sp=
an class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</spa=
n></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">//GPIO116, GPIO196</span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp=
; &nbsp;* phone</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; #define GPIO_U=
ART_URTS0_PIN &nbsp; &nbsp; &nbsp; &nbsp; (GPIO115 | 0x80000000)<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">&nbsp; &nbsp; #define GPIO_UART_UCTS0_PIN &n=
bsp; &nbsp; &nbsp; &nbsp; (GPIO116 | 0x80000000)</span></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">&nbsp; &nbsp; &nbsp;* EVB</span></div><div><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=
 #define GPIO_EXT_USB_SW1 &nbsp; &nbsp; &nbsp; &nbsp; (GPIO48 | 0=
x80000000)</span></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">&nbsp; &nbsp; #define GPIO_EXT_US=
B_SW2 &nbsp; &nbsp; &nbsp; &nbsp; (GPIO196 | 0x80000000)</span></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">&nbsp; &nbsp; &nbsp;*/</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#if defi=
ned(GPIO_EXT_USB_SW1)</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; mt_set_g=
pio_mode(GPIO_EXT_USB_SW1, GPIO_EXT_USB_SW1_M_GPIO);</span></div>=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">&nbsp; &nbsp; mt_set_gpio_dir(GPIO_EXT_USB_SW1, GPIO_DIR=
_OUT);</span></div><div><span class=3D"Apple-tab-span" style=3D"w=
hite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">mt_set_gpio_out(GPIO_EXT_U=
SB_SW1, GPIO_OUT_ONE);</span></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">#endif</span></div><d=
iv><br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">#if defined(GPIO_EXT_USB_SW2)</span></div><=
div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">mt_set_gpio_mode(GPIO_EXT_USB_SW2, GPIO_EXT_US=
B_SW2_M_GPIO);</span></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; mt_set_gpio_dir=
(GPIO_EXT_USB_SW2, GPIO_DIR_OUT);</span></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nb=
sp; mt_set_gpio_out(GPIO_EXT_USB_SW2, GPIO_OUT_ZERO);</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">#endif</span></div><div><br></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp=
; /* Press MT6261 DL key to enter download mode</span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">&nbsp; &nbsp; &nbsp;* GPIO_KPD_KROW1_PIN(GPIO_KCOL0)=3D0 //GP=
IO120, GPIO105</span></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp;* phone</=
span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">&nbsp; &nbsp; #define GPIO_KPD_KROW1_PIN &nbs=
p; &nbsp; &nbsp; &nbsp; (GPIO120 | 0x80000000)</span></div><div><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">&nbsp; &nbsp; &nbsp;* evb</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; #=
define GPIO_EXT_MD_DL_KEY &nbsp; &nbsp; &nbsp; &nbsp; (GPIO105 |=20=
0x80000000)</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp;*</span></di=
v><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">&nbsp; &nbsp; &nbsp;*/</span></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#if define=
d(GPIO_EXT_MD_DL_KEY)</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; mt_set_g=
pio_mode(GPIO_EXT_MD_DL_KEY, GPIO_EXT_MD_DL_KEY_M_GPIO);</span></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">&nbsp; &nbsp; mt_set_gpio_dir(GPIO_EXT_MD_DL_KEY, GP=
IO_DIR_OUT);</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; mt_set_gpio_out(G=
PIO_EXT_MD_DL_KEY, GPIO_OUT_ZERO);</span></div><div><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#endif</s=
pan></div><div><br></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; /* Bring-up MT626=
1:</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp;* GPIO_OTG_DRVVBUS_PIN=
(GPIO_USB_DRVVBUS)=3D0,</span></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp;=
* GPIO_52_RST(GPIO_RESETB)=3DINPUT/NOPULL, GPIO118, GPIO166</span=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">&nbsp; &nbsp; &nbsp;#define GPIO_UART_UTXD3_PIN &=
nbsp; &nbsp; &nbsp; &nbsp; (GPIO118 | 0x80000000)</span></div><di=
v><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">&nbsp; &nbsp; &nbsp;#define GPIO_EXT_MD_RST &nbsp; &nbsp; &=
nbsp; &nbsp; (GPIO166 | 0x80000000)</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &=
nbsp; &nbsp;* GPIO_RST_KEY(GPIO_PWRKEY)=3D0-&gt;1-&gt;0</span></d=
iv><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">&nbsp; &nbsp; &nbsp;#define GPIO_UART_URXD3_PIN &nbsp=
; &nbsp; &nbsp; &nbsp; (GPIO117 | 0x80000000)</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">&nbsp; &nbsp; &nbsp;* GPIO_PWR_KEY(GPIO_PWRKEY)=3D1</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">&nbsp; &nbsp; &nbsp;#define GPIO_EXT_MD_PWR_KEY &nbsp;=20=
&nbsp; &nbsp; &nbsp; (GPIO167 | 0x80000000)</span></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
&nbsp; &nbsp; &nbsp;*/</span></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">#if defined(GPIO_EXT_=
MD_RST)</span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">// &nbsp; &nbsp;mt_set_gpio_mode(GPI=
O_OTG_DRVVBUS_PIN, GPIO_OTG_DRVVBUS_PIN_M_GPIO);</span></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">&nbsp; &nbsp; mt_set_gpio_mode(GPIO_EXT_MD_RST, GPIO_EXT_MD_=
RST_M_GPIO);</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">#endif</span></div><div><br></d=
iv><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">&nbsp; &nbsp; /* MD DRVVBUS to low */</span></div><di=
v><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">// &nbsp; &nbsp;mt_set_gpio_dir(GPIO_OTG_DRVVBUS_PIN, GPIO_=
DIR_OUT);</span></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">// &nbsp; &nbsp;mt_set_gpio_out(GP=
IO_OTG_DRVVBUS_PIN, GPIO_OUT_ZERO);</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#if defi=
ned(GPIO_EXT_MD_PWR_KEY)</span></div><div><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; mt_se=
t_gpio_mode(GPIO_EXT_MD_PWR_KEY, GPIO_EXT_MD_PWR_KEY_M_GPIO);</sp=
an></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">&nbsp; &nbsp; mt_set_gpio_dir(GPIO_EXT_MD_PWR_K=
EY, GPIO_DIR_OUT);</span></div><div><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; mt_set_gpio=
_out(GPIO_EXT_MD_PWR_KEY, GPIO_OUT_ONE); /* default @ reset state=
 */</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">#endif</span></div><div><br></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>#if defined(GPIO_EXT_MD_RST)</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=20=
/* MD reset pin: hold to zero */</span></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbs=
p; mt_set_gpio_pull_enable(GPIO_EXT_MD_RST, GPIO_PULL_DISABLE);</=
span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">&nbsp; &nbsp; mt_set_gpio_dir(GPIO_EXT_MD_RST=
, GPIO_DIR_OUT);</span></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; mt_set_gpio_o=
ut(GPIO_EXT_MD_RST, GPIO_OUT_ZERO); /* default @ reset state */</=
span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">#endif</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; mdel=
ay(200);</span></div><div><br></div><div><br></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp=
; &nbsp; /* MD reset pin: released */</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#if de=
fined(GPIO_EXT_MD_RST)</span></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; mt_set_=
gpio_out(GPIO_EXT_MD_RST, GPIO_OUT_ONE);</span></div><div><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nb=
sp; &nbsp; mdelay(200);</span></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; mt_set=
_gpio_dir(GPIO_EXT_MD_RST, GPIO_DIR_IN);</span></div><div><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#en=
dif</span></div><div><br></div><div><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; print("[%s]=
 AP modem download done\n", MOD);</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>//keep kick WDT to avoid HW WDT reset</span></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp=
; &nbsp; while (1) {</span></div><div><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &n=
bsp; platform_wdt_all_kick();</span></div><div><span class=3D"App=
le-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">md=
elay(1000);</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; }</span></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">}</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">#endif</span></div><div><br></div><di=
v><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">#if CFG_USB_AUTO_DETECT</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">void platform_=
usbdl_flag_check()</span></div><div><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">{</span></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&n=
bsp; &nbsp; U32 usbdlreg =3D 0;</span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp=
; usbdlreg =3D DRV_Reg32(SRAMROM_USBDL);</span></div><div><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nb=
sp; &nbsp; &nbsp;/*Set global variable to record the usbdl flag*/=
</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">&nbsp; &nbsp; if(usbdlreg &amp; USBDL_BIT_E=
N)</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; g_usbdl_flag =3D=
 1;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; else</span></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&n=
bsp; &nbsp; &nbsp; &nbsp; g_usbdl_flag =3D 0;</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">}</span></div><div><br></div><div><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">void platform_usb_auto_de=
tect_flow()</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">{</span></div><div><br></div><di=
v><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">&nbsp; &nbsp; print("USB DL Flag is %d when enter preloader=
 &nbsp;\n",g_usbdl_flag);</span></div><div><br></div><div><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nb=
sp; &nbsp; /*usb download flag haven't set */</span></div><div><s=
pan class=3D"Apple-tab-span" style=3D"white-space:pre"><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</spa=
n></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">if(g_usbdl_flag =3D=3D 0 &amp;&amp; g_boot_reason !=3D=
 BR_RTC){</span></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; /*set=20=
up usbdl flag*/</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp;=20=
platform_safe_mode(1,CFG_USB_AUTO_DETECT_TIMEOUT_MS);</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; print("Preloader going rese=
t and trigger BROM usb auto detectiton!!\n");</span></div><div><b=
r></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; /*WDT by pass powerk=
ey reboot*/</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; mtk_=
arch_reset(1);</span></div><div><br></div><div><span class=3D"App=
le-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">}el=
se{</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; /*usb download flag have bee=
n set*/</span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">&nbsp; &nbsp; }</span></div><div><br=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">}</span></div><div><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">#endif</span></div><div><b=
r></div><div><br></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">void platform_safe_mode(int en, u=
32 timeout)</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">{</span></div><div><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#if !CFG_=
FPGA_PLATFORM</span></div><div><br></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; U=
32 usbdlreg =3D 0;</span></div><div><br></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nb=
sp; /* if anything is wrong and caused wdt reset, enter bootrom d=
ownload mode */</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; timeout =3D !t=
imeout ? USBDL_TIMEOUT_MAX : timeout / 1000;</span></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>&nbsp; &nbsp; timeout &lt;&lt;=3D 2;</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=
 &nbsp; timeout &amp;=3D USBDL_TIMEOUT_MASK; /* usbdl timeout can=
not exceed max value */</span></div><div><br></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp=
; &nbsp; usbdlreg |=3D timeout;</span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp=
; if (en)</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;"> &nbsp; &nbsp;usbdlreg |=
=3D USBDL_BIT_EN;</span></div><div><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; else</span><=
/div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre=
"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;"> &nbsp; &nbsp;usbdlreg &amp;=3D ~USBDL_BIT=
_EN;</span></div><div><br></div><div><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; usbdlreg &=
amp;=3D ~USBDL_BROM ;</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; /*Add ma=
gic number for MT6582*/</span></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; usbdlr=
eg |=3D USBDL_MAGIC;</span></div><div><br></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &=
nbsp; DRV_WriteReg32(SRAMROM_USBDL, usbdlreg);</span></div><div><=
br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">&nbsp; &nbsp; return;</span></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbs=
p; &nbsp; &nbsp; &nbsp; return;</span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#endif</span=
></div><div><br></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">}</span></div><div><br></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">#if CFG_EMERGENCY_DL_SUPPORT</span></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">void platfo=
rm_emergency_download(u32 timeout)</span></div><div><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">{</span><=
/div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">&nbsp; &nbsp; /* enter download mode */</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">&nbsp; &nbsp; print("%s emergency download mode(timeout=
: %ds).\n", MOD, timeout / 1000);</span></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nb=
sp; platform_safe_mode(1, timeout);</span></div><div><br></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">#if !CFG_FPGA_PLATFORM</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=20=
mtk_arch_reset(0); /* don't bypass power key */</span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">#endif</span></div><div><br></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; whil=
e(1);</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">}</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#endif</span></=
div><div><br></div><div><br></div><div><br></div><div><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">int pla=
tform_get_mcp_id(u8 *id, u32 len, u32 *fw_id_len)</span></div><di=
v><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">{</span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">&nbsp; &nbsp; int ret =3D -1;</span>=
</div><div><br></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">&nbsp; &nbsp; memset(id, 0, len);</=
span></div><div><br></div><div><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">#if (CFG_BOOT_DEV =3D=3D BOOTD=
EV_SDMMC)</span></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">&nbsp; &nbsp; ret =3D mmc_get_devi=
ce_id(id, len,fw_id_len);</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">#else</span></div>=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">&nbsp; &nbsp; ret =3D nand_get_device_id(id, len);</span=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">#endif</span></div><div><br></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=
 &nbsp; return ret;</span></div><div><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">}</span></div><div><br><=
/div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">void platform_set_chrg_cur(int ma)</span></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">{</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">&nbsp; &nbsp; hw_set_cc(ma);</span></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">}</span></div><div><br></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">static boot_re=
ason_t platform_boot_status(void)</span></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">{</span></=
div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">int wdt_flag;</span></div><div><span class=
=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">int rtc_flag =3D -1;</span></div><div><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">#if !CFG_FPGA_PLATF=
ORM</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">#if defined (MTK_KERNEL_POWER_OFF_CHARGING=
)</span></div><div><span class=3D"Apple-tab-span" style=3D"white-=
space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">ulong begin =3D get_timer(0);</=
span></div><div><span class=3D"Apple-tab-span" style=3D"white-spa=
ce:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">do &nbsp;{</span></div><div><span=20=
class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span><=
/span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">rtc_flag =3D rtc_boot_check();</span></div><div><span c=
lass=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span></=
span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">if (rtc_flag =3D=3D RTC_ALARM) {</span></div><div><span=20=
class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">			</span>=
</span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">print("%s RTC boot!\n", MOD);</span></div><div><span c=
lass=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">			</span><=
/span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">return BR_RTC;</span></div><div><span class=3D"Apple-ta=
b-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">		</span></span><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">} else=20=
if (rtc_flag =3D=3D RTC_REBOOT_RECOVERY) {</span></div><div><span=
 class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">			</span=
></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">print("%s REBOOT RECOVERY !\n", MOD);</span></div><di=
v><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	=09=
	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">return BR_REBOOT_RECOVERY;</span></div><div><s=
pan class=3D"Apple-tab-span" style=3D"white-space:pre"><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</sp=
an></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">}</span></div><div><span class=3D"Apple-tab-span" s=
tyle=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">		</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">if(!kpoc_flag)</sp=
an></div><div><span class=3D"Apple-tab-span" style=3D"white-space=
:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">			</span></span><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">break;</span></div><div><span clas=
s=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">} while (get_timer(begin) &lt; 1000 &amp;&amp; kpoc_flag);</=
span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">#else</span></div><div><span class=3D"Apple-t=
ab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">	</span></span><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">rtc_fla=
g =3D rtc_boot_check();</span></div><div><span class=3D"Apple-tab=
-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">	</span></span><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">if (rtc_f=
lag =3D=3D RTC_ALARM) {</span></div><div><span class=3D"Apple-tab=
-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">		</span></span><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">print("%=
s RTC boot!\n", MOD);</span></div><div><span class=3D"Apple-tab-s=
pan" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">		</span></span><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">return BR_=
RTC;</span></div><div><span class=3D"Apple-tab-span" style=3D"whi=
te-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">} else if (rtc_flag =3D=3D R=
TC_REBOOT_RECOVERY) {</span></div><div><span class=3D"Apple-tab-s=
pan" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">		</span></span><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">print("%s=20=
REBOOT RECOVERY !\n", MOD);</span></div><div><span class=3D"Apple=
-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">		</span></span><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">retu=
rn BR_REBOOT_RECOVERY;</span></div><div><span class=3D"Apple-tab-=
span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">}</span></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">#endif</span></div><div><span class=3D"Apple-tab-spa=
n" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">BOOTING_TIME_=
PROFILING_LOG("check Boot status-RTC");</span></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#end=
if</span></div><div><span class=3D"Apple-tab-span" style=3D"white=
-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">wdt_flag =3D mtk_wdt_boot_chec=
k();</span></div><div><span class=3D"Apple-tab-span" style=3D"whi=
te-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">switch(wdt_flag) {</span></d=
iv><div><span class=3D"Apple-tab-span" style=3D"white-space:pre">=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">case RE_BOOT_BY_WDT_HW:</span></div><div><=
span class=3D"Apple-tab-span" style=3D"white-space:pre"><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">			</=
span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">print("%s WDT HW reboot!\n", MOD);</span></div><d=
iv><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=09=
		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">return BR_WDT_HW;</span></div><div><span clas=
s=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span></spa=
n><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">case RE_BOOT_BY_THERMAL_DIRECT:</span></div><div><span clas=
s=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">			</span></sp=
an><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">print("%s WDT THERMAL reboot!\n", MOD);</span></div><div><=
span class=3D"Apple-tab-span" style=3D"white-space:pre"><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">			</=
span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">return BR_WDT_THERMAL;</span></div><div><span cla=
ss=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span></sp=
an><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">case RE_BOOT_BY_SPM_THERMAL:</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">			</span></span><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">print("%s WDT THERMAL SPM reboot!\n", MOD);</span></div><div><=
span class=3D"Apple-tab-span" style=3D"white-space:pre"><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">			</=
span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">return BR_WDT_THERMAL_SPM;</span></div><div><span=
 class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		</span>=
</span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">case RE_BOOT_BY_SPM:</span></div><div><span class=3D"A=
pple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">			</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>print("%s WDT SPM reboot!\n", MOD);</span></div><div><span class=
=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">			</span></spa=
n><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">return BR_WDT_SPM;</span></div><div><span class=3D"Apple-ta=
b-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">		</span></span><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">case WD=
T_BY_PASS_PWK_REBOOT:</span></div><div><span class=3D"Apple-tab-s=
pan" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">			</span></span><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">if (rtc_f=
lag =3D=3D RTC_KERNEL_PANIC) {</span></div><div><span class=3D"Ap=
ple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">				</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>print("%s WDT SW reboot (KERNEL PANIC)!\n", MOD);</span></div><d=
iv><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=09=
			</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">return BR_KERNEL_PANIC;</span></div><div><sp=
an class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">			</sp=
an></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">} else if (rtc_flag =3D=3D RTC_KERNEL_RESTART) {</s=
pan></div><div><span class=3D"Apple-tab-span" style=3D"white-spac=
e:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">				</span></span><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">print("%s WDT SW reboot (KERNEL=20=
RESTART)!\n", MOD);</span></div><div><span class=3D"Apple-tab-spa=
n" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">				</span></span><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">return BR_=
KERNEL_RESTART;</span></div><div><span class=3D"Apple-tab-span" s=
tyle=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">			</span></span><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">} else if (rtc_=
flag =3D=3D RTC_KERNEL_AEE) {</span></div><div><span class=3D"App=
le-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">				</span></span><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
print("%s WDT SW reboot (KERNEL AEE)!\n", MOD);</span></div><div>=
<span class=3D"Apple-tab-span" style=3D"white-space:pre"><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">			=09=
</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">return BR_WDT_AEE;</span></div><div><span class=
=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">			</span></spa=
n><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">} else {</span></div><div><span class=3D"Apple-tab-span" st=
yle=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">				</span></span><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">print("%s WDT r=
eboot bypass power key!\n", MOD);</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">				</span></span>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">return BR_WDT_BY_PASS_PWK;</span></div><div><span class=3D"Ap=
ple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">			</span></span><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
}</span></div><div><span class=3D"Apple-tab-span" style=3D"white-=
space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">case WDT_NORMAL_REBOOT:</span>=
</div><div><span class=3D"Apple-tab-span" style=3D"white-space:pr=
e"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">			</span></span><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">if (rtc_flag =3D=3D RTC_REBOOT_BOOTLO=
ADER) {</span></div><div><span class=3D"Apple-tab-span" style=3D"=
white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">				</span></span><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">print("%s WDT SW reboo=
t (BOOTLOADER)!\n", MOD);</span></div><div><span class=3D"Apple-t=
ab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">				</span></span><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">retu=
rn BR_REBOOT_BOOTLOADER;</span></div><div><span class=3D"Apple-ta=
b-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">			</span></span><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">} else=
 {</span></div><div><span class=3D"Apple-tab-span" style=3D"white=
-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">				</span></span><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">/* ex: reboot charger/kpoc=20=
*/</span></div><div><span class=3D"Apple-tab-span" style=3D"white=
-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">				</span></span><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">print("%s WDT normal boot!\=
n", MOD);</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">				</span></span><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">return BR_WDT;</span>=
</div><div><span class=3D"Apple-tab-span" style=3D"white-space:pr=
e"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">			</span></span><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">}</span></div><div><span class=3D"App=
le-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">de=
fault:</span></div><div><span class=3D"Apple-tab-span" style=3D"w=
hite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">			</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">/* do nothing, not WDT r=
eboot */</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">			</span></span><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">break;</span></div><di=
v><br></div><div><span class=3D"Apple-tab-span" style=3D"white-sp=
ace:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">}</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>BOOTING_TIME_PROFILING_LOG("check Boot status-WDT");</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">#if !CFG_FPGA_PLATFORM</span></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbs=
p; /* check power key */</span></div><div><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; if (m=
tk_detect_key(PL_PMIC_PWR_KEY) &amp;&amp; hw_check_battery()) {</=
span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; print("%s Power k=
ey boot!\n", MOD);</span></div><div><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbs=
p; rtc_mark_bypass_pwrkey();</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &=
nbsp; &nbsp; return BR_POWER_KEY;</span></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nb=
sp; }</span></div><div><span class=3D"Apple-tab-span" style=3D"wh=
ite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">BOOTING_TIME_PROFILING_LOG(=
"check Boot status-PWR key");</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#endif</span><=
/div><div><br></div><div><br></div><div><br></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#if !C=
FG_EVB_PLATFORM</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; if (usb_access=
ory_in()) {</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; prin=
t("%s USB/charger boot!\n", MOD);</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">BOOTING_TIME_PROFILING_LOG("check Boot status-usb_accessory_in"=
);</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; return BR_USB;=
</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">&nbsp; &nbsp; }&nbsp;</span></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
&nbsp; &nbsp; //need to unlock rtc PROT</span></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbs=
p; &nbsp; //check after rtc_boot_check() initial finish.</span></=
div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">if (rtc_2sec_reboot_check()) {</span></div=
><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">print("%s 2sec reboot!\n", MOD);</span></di=
v><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">		</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">BOOTING_TIME_PROFILING_LOG("check Boot sta=
tus-rtc_2sec_reboot_check");</span></div><div><span class=3D"Appl=
e-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">		</span></span><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">ret=
urn BR_2SEC_REBOOT;</span></div><div><span class=3D"Apple-tab-spa=
n" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">}</span></div=
><div><br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; print("%s Unknown boot!\n",=20=
MOD);</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">&nbsp; &nbsp; pl_power_off();</span></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">&nbsp; &nbsp; /* should nerver be reached */</span><=
/div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">#endif</span></div><div><br></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &=
nbsp; print("%s Power key boot!\n", MOD);</span></div><div><br></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">&nbsp; &nbsp; return BR_POWER_KEY;</span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">}</span></div><div><br></div><div><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">#if CFG_LOAD_DSP_ROM ||=
 CFG_LOAD_MD_ROM</span></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">int platform_is_three_g(voi=
d)</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">{</span></div><div><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; u32 t=
mp =3D sp_check_platform();</span></div><div><br></div><div><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&=
nbsp; &nbsp; return (tmp &amp; 0x1) ? 0 : 1;</span></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>}</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">#endif</span></div><div><br></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>chip_ver_t platform_chip_ver(void)</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">{</span>=
</div><div><span class=3D"Apple-tab-span" style=3D"white-space:pr=
e"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">chip_ver_t sw_ver;</span></div><div><sp=
an class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span=
></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">unsigned int ver;</span></div><div><span class=3D"App=
le-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">//=20=
&nbsp; &nbsp;unsigned int hw_subcode =3D DRV_Reg32(APHW_SUBCODE);=
</span></div><div><br></div><div><span class=3D"Apple-tab-span" s=
tyle=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">ver =3D DRV_Reg32(=
APSW_VER);</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">if ( 0x0 =3D=3D ver )</s=
pan></div><div><span class=3D"Apple-tab-span" style=3D"white-spac=
e:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">		</span></span><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">sw_ver =3D CHIP_VER_E1;</span></di=
v><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">else</span></div><div><span class=3D"Apple-=
tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">		</span></span><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">sw_ve=
r =3D CHIP_VER_E2;</span></div><div><br></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>return sw_ver;</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">}</span></div><div><br></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">// ------------------------------------------------</sp=
an></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">// detect download mode</span></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">//=
 ------------------------------------------------</span></div><di=
v><br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">bool platform_com_wait_forever_check(void)</=
span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">{</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">#ifdef USBDL_DETECT_VI=
A_KEY</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">&nbsp; &nbsp; /* check download key */=
</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">&nbsp; &nbsp; if (TRUE =3D=3D mtk_detect_ke=
y(COM_WAIT_KEY)) {</span></div><div><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbs=
p; print("%s COM handshake timeout force disable: Key\n", MOD);</=
span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; return TRUE;</spa=
n></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">&nbsp; &nbsp; }</span></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#endif</spa=
n></div><div><br></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">#ifdef USBDL_DETECT_VIA_AT_COMMAN=
D</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; print("platform_com_wait_for=
ever_check\n");</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; /* check SRAMR=
OM_USBDL_TO_DIS */</span></div><div><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; if (USBDL_T=
O_DIS =3D=3D (INREG32(SRAMROM_USBDL_TO_DIS) &amp; USBDL_TO_DIS))=20=
{</span></div><div><span class=3D"Apple-tab-span" style=3D"white-=
space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">print("%s COM handshake timeout=
 force disable: AT Cmd\n", MOD);</span></div><div><span class=3D"=
Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
CLRREG32(SRAMROM_USBDL_TO_DIS, USBDL_TO_DIS);</span></div><div><s=
pan class=3D"Apple-tab-span" style=3D"white-space:pre"><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</spa=
n></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">return TRUE;</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; }</s=
pan></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">#endif</span></div><div><br></div><div><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nb=
sp; &nbsp; return FALSE;</span></div><div><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">}</span></div><div>=
<br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">/* NOTICE: need to revise if platform supports=
 &gt;4G memory size*/</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">u32 platform_memory_si=
ze(void)</span></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">{</span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp=
; static u32 mem_size =3D 0;</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; i=
nt nr_bank;</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; int i;</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">&nbsp; &nbsp; int rank_size[4], *rksize =3D &amp;rank_s=
ize[0];</span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">&nbsp; &nbsp; u32 size =3D 0;</span>=
</div><div><br></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">&nbsp; &nbsp; if (!mem_size) {</spa=
n></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; nr_bank =3D get_dram=
_rank_nr();</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp;</spa=
n></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; get_dram_rank_size(r=
ank_size);</span></div><div><br></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbs=
p; &nbsp; for (i =3D 0; i &lt; nr_bank; i++)</span></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; size +=3D (u32)*rksize=
++;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; mem_size =3D s=
ize;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">&nbsp; &nbsp; }</span></div><div><br></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">&nbsp; &nbsp; return mem_size;</span></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
}</span></div><div><br></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">void charger_reg_rst(void)<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">{</span></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">#ifdef MTK_BQ24296_SU=
PPORT</span></div><div><span class=3D"Apple-tab-span" style=3D"wh=
ite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">bq24296_set_reg_rst(0x1);</=
span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">#endif</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">}</span></div><div=
><br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">void platform_pre_init(void)</span></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">{</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">&nbsp; &nbsp; u32 i2c_ret, pmic_ret;<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">&nbsp; &nbsp; u32 pwrap_ret=3D0,i=3D0;</span=
></div><div><br></div><div><br></div><div><br></div><div><br></di=
v><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">&nbsp; &nbsp; /* init timer */</span></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&n=
bsp; &nbsp; mtk_timer_init();</span></div><div><br></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>&nbsp; &nbsp; /* init boot time */</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &=
nbsp; g_boot_time =3D get_timer(0);</span></div><div><br></div><d=
iv><br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">#if !CFG_FPGA_PLATFORM</span></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>&nbsp; &nbsp; /* init pll */</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=20=
mt_pll_init();</span></div><div><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">#endif</span></div><div><br><=
/div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">&nbsp; &nbsp; /* init uart baudrate when pll on */<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">&nbsp; &nbsp; mtk_uart_init(UART_SRC_CLK_FRQ=
, CFG_LOG_BAUDRATE);</span></div><div><br></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>BOOTING_TIME_PROFILING_LOG("PLL");</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &=
nbsp; /*GPIO init*/</span></div><div><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; mt_gpio_in=
it();</span></div><div><span class=3D"Apple-tab-span" style=3D"wh=
ite-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">BOOTING_TIME_PROFILING_LOG(=
"GPIO");</span></div><div><br></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">#if !CFG_FPGA_PLATFO=
RM</span></div><div><br></div><div><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; #if (CFG_USB=
_UART_SWITCH)</span></div><div><span class=3D"Apple-tab-span" sty=
le=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">if (is_uart_cable_i=
nserted()) {</span></div><div><span class=3D"Apple-tab-span" styl=
e=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">		</span></span><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">print("\n%s Switch=20=
to UART Mode\n", MOD);</span></div><div><span class=3D"Apple-tab-=
span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">		</span></span><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">set_to_ua=
rt_mode();</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">} else {</span></div><di=
v><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	=09=
</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">print("\n%s Keep stay in USB Mode\n", MOD);</sp=
an></div><div><span class=3D"Apple-tab-span" style=3D"white-space=
:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">}</span></div><div><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=
 BOOTING_TIME_PROFILING_LOG("USB SWITCH to UART");</span></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">&nbsp; &nbsp; #endif</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">#endif</span></div=
><div><br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">//#if !CFG_FPGA_PLATFORM</span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">&nbsp; &nbsp; /* init pll post */</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">// &nb=
sp; &nbsp;mt_pll_post_init();</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">//</span><span=
 class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span><=
/span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">BOOTING_TIME_PROFILING_LOG("PLL post");</span></div><di=
v><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">//#endif</span></div><div><br></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=20=
//retry 3 times for pmic wrapper init</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=
 &nbsp; pwrap_init_preloader();</span></div><div><span class=3D"A=
pple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">B=
OOTING_TIME_PROFILING_LOG("PWRAP");</span></div><div><br></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">&nbsp; &nbsp; //i2c hw init</span></div><div><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &n=
bsp; i2c_hw_init();</span></div><div><br></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>//reset Charger IC to avoid system HW shutdown</span></div><div>=
<span class=3D"Apple-tab-span" style=3D"white-space:pre"><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</s=
pan></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">charger_reg_rst();</span></div><div><br></div><div=
><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</=
span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">BOOTING_TIME_PROFILING_LOG("I2C");</span></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">#if !CFG_FPGA_PLATFORM</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=20=
pmic_ret =3D pmic_init();</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;&nbsp=
;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; mt_pll_post_init();</span></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">&nbsp; &nbsp; //mt_arm_pll_sel();</span></div><div><=
span class=3D"Apple-tab-span" style=3D"white-space:pre"><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</sp=
an></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">BOOTING_TIME_PROFILING_LOG("PMIC");</span></div><di=
v><br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">//enable long press reboot function*********=
******</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">#if KPD_PMIC_LPRST_TD!=3D0</span></di=
v><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">#if ONEKEY_REBOOT_NORMAL_MODE_PL</span></di=
v><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">			</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">print("Long Pressed setting\n");</span></d=
iv><div><span class=3D"Apple-tab-span" style=3D"white-space:pre">=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">			</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">pmic_config_interface(MT6392_TOP_RST_MISC,=
 0x01, MT6392_PMIC_RG_PWRKEY_RST_EN_MASK, MT6392_PMIC_RG_PWRKEY_R=
ST_EN_SHIFT);</span></div><div><span class=3D"Apple-tab-span" sty=
le=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">			</span></span><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">pmic_config_interf=
ace(MT6392_TOP_RST_MISC, 0x00, MT6392_PMIC_RG_HOMEKEY_RST_EN_MASK=
, MT6392_PMIC_RG_HOMEKEY_RST_EN_SHIFT);</span></div><div><span cl=
ass=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">			</span></=
span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">pmic_config_interface(MT6392_STRUP_CON3,0x01, MT6392_PMI=
C_RG_FCHR_PU_EN_MASK, MT6392_PMIC_RG_FCHR_PU_EN_SHIFT);//pull up=20=
homekey pin of PMIC for 82 project</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">			</span></span><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">pmic_config_interface(MT6392_TOP_RST_MISC, (U32)KPD_PMIC_LPRST=
_TD, MT6392_PMIC_RG_PWRKEY_RST_TD_MASK, MT6392_PMIC_RG_PWRKEY_RST=
_TD_SHIFT);</span></div><div><span class=3D"Apple-tab-span" style=
=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">#else</span></div><div>=
<span class=3D"Apple-tab-span" style=3D"white-space:pre"><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">			<=
/span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">pmic_config_interface(MT6392_TOP_RST_MISC, 0x01,=
 MT6392_PMIC_RG_PWRKEY_RST_EN_MASK, MT6392_PMIC_RG_PWRKEY_RST_EN_=
SHIFT);</span></div><div><span class=3D"Apple-tab-span" style=3D"=
white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">			</span></span><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">pmic_config_interface(M=
T6392_TOP_RST_MISC, 0x01, MT6392_PMIC_RG_HOMEKEY_RST_EN_MASK, MT6=
392_PMIC_RG_HOMEKEY_RST_EN_SHIFT);</span></div><div><br></div><di=
v><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	=09=
	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">pmic_config_interface(MT6392_STRUP_CON3,0x01,=20=
MT6392_PMIC_RG_FCHR_PU_EN_MASK, MT6392_PMIC_RG_FCHR_PU_EN_SHIFT);=
//pull up homekey pin of PMIC for 82 project</span></div><div><sp=
an class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">			</sp=
an></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">pmic_config_interface(MT6392_TOP_RST_MISC, (U32)KPD=
_PMIC_LPRST_TD, MT6392_PMIC_RG_PWRKEY_RST_TD_MASK, MT6392_PMIC_RG=
_PWRKEY_RST_TD_SHIFT);</span></div><div><span class=3D"Apple-tab-=
span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#endif</sp=
an></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">#else</span></div><div><span class=3D"Apple-tab=
-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">			</span></span><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">pmic_co=
nfig_interface(MT6392_TOP_RST_MISC, 0x00, MT6392_PMIC_RG_PWRKEY_R=
ST_EN_MASK, MT6392_PMIC_RG_PWRKEY_RST_EN_SHIFT);</span></div><div=
><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">		=09=
</span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">pmic_config_interface(MT6392_TOP_RST_MISC, 0x00=
, MT6392_PMIC_RG_HOMEKEY_RST_EN_MASK, MT6392_PMIC_RG_HOMEKEY_RST_=
EN_SHIFT);</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">			</span></span><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">pmic_config_interface(=
MT6392_STRUP_CON3,0x01, MT6392_PMIC_RG_FCHR_PU_EN_MASK, MT6392_PM=
IC_RG_FCHR_PU_EN_SHIFT);//pull up homekey pin of PMIC for 82 proj=
ect</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">#endif</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#else</span></=
div><div><span class=3D"Apple-tab-span" style=3D"white-space:pre"=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">	</span></span><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">pmic_config_interface(MT6392_TOP_RST_MISC,=
 0x00, MT6392_PMIC_RG_PWRKEY_RST_EN_MASK, MT6392_PMIC_RG_PWRKEY_R=
ST_EN_SHIFT);</span></div><div><span class=3D"Apple-tab-span" sty=
le=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">pmic_config_interfa=
ce(MT6392_TOP_RST_MISC, 0x00, MT6392_PMIC_RG_HOMEKEY_RST_EN_MASK,=
 MT6392_PMIC_RG_HOMEKEY_RST_EN_SHIFT);</span></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#endi=
f</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">//****************************************=
********</span></div><div><span class=3D"Apple-tab-span" style=3D=
"white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">BOOTING_TIME_PROFILING_L=
OG("Long Pressed Reboot");</span></div><div><br></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&n=
bsp; &nbsp; print("%s Init I2C: %s(%d)\n", MOD, i2c_ret ? "FAIL"=20=
: "OK", i2c_ret);</span></div><div><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; print("%s In=
it PWRAP: %s(%d)\n", MOD, pwrap_ret ? "FAIL" : "OK", pwrap_ret);<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">&nbsp; &nbsp; print("%s Init PMIC: %s(%d)\n"=
, MOD, pmic_ret ? "FAIL" : "OK", pmic_ret);</span></div><div><br>=
</div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">&nbsp; &nbsp; platform_core_handler();</span></div=
><div><br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; print("%s chip_ver[%x]\n", M=
OD, platform_chip_ver());</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">}</span></div><div=
><br></div><div><br></div><div><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">#ifdef MTK_MT8193_SUPPORT</spa=
n></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">extern int mt8193_init(void);</span></div><div><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">#endif</span></div><div><br></div><div><br></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">void=
 platform_init(void)</span></div><div><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">{</span></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
&nbsp; &nbsp; u32 ret, tmp;</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; boot=
_reason_t reason;</span></div><div><br></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbs=
p; /* check DDR-reserve mode */</span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp=
; check_ddr_reserve_status();</span></div><div><span class=3D"App=
le-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">BOO=
TING_TIME_PROFILING_LOG("chk DDR Reserve status");</span></div><d=
iv><br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">&nbsp; &nbsp; /* init watch dog, will enabl=
e AP watch dog */</span></div><div><span data-wiz-span=3D"data-wi=
z-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; mtk_wdt_init=
();</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; /*init kpd PMIC mode support=
*/</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; set_kpd_pmic_mode();</span><=
/div><div><br></div><div><br></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">#if CFG_MDWDT_DISABLE=
</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">&nbsp; &nbsp; /* no need to disable MD WDT,=
 the code here is for backup reason */</span></div><div><br></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">&nbsp; &nbsp; /* disable MD0 watch dog. */</span></div>=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">&nbsp; &nbsp; DRV_WriteReg32(0x20050000, 0x2200);</span>=
</div><div><br></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">&nbsp; &nbsp; /* disable MD1 watch=20=
dog. */</span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">&nbsp; &nbsp; DRV_WriteReg32(0x30050=
020, 0x2200);</span></div><div><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">#endif</span></div><div><br></=
div><div><br></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">#if !CFG_FPGA_PLATFORM/* FIXME */</sp=
an></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">&nbsp; &nbsp; g_boot_reason =3D reason =3D plat=
form_boot_status();</span></div><div><span class=3D"Apple-tab-spa=
n" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">BOOTING_TIME_=
PROFILING_LOG("check Boot status");</span></div><div><br></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">&nbsp; &nbsp; if (reason =3D=3D BR_RTC || reason =3D=3D BR=
_REBOOT_RECOVERY || reason =3D=3D BR_POWER_KEY || reason =3D=3D B=
R_USB || reason =3D=3D BR_WDT || reason =3D=3D BR_WDT_BY_PASS_PWK=
 || reason =3D=3D BR_2SEC_REBOOT)</span></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nb=
sp; &nbsp; &nbsp; rtc_bbpu_power_on();</span></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#else=
</span></div><div><br></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; g_boot_reason=20=
=3D BR_POWER_KEY;</span></div><div><br></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#endif</spa=
n></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">&nbsp; &nbsp; BOOTING_TIME_PROFILING_LOG("rtc_bb=
pu_power_on");</span></div><div><br></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=20=
mt_xo_init();</span></div><div><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; BOOTING_TIME_PRO=
FILING_LOG("XO initial");</span></div><div><br></div><div><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nb=
sp; &nbsp; enable_PMIC_kpd_clock();</span></div><div><span class=3D=
"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>BOOTING_TIME_PROFILING_LOG("Enable PMIC Kpd clk");</span></div><=
div><br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; /* Optimize Vcore */</span><=
/div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">&nbsp; &nbsp; ptp_init();</span></div><div><br></di=
v><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">&nbsp; &nbsp; /* init memory */</span></div><div><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&=
nbsp; &nbsp; mt_mem_init();</span></div><div><span class=3D"Apple=
-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">BOOTI=
NG_TIME_PROFILING_LOG("mem_init");</span></div><div><br></div><di=
v><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">&nbsp; &nbsp; /*init dram buffer*/</span></div><div><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nb=
sp; &nbsp; init_dram_buffer();</span></div><div><span class=3D"Ap=
ple-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">BO=
OTING_TIME_PROFILING_LOG("Init Dram buf");</span></div><div><br><=
/div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">&nbsp; &nbsp; /* switch log buffer to dram */</span=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">&nbsp; &nbsp; //log_buf_ctrl(1);</span></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">#if 0 /* FIXME */</span></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; /* enab=
le CA9 share bits for USB(30)/NFI(29)/MSDC(28) modules to access=20=
ISRAM */</span></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">&nbsp; &nbsp; tmp =3D DRV_Reg32(0xC=
1000200);</span></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">&nbsp; &nbsp; tmp |=3D ((1&lt;&lt;=
30)|(1&lt;&lt;29)|(1&lt;&lt;28));</span></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nb=
sp; DRV_WriteReg32 (0xC1000200, tmp);</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#endif=
</span></div><div><br></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">#ifdef MTK_MT8193_SUPPORT</s=
pan></div><div><span class=3D"Apple-tab-span" style=3D"white-spac=
e:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">mt8193_init();</span></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>#endif</span></div><div><span class=3D"Apple-tab-span" style=3D"=
white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">ram_console_init();</span=
></div><div><span class=3D"Apple-tab-span" style=3D"white-space:p=
re"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">ram_console_reboot_reason_save(g_rgu_s=
tatus);</span></div><div><span class=3D"Apple-tab-span" style=3D"=
white-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">BOOTING_TIME_PROFILING_LO=
G("Ram console");</span></div><div><br></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbs=
p; /* init device storeage */</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=20=
ret =3D boot_device_init();</span></div><div><span class=3D"Apple=
-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">BOOTI=
NG_TIME_PROFILING_LOG("Boot dev init");</span></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbs=
p; &nbsp; print("%s Init Boot Device: %s(%d)\n", MOD, ret ? "FAIL=
" : "OK", ret);</span></div><div><br></div><div><span data-wiz-sp=
an=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#if CFG_EMERG=
ENCY_DL_SUPPORT</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; /* check if to=
 enter emergency download mode */</span></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nb=
sp; /* Move after dram_inital and boot_device_init.</span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">&nbsp; &nbsp; &nbsp; Use excetution time to remove delay=20=
time in mtk_kpd_gpio_set()*/</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; i=
f (mtk_detect_dl_keys()) {</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbs=
p; &nbsp; platform_emergency_download(CFG_EMERGENCY_DL_TIMEOUT_MS=
);</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; }</span></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#endi=
f</span></div><div><br></div><div><br></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#if CFG_REBO=
OT_TEST</span></div><div><span data-wiz-span=3D"data-wiz-span" st=
yle=3D"font-size: 0.867rem;">&nbsp; &nbsp; mtk_wdt_sw_reset();</s=
pan></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">&nbsp; &nbsp; while(1);</span></div><div><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#=
endif</span></div><div><br></div><div><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">#if !CFG_FPGA_PLATFORM<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">/*In FPGA phase, dram related function shoul=
d by pass*/</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; bootarg.dram_rank_=
num =3D get_dram_rank_nr();</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; get_=
dram_rank_size(bootarg.dram_rank_size);</span></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbs=
p; &nbsp; get_orig_dram_rank_info(&amp;bootarg.orig_dram_info);</=
span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fo=
nt-size: 0.867rem;">&nbsp; &nbsp; setup_mblock_info(&amp;bootarg.=
mblock_info, &amp;bootarg.orig_dram_info, &amp;bootarg.lca_reserv=
ed_mem);</span></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">#else</span></div><div><span data-w=
iz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &=
nbsp; /*pass a defaut dram info to LK*/ //256 + 256MB</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">&nbsp; &nbsp; bootarg.dram_rank_num =3D 0x00000002;</sp=
an></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">&nbsp; &nbsp; bootarg.dram_rank_size[0] =3D 0x1=
0000000;</span></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">&nbsp; &nbsp; bootarg.dram_rank_siz=
e[1] =3D 0x10000000;</span></div><div><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; bootarg.d=
ram_rank_size[2] =3D 0xdfffffff;</span></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbs=
p; bootarg.dram_rank_size[3] =3D 0xfffffdff;</span></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>&nbsp; &nbsp; bootarg.mblock_info.mblock_num =3D 0x00000002;</sp=
an></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">&nbsp; &nbsp; bootarg.mblock_info.mblock[0].sta=
rt =3D 0x40000000;</span></div><div><span data-wiz-span=3D"data-w=
iz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; bootarg.mbl=
ock_info.mblock[0].size =3D 0x10000000;</span></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbs=
p; &nbsp; bootarg.mblock_info.mblock[0].rank =3D 0;</span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">&nbsp; &nbsp; bootarg.mblock_info.mblock[1].start =3D 0x5=
0000000;</span></div><div><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">&nbsp; &nbsp; bootarg.mblock_info.m=
block[1].size =3D 0x0FE00000;</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=20=
bootarg.mblock_info.mblock[1].rank =3D 1;</span></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&n=
bsp; &nbsp; bootarg.mblock_info.mblock[2].start =3D 0;</span></di=
v><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">&nbsp; &nbsp; bootarg.mblock_info.mblock[2].size =3D 0=
;</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; bootarg.mblock_info.mblock[2=
].rank =3D 0;</span></div><div><span data-wiz-span=3D"data-wiz-sp=
an" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; bootarg.mblock_i=
nfo.mblock[3].start =3D 0;</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; boot=
arg.mblock_info.mblock[3].size =3D 0;</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=
 &nbsp; bootarg.mblock_info.mblock[3].rank =3D 0;</span></div><di=
v><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">&nbsp; &nbsp; bootarg.orig_dram_info.rank_num =3D 2;</span>=
</div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">&nbsp; &nbsp; bootarg.orig_dram_info.rank_info[0].=
start =3D 0x40000000;</span></div><div><span data-wiz-span=3D"dat=
a-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; bootarg.=
orig_dram_info.rank_info[0].size =3D 0x10000000;</span></div><div=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">&nbsp; &nbsp; bootarg.orig_dram_info.rank_info[1].start =3D=20=
0x50000000;</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; bootarg.orig_dram_=
info.rank_info[1].size =3D 0x0FE00000;</span></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp=
; &nbsp; bootarg.orig_dram_info.rank_info[2].start =3D 0;</span><=
/div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">&nbsp; &nbsp; bootarg.orig_dram_info.rank_info[2].s=
ize =3D 0;</span></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">&nbsp; &nbsp; bootarg.orig_dram_i=
nfo.rank_info[3].start =3D 0;</span></div><div><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp;=20=
bootarg.orig_dram_info.rank_info[3].size =3D 0;</span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">&nbsp; &nbsp; bootarg.lca_reserved_mem.start =3D 0;</span></d=
iv><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=
 0.867rem;">&nbsp; &nbsp; bootarg.lca_reserved_mem.size =3D 0;</s=
pan></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"fon=
t-size: 0.867rem;">#endif</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">#ifndef MTK_MT8167=
_EVB</span></div><div><span class=3D"Apple-tab-span" style=3D"whi=
te-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">mt_usb11_phy_savecurrent();<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">#endif</span></div><div><br></div><div><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">}=
</span></div><div><br></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">void platform_post_init(void=
)</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">{</span></div><div><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">#if CFG_BATTERY_DET=
ECT</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; /* normal boot to check batt=
ery exists or not */</span></div><div><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; if (g_boo=
t_mode =3D=3D NORMAL_BOOT &amp;&amp; !hw_check_battery() &amp;&am=
p; usb_accessory_in()) {</span></div><div><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp=
; &nbsp; print("%s Wait for battery inserted...\n", MOD);</span><=
/div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; /* disable pmic pre-cha=
rging led */</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; pl_=
close_pre_chr_led();</span></div><div><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &n=
bsp; /* enable force charging mode */</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=
 &nbsp; &nbsp; &nbsp; pl_charging(1);</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=
 &nbsp; &nbsp; &nbsp; do {</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbs=
p; &nbsp; &nbsp; &nbsp; mdelay(300);</span></div><div><span data-=
wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=20=
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* check battery exists or not=
 */</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=20=
if (hw_check_battery())</span></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp;=
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></div><div><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&=
nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* kick all watchdogs */=
</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; p=
latform_wdt_all_kick();</span></div><div><span data-wiz-span=3D"d=
ata-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp;=
 &nbsp; } while(1);</span></div><div><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nb=
sp; /* disable force charging mode */</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=
 &nbsp; &nbsp; &nbsp; pl_charging(0);</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=
 &nbsp; }</span></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">#endif</span></div><div><span clas=
s=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wiz-spa=
n=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span></span=
><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867r=
em;">BOOTING_TIME_PROFILING_LOG("Battery detect");</span></div><d=
iv><br></div><div><br></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">#if CFG_MDJTAG_SWITCH</span>=
</div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">&nbsp; &nbsp; unsigned int md_pwr_con;</span></div=
><div><br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; /* md0 default power on and=20=
clock on */</span></div><div><span data-wiz-span=3D"data-wiz-span=
" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; /* md1 default pow=
er on and clock off */</span></div><div><br></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp;=
 &nbsp; /* ungate md1 */</span></div><div><span data-wiz-span=3D"=
data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; /* rs=
t_b =3D 0 */</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; md_pwr_con =3D DR=
V_Reg32(0x10006280);</span></div><div><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; md_pwr_co=
n &amp;=3D ~0x1;</span></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; DRV_WriteReg3=
2(0x10006280, md_pwr_con);</span></div><div><br></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&n=
bsp; &nbsp; /* enable clksq2 for md1 */</span></div><div><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbs=
p; &nbsp; DRV_WriteReg32(0x10209000, 0x00001137);</span></div><di=
v><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867=
rem;">&nbsp; &nbsp; udelay(200);</span></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbs=
p; DRV_WriteReg32(0x10209000, 0x0000113f);</span></div><div><br><=
/div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">&nbsp; &nbsp; /* rst_b =3D 1 */</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">&nbsp; &nbsp; md_pwr_con =3D DRV_Reg32(0x10006280);</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">&nbsp; &nbsp; md_pwr_con |=3D 0x1;</span></div><div><sp=
an data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;"=
>&nbsp; &nbsp; DRV_WriteReg32(0x10006280, md_pwr_con);</span></di=
v><div><br></div><div><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">&nbsp; &nbsp; /* switch to MD legacy JT=
AG */</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">&nbsp; &nbsp; /* this step is not esse=
ntially required */</span></div><div><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">#endif</span></div><div>=
<span class=3D"Apple-tab-span" style=3D"white-space:pre"><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</s=
pan></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">BOOTING_TIME_PROFILING_LOG("MTJTAG switch");</span=
></div><div><br></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">#if CFG_MDMETA_DETECT</span></div>=
<div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.=
867rem;">&nbsp; &nbsp; if (g_boot_mode =3D=3D META_BOOT || g_boot=
_mode =3D=3D ADVMETA_BOOT) {</span></div><div><span class=3D"Appl=
e-tab-span" style=3D"white-space:pre"><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">	</span></span><span da=
ta-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">/* t=
rigger md0 to enter meta mode */</span></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbs=
p; &nbsp; &nbsp; DRV_WriteReg32(0x20000010, 0x1);</span></div><di=
v><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	<=
/span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">/* trigger md1 to enter meta mode */</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; DRV_WriteReg32(0x30000010,=20=
0x1);</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">&nbsp; &nbsp; } else {</span></div><di=
v><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	<=
/span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">/* md0 does not enter meta mode */</span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">&nbsp; &nbsp; &nbsp; &nbsp; DRV_WriteReg32(0x20000010, 0x=
0);</span></div><div><span class=3D"Apple-tab-span" style=3D"whit=
e-space:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">/* md1 does not enter meta mo=
de */</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; DRV_WriteR=
eg32(0x30000010, 0x0);</span></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; }</span=
></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-s=
ize: 0.867rem;">#endif</span></div><div><span class=3D"Apple-tab-=
span" style=3D"white-space:pre"><span data-wiz-span=3D"data-wiz-s=
pan" style=3D"font-size: 0.867rem;">	</span></span><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">BOOTING_TI=
ME_PROFILING_LOG("MTMETA Detect");</span></div><div><br></div><di=
v><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	<=
/span></span><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">DRV_WriteReg32(0x14000904, 0x0);</span></div><di=
v><span class=3D"Apple-tab-span" style=3D"white-space:pre"><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	<=
/span></span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">&nbsp; &nbsp; platform_parse_bootopt(=
);</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; platform_set_boot_args();</s=
pan></div><div><span class=3D"Apple-tab-span" style=3D"white-spac=
e:pre"><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">	</span></span><span data-wiz-span=3D"data-wiz-span" s=
tyle=3D"font-size: 0.867rem;">BOOTING_TIME_PROFILING_LOG("Boot Ar=
gu");</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">#ifdef DRAM_ETT</span></div><div><span=
 class=3D"Apple-tab-span" style=3D"white-space:pre"><span data-wi=
z-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">	</span><=
/span><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">while(1);</span></div><div><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">#endif</span></div><div>=
<span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867re=
m;">}</span></div><div><br></div><div><span data-wiz-span=3D"data=
-wiz-span" style=3D"font-size: 0.867rem;">void platform_error_han=
dler(void)</span></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">{</span></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nb=
sp; int i =3D 0;</span></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; /* if log is=20=
disabled, re-init log port and enable it */</span></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
&nbsp; &nbsp; if (log_status() =3D=3D 0) {</span></div><div><span=
 data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&=
nbsp; &nbsp; &nbsp; &nbsp; mtk_uart_init(UART_SRC_CLK_FRQ, CFG_LO=
G_BAUDRATE);</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; log=
_ctrl(1);</span></div><div><span data-wiz-span=3D"data-wiz-span"=20=
style=3D"font-size: 0.867rem;">&nbsp; &nbsp; }</span></div><div><=
span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem=
;">&nbsp; &nbsp; print("PL fatal error...\n");</span></div><div><=
br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font=
-size: 0.867rem;">&nbsp; &nbsp; #if !CFG_FPGA_PLATFORM</span></di=
v><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">&nbsp; &nbsp; sec_util_brom_download_recovery_check();=
</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">&nbsp; &nbsp; #endif</span></div><div><br><=
/div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-siz=
e: 0.867rem;">#if defined(ONEKEY_REBOOT_NORMAL_MODE_PL) || define=
d(TWOKEY_REBOOT_NORMAL_MODE_PL)</span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp=
; /* add delay for Long Preessed Reboot count down</span></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">&nbsp; &nbsp; &nbsp; &nbsp;only pressed power key will hav=
e this delay */</span></div><div><span data-wiz-span=3D"data-wiz-=
span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; print("PL dela=
y for Long Press Reboot\n");</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; f=
or ( i=3D3; i &gt; 0;i-- ) {</span></div><div><span data-wiz-span=
=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &=
nbsp; &nbsp; if (mtk_detect_key(PL_PMIC_PWR_KEY)) {</span></div><=
div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.8=
67rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; platform_wdt_ki=
ck();</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nb=
sp; mdelay(5000); &nbsp; //delay 5s/per kick,</span></div><div><s=
pan data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;=
">&nbsp; &nbsp; &nbsp; &nbsp; } else {</span></div><div><span dat=
a-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp=
; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break; //Power Key Release,<=
/span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"f=
ont-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; }</span></div><d=
iv><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.86=
7rem;">&nbsp; &nbsp; }</span></div><div><span data-wiz-span=3D"da=
ta-wiz-span" style=3D"font-size: 0.867rem;">#endif</span></div><d=
iv><br></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"=
font-size: 0.867rem;">&nbsp; &nbsp; /* enter emergency download m=
ode */</span></div><div><span data-wiz-span=3D"data-wiz-span" sty=
le=3D"font-size: 0.867rem;">&nbsp; &nbsp; #if CFG_EMERGENCY_DL_SU=
PPORT</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">&nbsp; &nbsp; platform_emergency_downl=
oad(CFG_EMERGENCY_DL_TIMEOUT_MS);</span></div><div><span data-wiz=
-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nb=
sp; #endif</span></div><div><br></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; whil=
e(1);</span></div><div><span data-wiz-span=3D"data-wiz-span" styl=
e=3D"font-size: 0.867rem;">}</span></div><div><br></div><div><spa=
n data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">=
void platform_assert(char *file, int line, char *expr)</span></di=
v><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size:=20=
0.867rem;">{</span></div><div><span data-wiz-span=3D"data-wiz-spa=
n" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; print("&lt;ASSERT=
&gt; %s:line %d %s\n", file, line, expr);</span></div><div><span=20=
data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&n=
bsp; &nbsp; platform_error_handler();</span></div><div><span data=
-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">}</spa=
n></div><div><br></div><div><span data-wiz-span=3D"data-wiz-span"=
 style=3D"font-size: 0.867rem;">int aarch64_slt_done(void)</span>=
</div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-si=
ze: 0.867rem;">{</span></div><div><span data-wiz-span=3D"data-wiz=
-span" style=3D"font-size: 0.867rem;">#if CFG_LOAD_SLT_AARCH64_KE=
RNEL</span></div><div><span data-wiz-span=3D"data-wiz-span" style=
=3D"font-size: 0.867rem;">&nbsp; &nbsp; if ((*(unsigned int*) AAR=
CH64_SLT_DONE_ADDRESS) =3D=3D AARCH64_SLT_DONE_MAGIC)</span></div=
><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size: 0=
.867rem;">&nbsp; &nbsp; {</span></div><div><span data-wiz-span=3D=
"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; &nbs=
p; &nbsp; return 1;</span></div><div><span data-wiz-span=3D"data-=
wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp; }</span></=
div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-size=
: 0.867rem;">&nbsp; &nbsp; else</span></div><div><span data-wiz-s=
pan=3D"data-wiz-span" style=3D"font-size: 0.867rem;">&nbsp; &nbsp=
; {</span></div><div><span data-wiz-span=3D"data-wiz-span" style=3D=
"font-size: 0.867rem;">&nbsp; &nbsp; &nbsp; &nbsp; return 0;</spa=
n></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">&nbsp; &nbsp; }</span></div><div><span data-wiz-=
span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">#endif</spa=
n></div><div><span data-wiz-span=3D"data-wiz-span" style=3D"font-=
size: 0.867rem;">&nbsp; &nbsp; return 1;</span></div><div><span d=
ata-wiz-span=3D"data-wiz-span" style=3D"font-size: 0.867rem;">}</=
span></div></div></body></html>

------=_Next_Part_0138457484.723--

------=_Next_Part_0415372452.859--

